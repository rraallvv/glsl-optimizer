varying highp vec2 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD0;
uniform mediump float _TranslucencyViewDependency;
uniform sampler2D _TranslucencyMap;
uniform mediump vec3 _TranslucencyColor;
uniform mediump float _ShadowStrength;
uniform sampler2D _MainTex;
uniform sampler2D _LightTexture0;
uniform highp vec4 _LightColor0;
uniform highp float _Cutoff;
uniform highp vec4 _Color;
uniform sampler2D _BumpSpecMap;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 lightDir_2;
  mediump vec3 tmpvar_3;
  mediump float tmpvar_4;
  mediump float tmpvar_5;
  mediump vec4 norspc_6;
  mediump vec4 trngls_7;
  mediump vec4 c_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, xlv_TEXCOORD0);
  c_8 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = ((c_8.xyz * _Color.xyz) * xlv_COLOR0.w);
  tmpvar_3 = tmpvar_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_TranslucencyMap, xlv_TEXCOORD0);
  trngls_7 = tmpvar_11;
  highp float tmpvar_12;
  tmpvar_12 = (trngls_7.w * _Color.x);
  tmpvar_4 = tmpvar_12;
  tmpvar_5 = c_8.w;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_BumpSpecMap, xlv_TEXCOORD0);
  norspc_6 = tmpvar_13;
  mediump vec4 normal_14;
  normal_14.xy = ((norspc_6.wy * 2.00000) - 1.00000);
  normal_14.z = sqrt(((1.00000 - (normal_14.x * normal_14.x)) - (normal_14.y * normal_14.y)));
  highp float x_15;
  x_15 = (c_8.w - _Cutoff);
  if ((x_15 < 0.00000)) {
    discard;
  };
  lightDir_2 = xlv_TEXCOORD1;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize(xlv_TEXCOORD2);
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_LightTexture0, xlv_TEXCOORD3);
  mediump vec3 viewDir_18;
  viewDir_18 = tmpvar_16;
  mediump float atten_19;
  atten_19 = tmpvar_17.w;
  mediump vec4 c_20;
  mediump float spec_21;
  mediump float tmpvar_22;
  tmpvar_22 = dot (normal_14.xyz, lightDir_2);
  spec_21 = (pow (max (0.00000, dot (normal_14.xyz, normalize((lightDir_2 + viewDir_18)))), (norspc_6.x * 128.000)) * tmpvar_4);
  c_20.xyz = (tmpvar_3 * ((((mix (clamp (-(tmpvar_22), 0.00000, 1.00000), clamp (dot (viewDir_18, -(lightDir_2)), 0.00000, 1.00000), _TranslucencyViewDependency) * trngls_7.z) * _TranslucencyColor) * 2.00000) + max (0.00000, ((tmpvar_22 * 0.600000) + 0.400000))));
  highp vec3 tmpvar_23;
  tmpvar_23 = ((c_20.xyz * _LightColor0.xyz) + spec_21);
  c_20.xyz = tmpvar_23;
  c_20.xyz = (c_20.xyz * mix (2.00000, (atten_19 * 2.00000), _ShadowStrength));
  c_1.xyz = c_20.xyz;
  c_1.w = tmpvar_5;
  gl_FragData[0] = c_1;
}

