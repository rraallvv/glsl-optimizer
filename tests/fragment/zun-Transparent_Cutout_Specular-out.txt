uniform vec4 _Color;
uniform float _Cutoff;
uniform vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform float _Shininess;
uniform vec4 _SpecColor;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = gl_TexCoord[1].xyz;
  vec3 tmpvar_2;
  tmpvar_2 = gl_TexCoord[2].xyz;
  vec4 c_3;
  vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, gl_TexCoord[0].xy);
  float tmpvar_5;
  tmpvar_5 = (tmpvar_4.w * _Color.w);
  float x_6;
  x_6 = (tmpvar_5 - _Cutoff);
  if ((x_6 < 0.0)) {
    discard;
  };
  vec4 c_7;
  float tmpvar_8;
  tmpvar_8 = (pow (max (0.0, 
    dot (tmpvar_1, normalize((tmpvar_2 + normalize(gl_TexCoord[3].xyz))))
  ), (_Shininess * 128.0)) * tmpvar_4.w);
  c_7.xyz = (((
    ((tmpvar_4.xyz * _Color.xyz) * _LightColor0.xyz)
   * 
    max (0.0, dot (tmpvar_1, tmpvar_2))
  ) + (
    (_LightColor0.xyz * _SpecColor.xyz)
   * tmpvar_8)) * 2.0);
  c_7.w = (tmpvar_5 + ((_LightColor0.w * _SpecColor.w) * tmpvar_8));
  c_3.xyz = c_7.xyz;
  c_3.w = tmpvar_5;
  gl_FragData[0] = c_3;
}


// stats: 23 alu 2 tex 1 flow
// inputs: 1
//  #0: gl_TexCoord (high float) 4x1 [4] loc 4
// uniforms: 5 (total size: 0)
//  #0: _Color (high float) 4x1 [-1]
//  #1: _Cutoff (high float) 1x1 [-1]
//  #2: _LightColor0 (high float) 4x1 [-1]
//  #3: _Shininess (high float) 1x1 [-1]
//  #4: _SpecColor (high float) 4x1 [-1]
// textures: 1
//  #0: _MainTex (high 2d) 0x0 [-1]
