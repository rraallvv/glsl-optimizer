uniform sampler2D _TranslucencyMap;
uniform vec4 _TranslucencyColor;
uniform float _Shininess;
uniform sampler2D _MainTex;
uniform sampler2D _LightTextureB0;
uniform samplerCube _LightTexture0;
uniform vec4 _LightColor0;
uniform sampler2D _GlossMap;
uniform float _Cutoff;
uniform sampler2D _BumpMap;
void main ()
{
  vec2 tmpvar_1;
  vec3 tmpvar_2;
  vec3 tmpvar_3;
  vec3 tmpvar_4;
  tmpvar_1 = gl_TexCoord[0].xy;
  tmpvar_2 = gl_TexCoord[1].xyz;
  tmpvar_3 = gl_TexCoord[2].xyz;
  tmpvar_4 = gl_TexCoord[3].xyz;
  vec4 c_5;
  vec3 tmpvar_6;
  vec3 tmpvar_7;
  float tmpvar_8;
  vec4 tmpvar_9;
  tmpvar_9 = texture2D (_MainTex, tmpvar_1);
  tmpvar_6 = (tmpvar_9.xyz * gl_Color.xyz);
  tmpvar_7 = (texture2D (_TranslucencyMap, tmpvar_1).xyz * _TranslucencyColor.xyz);
  vec4 tmpvar_10;
  tmpvar_10 = texture2D (_GlossMap, tmpvar_1);
  tmpvar_8 = (tmpvar_9.w * gl_Color.w);
  vec4 normal_11;
  normal_11.xy = ((texture2D (_BumpMap, tmpvar_1).wy * 2.00000) - 1.00000);
  normal_11.z = sqrt(((1.00000 - (normal_11.x * normal_11.x)) - (normal_11.y * normal_11.y)));
  float x_12;
  x_12 = (tmpvar_8 - _Cutoff);
  if ((x_12 < 0.00000)) {
    discard;
  };
  vec3 tmpvar_13;
  tmpvar_13 = normalize(tmpvar_2);
  vec4 c_14;
  vec3 col_15;
  float tmpvar_16;
  tmpvar_16 = dot (normal_11.xyz, tmpvar_13);
  float tmpvar_17;
  tmpvar_17 = max (0.00000, -(tmpvar_16));
  col_15 = (tmpvar_6 * (max (0.00000, ((tmpvar_16 * 0.500000) + 0.500000)) + ((tmpvar_7 * tmpvar_17) * 2.00000)));
  vec3 tmpvar_18;
  tmpvar_18 = ((col_15 + ((pow (max (0.00000, dot (normal_11.xyz, normalize((tmpvar_13 + normalize(tmpvar_3))))), (_Shininess * 128.000)) * tmpvar_10.w) * (1.00000 - clamp (ceil(tmpvar_17), 0.00000, 1.00000)))) * _LightColor0.xyz);
  col_15 = tmpvar_18;
  c_14.xyz = (tmpvar_18 * ((texture2D (_LightTextureB0, vec2(dot (tmpvar_4, tmpvar_4))).w * textureCube (_LightTexture0, tmpvar_4).w) * 2.00000));
  c_5.xyz = c_14.xyz;
  c_5.w = tmpvar_8;
  gl_FragData[0] = c_5;
}

