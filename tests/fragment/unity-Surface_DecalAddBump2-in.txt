struct v2f_vertex_lit {
    vec2 uv;
    vec4 diff;
    vec4 spec;
};
struct v2f_img {
    vec4 pos;
    vec2 uv;
};
struct appdata_img {
    vec4 vertex;
    vec2 texcoord;
};
struct SurfaceOutput {
    vec3 Albedo;
    vec3 Normal;
    vec3 Emission;
    float Specular;
    float Gloss;
    float Alpha;
};
struct Input {
    vec2 uv_Decal;
    vec2 uv_DecalBump;
};
struct v2f_surf {
    vec4 pos;
    float fog;
    vec4 hip_pack0;
    vec2 hip_lmap;
};
struct appdata_full {
    vec4 vertex;
    vec4 tangent;
    vec3 normal;
    vec4 texcoord;
    vec4 texcoord1;
    vec4 color;
};
uniform sampler2D _Decal;
uniform sampler2D _DecalBump;
uniform sampler2D unity_Lightmap;
vec4 UnpackNormal( in vec4 packednormal );
void surf( in Input IN, inout SurfaceOutput o );
vec3 DecodeLightmap( in vec4 color );
vec4 frag_surf( in v2f_surf IN );
vec4 UnpackNormal( in vec4 packednormal ) {
    vec4 normal;
    normal.xy  = ((packednormal.wy  * 2.00000) - 1.00000);
    normal.z  = sqrt( ((1.00000 - (normal.x  * normal.x )) - (normal.y  * normal.y )) );
    return normal;
}
void surf( in Input IN, inout SurfaceOutput o ) {
    o.Albedo = (texture2D( _Decal, IN.uv_Decal).xyz  * 0.500000);
    o.Normal = vec3( UnpackNormal( texture2D( _DecalBump, IN.uv_DecalBump)));
}
vec3 DecodeLightmap( in vec4 color ) {
    return (2.00000 * color.xyz );
}
vec4 frag_surf( in v2f_surf IN ) {
    Input surfIN;
    SurfaceOutput o;
    float atten = 1.00000;
    vec3 lmFull;
    vec4 c;
    surfIN.uv_Decal = IN.hip_pack0.xy ;
    surfIN.uv_DecalBump = IN.hip_pack0.zw ;
    o.Albedo = vec3( 0.000000);
    o.Emission = vec3( 0.000000);
    o.Specular = 0.000000;
    o.Alpha = 0.000000;
    o.Gloss = 0.000000;
    surf( surfIN, o);
    lmFull = DecodeLightmap( texture2D( unity_Lightmap, IN.hip_lmap.xy ));
    c.xyz  = (o.Albedo * lmFull);
    c.w  = o.Alpha;
    return c;
}
varying vec4 xlv_FOG;
void main() {
    vec4 xl_retval;
    v2f_surf xlt_IN;
    xlt_IN.pos = vec4(0.0);
    xlt_IN.fog = float( xlv_FOG);
    xlt_IN.hip_pack0 = vec4( gl_TexCoord[0]);
    xlt_IN.hip_lmap = vec2( gl_TexCoord[1]);
    xl_retval = frag_surf( xlt_IN);
    gl_FragData[0] = vec4( xl_retval);
}
