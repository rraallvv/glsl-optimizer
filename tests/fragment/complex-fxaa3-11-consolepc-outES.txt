#extension GL_EXT_shader_texture_lod : enable
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_TexelSize;
uniform sampler2D _MainTex;
void main ()
{
  highp vec4 fxaaConsoleRcpFrameOpt;
  fxaaConsoleRcpFrameOpt = (_MainTex_TexelSize.xyxy * vec4(-0.5, -0.5, 0.5, 0.5));
  highp vec4 fxaaConsoleRcpFrameOpt2;
  fxaaConsoleRcpFrameOpt2 = (_MainTex_TexelSize.xyxy * vec4(-2.0, -2.0, 2.0, 2.0));
  highp vec4 tmpvar_1;
  highp vec4 rgbyB;
  highp vec2 dir;
  highp vec4 tmpvar_2;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_2.xy = xlv_TEXCOORD1.xy;
  highp vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2DLod (_MainTex, tmpvar_2.xy, 0.0);
  tmpvar_3 = tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = tmpvar_3.y;
  highp vec4 tmpvar_6;
  tmpvar_6.zw = vec2(0.0, 0.0);
  tmpvar_6.xy = xlv_TEXCOORD1.xw;
  highp vec4 tmpvar_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DLod (_MainTex, tmpvar_6.xy, 0.0);
  tmpvar_7 = tmpvar_8;
  highp float tmpvar_9;
  tmpvar_9 = tmpvar_7.y;
  highp vec4 tmpvar_10;
  tmpvar_10.zw = vec2(0.0, 0.0);
  tmpvar_10.xy = xlv_TEXCOORD1.zy;
  highp vec4 tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2DLod (_MainTex, tmpvar_10.xy, 0.0);
  tmpvar_11 = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13.zw = vec2(0.0, 0.0);
  tmpvar_13.xy = xlv_TEXCOORD1.zw;
  highp vec4 tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2DLod (_MainTex, tmpvar_13.xy, 0.0);
  tmpvar_14 = tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = tmpvar_14.y;
  highp vec4 tmpvar_17;
  tmpvar_17.zw = vec2(0.0, 0.0);
  tmpvar_17.xy = xlv_TEXCOORD0;
  highp vec4 tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2DLod (_MainTex, tmpvar_17.xy, 0.0);
  tmpvar_18 = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = tmpvar_18.y;
  highp float tmpvar_21;
  tmpvar_21 = (tmpvar_11.y + 0.00260417);
  highp float tmpvar_22;
  tmpvar_22 = max (max (tmpvar_21, tmpvar_16), max (tmpvar_5, tmpvar_9));
  highp float tmpvar_23;
  tmpvar_23 = min (min (tmpvar_21, tmpvar_16), min (tmpvar_5, tmpvar_9));
  highp float tmpvar_24;
  tmpvar_24 = max (0.05, (tmpvar_22 * 0.125));
  highp float tmpvar_25;
  tmpvar_25 = (tmpvar_7.y - tmpvar_21);
  highp float tmpvar_26;
  tmpvar_26 = (max (tmpvar_22, tmpvar_20) - min (tmpvar_23, tmpvar_20));
  highp float tmpvar_27;
  tmpvar_27 = (tmpvar_14.y - tmpvar_3.y);
  if ((tmpvar_26 < tmpvar_24)) {
    tmpvar_1 = tmpvar_18;
  } else {
    dir.x = (tmpvar_25 + tmpvar_27);
    dir.y = (tmpvar_25 - tmpvar_27);
    highp vec2 tmpvar_28;
    tmpvar_28 = normalize (dir);
    highp vec4 tmpvar_29;
    tmpvar_29.zw = vec2(0.0, 0.0);
    tmpvar_29.xy = (xlv_TEXCOORD0 - (tmpvar_28 * fxaaConsoleRcpFrameOpt.zw));
    highp vec4 tmpvar_30;
    lowp vec4 tmpvar_31;
    tmpvar_31 = texture2DLod (_MainTex, tmpvar_29.xy, 0.0);
    tmpvar_30 = tmpvar_31;
    highp vec4 tmpvar_32;
    tmpvar_32.zw = vec2(0.0, 0.0);
    tmpvar_32.xy = (xlv_TEXCOORD0 + (tmpvar_28 * fxaaConsoleRcpFrameOpt.zw));
    highp vec4 tmpvar_33;
    lowp vec4 tmpvar_34;
    tmpvar_34 = texture2DLod (_MainTex, tmpvar_32.xy, 0.0);
    tmpvar_33 = tmpvar_34;
    highp vec2 tmpvar_35;
    tmpvar_35 = clamp ((tmpvar_28 / (min (abs (tmpvar_28.x), abs (tmpvar_28.y)) * 8.0)), vec2(-2.0, -2.0), vec2(2.0, 2.0));
    highp vec4 tmpvar_36;
    tmpvar_36.zw = vec2(0.0, 0.0);
    tmpvar_36.xy = (xlv_TEXCOORD0 - (tmpvar_35 * fxaaConsoleRcpFrameOpt2.zw));
    highp vec4 tmpvar_37;
    lowp vec4 tmpvar_38;
    tmpvar_38 = texture2DLod (_MainTex, tmpvar_36.xy, 0.0);
    tmpvar_37 = tmpvar_38;
    highp vec4 tmpvar_39;
    tmpvar_39.zw = vec2(0.0, 0.0);
    tmpvar_39.xy = (xlv_TEXCOORD0 + (tmpvar_35 * fxaaConsoleRcpFrameOpt2.zw));
    highp vec4 tmpvar_40;
    lowp vec4 tmpvar_41;
    tmpvar_41 = texture2DLod (_MainTex, tmpvar_39.xy, 0.0);
    tmpvar_40 = tmpvar_41;
    highp vec4 tmpvar_42;
    tmpvar_42 = (tmpvar_30 + tmpvar_33);
    highp vec4 tmpvar_43;
    tmpvar_43 = (((tmpvar_37 + tmpvar_40) * 0.25) + (tmpvar_42 * 0.25));
    rgbyB = tmpvar_43;
    bool tmpvar_44;
    if ((tmpvar_43.y < tmpvar_23)) {
      tmpvar_44 = bool(1);
    } else {
      tmpvar_44 = (tmpvar_43.y > tmpvar_22);
    };
    if (tmpvar_44) {
      rgbyB.xyz = (tmpvar_42.xyz * 0.5);
    };
    tmpvar_1 = rgbyB;
  };
  gl_FragData[0] = tmpvar_1;
}

