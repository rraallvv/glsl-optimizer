#extension GL_ARB_shader_texture_lod : enable
varying vec2 xlv_TEXCOORD0;
uniform vec4 _MainTex_TexelSize;
uniform sampler2D _MainTex;
void main ()
{
  vec2 rcpFrame_1;
  rcpFrame_1 = _MainTex_TexelSize.xy;
  vec3 tmpvar_2;
  int i_3;
  bool doneP_4;
  bool doneN_5;
  float lumaEndP_6;
  float lumaEndN_7;
  vec2 offNP_8;
  vec2 posP_9;
  vec2 posN_10;
  float gradientN_11;
  float lengthSign_12;
  vec3 rgbL_13;
  float lumaS_14;
  float lumaN_15;
  vec3 rgbM_16;
  doneN_5 = bool(0);
  doneP_4 = bool(0);
  i_3 = 0;
  vec4 tmpvar_17;
  tmpvar_17.zw = vec2(0.00000, 0.00000);
  tmpvar_17.xy = (xlv_TEXCOORD0 + (vec2(0.00000, -1.00000) * _MainTex_TexelSize.xy));
  vec4 tmpvar_18;
  tmpvar_18 = texture2DLod (_MainTex, tmpvar_17.xy, 0.00000);
  vec4 tmpvar_19;
  tmpvar_19.zw = vec2(0.00000, 0.00000);
  tmpvar_19.xy = (xlv_TEXCOORD0 + (vec2(-1.00000, 0.00000) * _MainTex_TexelSize.xy));
  vec4 tmpvar_20;
  tmpvar_20 = texture2DLod (_MainTex, tmpvar_19.xy, 0.00000);
  vec4 tmpvar_21;
  tmpvar_21 = texture2DLod (_MainTex, xlv_TEXCOORD0, 0.00000);
  rgbM_16 = tmpvar_21.xyz;
  vec4 tmpvar_22;
  tmpvar_22.zw = vec2(0.00000, 0.00000);
  tmpvar_22.xy = (xlv_TEXCOORD0 + (vec2(1.00000, 0.00000) * _MainTex_TexelSize.xy));
  vec4 tmpvar_23;
  tmpvar_23 = texture2DLod (_MainTex, tmpvar_22.xy, 0.00000);
  vec4 tmpvar_24;
  tmpvar_24.zw = vec2(0.00000, 0.00000);
  tmpvar_24.xy = (xlv_TEXCOORD0 + (vec2(0.00000, 1.00000) * _MainTex_TexelSize.xy));
  vec4 tmpvar_25;
  tmpvar_25 = texture2DLod (_MainTex, tmpvar_24.xy, 0.00000);
  float tmpvar_26;
  tmpvar_26 = ((tmpvar_18.y * 1.96321) + tmpvar_18.x);
  lumaN_15 = tmpvar_26;
  float tmpvar_27;
  tmpvar_27 = ((tmpvar_20.y * 1.96321) + tmpvar_20.x);
  float tmpvar_28;
  tmpvar_28 = ((tmpvar_21.y * 1.96321) + tmpvar_21.x);
  float tmpvar_29;
  tmpvar_29 = ((tmpvar_23.y * 1.96321) + tmpvar_23.x);
  float tmpvar_30;
  tmpvar_30 = ((tmpvar_25.y * 1.96321) + tmpvar_25.x);
  lumaS_14 = tmpvar_30;
  float tmpvar_31;
  tmpvar_31 = max (tmpvar_28, max (max (tmpvar_26, tmpvar_27), max (tmpvar_30, tmpvar_29)));
  float tmpvar_32;
  tmpvar_32 = (tmpvar_31 - min (tmpvar_28, min (min (tmpvar_26, tmpvar_27), min (tmpvar_30, tmpvar_29))));
  float tmpvar_33;
  tmpvar_33 = max (0.0416667, (tmpvar_31 * 0.125000));
  if ((tmpvar_32 < tmpvar_33)) {
    tmpvar_2 = rgbM_16;
  } else {
    rgbL_13 = ((((tmpvar_18.xyz + tmpvar_20.xyz) + tmpvar_21.xyz) + tmpvar_23.xyz) + tmpvar_25.xyz);
    float tmpvar_34;
    tmpvar_34 = min (0.750000, (max (0.00000, ((abs((((((tmpvar_26 + tmpvar_27) + tmpvar_29) + tmpvar_30) * 0.250000) - tmpvar_28)) / tmpvar_32) - 0.250000)) * 1.33333));
    vec4 tmpvar_35;
    tmpvar_35.zw = vec2(0.00000, 0.00000);
    tmpvar_35.xy = (xlv_TEXCOORD0 + (vec2(-1.00000, -1.00000) * _MainTex_TexelSize.xy));
    vec4 tmpvar_36;
    tmpvar_36 = texture2DLod (_MainTex, tmpvar_35.xy, 0.00000);
    vec4 tmpvar_37;
    tmpvar_37.zw = vec2(0.00000, 0.00000);
    tmpvar_37.xy = (xlv_TEXCOORD0 + (vec2(1.00000, -1.00000) * _MainTex_TexelSize.xy));
    vec4 tmpvar_38;
    tmpvar_38 = texture2DLod (_MainTex, tmpvar_37.xy, 0.00000);
    vec4 tmpvar_39;
    tmpvar_39.zw = vec2(0.00000, 0.00000);
    tmpvar_39.xy = (xlv_TEXCOORD0 + (vec2(-1.00000, 1.00000) * _MainTex_TexelSize.xy));
    vec4 tmpvar_40;
    tmpvar_40 = texture2DLod (_MainTex, tmpvar_39.xy, 0.00000);
    vec4 tmpvar_41;
    tmpvar_41.zw = vec2(0.00000, 0.00000);
    tmpvar_41.xy = (xlv_TEXCOORD0 + _MainTex_TexelSize.xy);
    vec4 tmpvar_42;
    tmpvar_42 = texture2DLod (_MainTex, tmpvar_41.xy, 0.00000);
    rgbL_13 = ((rgbL_13 + (((tmpvar_36.xyz + tmpvar_38.xyz) + tmpvar_40.xyz) + tmpvar_42.xyz)) * vec3(0.111111, 0.111111, 0.111111));
    float tmpvar_43;
    tmpvar_43 = ((tmpvar_36.y * 1.96321) + tmpvar_36.x);
    float tmpvar_44;
    tmpvar_44 = ((tmpvar_38.y * 1.96321) + tmpvar_38.x);
    float tmpvar_45;
    tmpvar_45 = ((tmpvar_40.y * 1.96321) + tmpvar_40.x);
    float tmpvar_46;
    tmpvar_46 = ((tmpvar_42.y * 1.96321) + tmpvar_42.x);
    bool tmpvar_47;
    tmpvar_47 = (((abs((((0.250000 * tmpvar_43) + (-0.500000 * tmpvar_27)) + (0.250000 * tmpvar_45))) + abs((((0.500000 * tmpvar_26) + (-1.00000 * tmpvar_28)) + (0.500000 * tmpvar_30)))) + abs((((0.250000 * tmpvar_44) + (-0.500000 * tmpvar_29)) + (0.250000 * tmpvar_46)))) >= ((abs((((0.250000 * tmpvar_43) + (-0.500000 * tmpvar_26)) + (0.250000 * tmpvar_44))) + abs((((0.500000 * tmpvar_27) + (-1.00000 * tmpvar_28)) + (0.500000 * tmpvar_29)))) + abs((((0.250000 * tmpvar_45) + (-0.500000 * tmpvar_30)) + (0.250000 * tmpvar_46)))));
    float tmpvar_48;
    if (tmpvar_47) {
      tmpvar_48 = -(_MainTex_TexelSize.y);
    } else {
      tmpvar_48 = -(_MainTex_TexelSize.x);
    };
    lengthSign_12 = tmpvar_48;
    if (!(tmpvar_47)) {
      lumaN_15 = tmpvar_27;
    };
    if (!(tmpvar_47)) {
      lumaS_14 = tmpvar_29;
    };
    float tmpvar_49;
    tmpvar_49 = abs((lumaN_15 - tmpvar_28));
    gradientN_11 = tmpvar_49;
    float tmpvar_50;
    tmpvar_50 = abs((lumaS_14 - tmpvar_28));
    lumaN_15 = ((lumaN_15 + tmpvar_28) * 0.500000);
    float tmpvar_51;
    tmpvar_51 = ((lumaS_14 + tmpvar_28) * 0.500000);
    lumaS_14 = tmpvar_51;
    bool tmpvar_52;
    tmpvar_52 = (tmpvar_49 >= tmpvar_50);
    if (!(tmpvar_52)) {
      lumaN_15 = tmpvar_51;
    };
    if (!(tmpvar_52)) {
      gradientN_11 = tmpvar_50;
    };
    if (!(tmpvar_52)) {
      lengthSign_12 = (tmpvar_48 * -1.00000);
    };
    float tmpvar_53;
    if (tmpvar_47) {
      tmpvar_53 = 0.00000;
    } else {
      tmpvar_53 = (lengthSign_12 * 0.500000);
    };
    posN_10.x = (xlv_TEXCOORD0.x + tmpvar_53);
    float tmpvar_54;
    if (tmpvar_47) {
      tmpvar_54 = (lengthSign_12 * 0.500000);
    } else {
      tmpvar_54 = 0.00000;
    };
    posN_10.y = (xlv_TEXCOORD0.y + tmpvar_54);
    gradientN_11 = (gradientN_11 * 0.250000);
    posP_9 = posN_10;
    vec2 tmpvar_55;
    if (tmpvar_47) {
      vec2 tmpvar_56;
      tmpvar_56.y = 0.00000;
      tmpvar_56.x = rcpFrame_1.x;
      tmpvar_55 = tmpvar_56;
    } else {
      vec2 tmpvar_57;
      tmpvar_57.x = 0.00000;
      tmpvar_57.y = rcpFrame_1.y;
      tmpvar_55 = tmpvar_57;
    };
    offNP_8 = tmpvar_55;
    lumaEndN_7 = lumaN_15;
    lumaEndP_6 = lumaN_15;
    posN_10 = (posN_10 + (tmpvar_55 * vec2(-1.00000, -1.00000)));
    posP_9 = (posP_9 + tmpvar_55);
    while (true) {
      if ((i_3 >= 16)) {
        break;
      };
      if (!(doneN_5)) {
        vec4 tmpvar_58;
        tmpvar_58 = texture2DLod (_MainTex, posN_10, 0.00000);
        lumaEndN_7 = ((tmpvar_58.y * 1.96321) + tmpvar_58.x);
      };
      if (!(doneP_4)) {
        vec4 tmpvar_59;
        tmpvar_59 = texture2DLod (_MainTex, posP_9, 0.00000);
        lumaEndP_6 = ((tmpvar_59.y * 1.96321) + tmpvar_59.x);
      };
      bool tmpvar_60;
      if (doneN_5) {
        tmpvar_60 = bool(1);
      } else {
        tmpvar_60 = (abs((lumaEndN_7 - lumaN_15)) >= gradientN_11);
      };
      doneN_5 = tmpvar_60;
      bool tmpvar_61;
      if (doneP_4) {
        tmpvar_61 = bool(1);
      } else {
        tmpvar_61 = (abs((lumaEndP_6 - lumaN_15)) >= gradientN_11);
      };
      doneP_4 = tmpvar_61;
      if ((tmpvar_60 && tmpvar_61)) {
        break;
      };
      if (!(tmpvar_60)) {
        posN_10 = (posN_10 - offNP_8);
      };
      if (!(tmpvar_61)) {
        posP_9 = (posP_9 + offNP_8);
      };
      i_3 = (i_3 + 1);
    };
    float tmpvar_62;
    if (tmpvar_47) {
      tmpvar_62 = (xlv_TEXCOORD0.x - posN_10.x);
    } else {
      tmpvar_62 = (xlv_TEXCOORD0.y - posN_10.y);
    };
    float tmpvar_63;
    if (tmpvar_47) {
      tmpvar_63 = (posP_9.x - xlv_TEXCOORD0.x);
    } else {
      tmpvar_63 = (posP_9.y - xlv_TEXCOORD0.y);
    };
    bool tmpvar_64;
    tmpvar_64 = (tmpvar_62 < tmpvar_63);
    float tmpvar_65;
    if (tmpvar_64) {
      tmpvar_65 = lumaEndN_7;
    } else {
      tmpvar_65 = lumaEndP_6;
    };
    lumaEndN_7 = tmpvar_65;
    if ((((tmpvar_28 - lumaN_15) < 0.00000) == ((tmpvar_65 - lumaN_15) < 0.00000))) {
      lengthSign_12 = 0.00000;
    };
    float tmpvar_66;
    tmpvar_66 = (tmpvar_63 + tmpvar_62);
    float tmpvar_67;
    if (tmpvar_64) {
      tmpvar_67 = tmpvar_62;
    } else {
      tmpvar_67 = tmpvar_63;
    };
    float tmpvar_68;
    tmpvar_68 = ((0.500000 + (tmpvar_67 * (-1.00000 / tmpvar_66))) * lengthSign_12);
    float tmpvar_69;
    if (tmpvar_47) {
      tmpvar_69 = 0.00000;
    } else {
      tmpvar_69 = tmpvar_68;
    };
    float tmpvar_70;
    if (tmpvar_47) {
      tmpvar_70 = tmpvar_68;
    } else {
      tmpvar_70 = 0.00000;
    };
    vec2 tmpvar_71;
    tmpvar_71.x = (xlv_TEXCOORD0.x + tmpvar_69);
    tmpvar_71.y = (xlv_TEXCOORD0.y + tmpvar_70);
    vec4 tmpvar_72;
    tmpvar_72 = texture2DLod (_MainTex, tmpvar_71, 0.00000);
    vec3 tmpvar_73;
    tmpvar_73.x = -(tmpvar_34);
    tmpvar_73.y = -(tmpvar_34);
    tmpvar_73.z = -(tmpvar_34);
    tmpvar_2 = ((tmpvar_73 * tmpvar_72.xyz) + ((rgbL_13 * vec3(tmpvar_34)) + tmpvar_72.xyz));
  };
  vec4 tmpvar_74;
  tmpvar_74.w = 0.00000;
  tmpvar_74.xyz = tmpvar_2;
  gl_FragData[0] = tmpvar_74;
}

