uniform vec4 _Color;
uniform vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform float _Shininess;
uniform vec4 _SpecColor;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = gl_TexCoord[1].xyz;
  vec4 tmpvar_2;
  tmpvar_2 = gl_TexCoord[4];
  vec4 c_3;
  vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, gl_TexCoord[0].xy);
  vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * _Color);
  vec3 tmpvar_6;
  tmpvar_6 = normalize(gl_TexCoord[2].xyz);
  float atten_7;
  atten_7 = ((float(
    (tmpvar_2.z > 0.0)
  ) * texture2D (_LightTexture0, (
    (tmpvar_2.xy / tmpvar_2.w)
   + 0.5)).w) * texture2D (_LightTextureB0, vec2(dot (tmpvar_2.xyz, tmpvar_2.xyz))).w);
  vec4 c_8;
  float tmpvar_9;
  tmpvar_9 = (pow (max (0.0, 
    dot (tmpvar_1, normalize((tmpvar_6 + normalize(gl_TexCoord[3].xyz))))
  ), (_Shininess * 128.0)) * tmpvar_4.w);
  c_8.xyz = (((
    (tmpvar_5.xyz * _LightColor0.xyz)
   * 
    max (0.0, dot (tmpvar_1, tmpvar_6))
  ) + (
    (_LightColor0.xyz * _SpecColor.xyz)
   * tmpvar_9)) * (atten_7 * 2.0));
  c_8.w = (tmpvar_5.w + ((
    (_LightColor0.w * _SpecColor.w)
   * tmpvar_9) * atten_7));
  c_3.xyz = c_8.xyz;
  c_3.w = 0.0;
  gl_FragData[0] = c_3;
}


// stats: 31 alu 3 tex 0 flow
// inputs: 1
//  #0: gl_TexCoord (high float) 4x1 [5] loc 4
// uniforms: 4 (total size: 0)
//  #0: _Color (high float) 4x1 [-1]
//  #1: _LightColor0 (high float) 4x1 [-1]
//  #2: _Shininess (high float) 1x1 [-1]
//  #3: _SpecColor (high float) 4x1 [-1]
// textures: 3
//  #0: _LightTexture0 (high 2d) 0x0 [-1]
//  #1: _LightTextureB0 (high 2d) 0x0 [-1]
//  #2: _MainTex (high 2d) 0x0 [-1]
