uniform sampler2D _TranslucencyMap;
uniform vec3 _TranslucencyColor;
uniform vec4 _TerrainTreeLightColors[4];
uniform vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform float _Cutoff;
uniform sampler2D _BumpSpecMap;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_TexCoord[0].xy;
  vec3 tmpvar_2;
  vec3 tmpvar_3;
  tmpvar_2 = gl_TexCoord[3].xyz;
  tmpvar_3 = gl_TexCoord[4].xyz;
  vec4 c_4;
  int j_5;
  vec3 backContribs_6;
  vec3 light_7;
  float gloss_8;
  float specular_9;
  vec3 albedo_10;
  j_5 = 0;
  vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, tmpvar_1);
  float x_12;
  x_12 = (tmpvar_11.w - _Cutoff);
  if ((x_12 < 0.00000)) {
    discard;
  };
  vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_11.xyz * gl_TexCoord[1].xyz);
  albedo_10 = tmpvar_13;
  specular_9 = (texture2D (_BumpSpecMap, tmpvar_1).x * 128.000);
  vec4 tmpvar_14;
  tmpvar_14 = texture2D (_TranslucencyMap, tmpvar_1);
  gloss_8 = tmpvar_14.w;
  light_7 = (gl_LightModel.ambient.xyz * tmpvar_13);
  backContribs_6 = (gl_TexCoord[2].xyz * tmpvar_14.z);
  while (true) {
    if ((j_5 >= 3)) {
      break;
    };
    float tmpvar_15;
    tmpvar_15 = (pow (tmpvar_3[j_5], specular_9) * gloss_8);
    light_7 = (light_7 + (((albedo_10 * ((backContribs_6[j_5] * _TranslucencyColor) + tmpvar_2[j_5])) + (_SpecColor.xyz * tmpvar_15)) * _TerrainTreeLightColors[j_5].xyz));
    j_5 = (j_5 + 1);
  };
  c_4.xyz = (light_7 * 2.00000);
  c_4.w = 1.00000;
  gl_FragData[0] = c_4;
}

