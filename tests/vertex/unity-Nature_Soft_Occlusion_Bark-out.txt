varying vec4 xlv_FOG;
uniform vec4 unity_Scale;
uniform vec4 _WorldSpaceLightPos0;
uniform mat4 _TerrainEngineBendTree;
uniform vec4 _SquashPlaneNormal;
uniform float _SquashAmount;
uniform vec4 _Scale;
uniform mat4 _Object2World;
uniform vec4 _MainTex_ST;
uniform mat4 _LightMatrix0;
void main ()
{
  vec4 pos_1;
  pos_1.w = gl_Vertex.w;
  pos_1.xyz = (gl_Vertex.xyz * _Scale.xyz);
  vec4 tmpvar_2;
  tmpvar_2.w = 0.00000;
  tmpvar_2.xyz = pos_1.xyz;
  vec3 tmpvar_3;
  tmpvar_3 = mix (pos_1.xyz, (_TerrainEngineBendTree * tmpvar_2).xyz, gl_Color.www);
  vec3 tmpvar_4;
  tmpvar_4.xz = vec2(0.00000, 0.00000);
  tmpvar_4.y = _SquashPlaneNormal.w;
  vec4 tmpvar_5;
  tmpvar_5.w = 1.00000;
  tmpvar_5.xyz = mix ((tmpvar_3 + (dot (_SquashPlaneNormal.xyz, (tmpvar_4 - tmpvar_3)) * _SquashPlaneNormal.xyz)), tmpvar_3, vec3(_SquashAmount));
  pos_1 = tmpvar_5;
  vec4 tmpvar_6;
  tmpvar_6 = (gl_ModelViewProjectionMatrix * tmpvar_5);
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  gl_Position = tmpvar_6;
  vec4 tmpvar_8;
  tmpvar_8.yzw = vec3(0.00000, 0.00000, 0.00000);
  tmpvar_8.x = tmpvar_6.z;
  xlv_FOG = tmpvar_8;
  vec4 tmpvar_9;
  tmpvar_9.zw = vec2(0.00000, 0.00000);
  tmpvar_9.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  gl_TexCoord[0] = tmpvar_9;
  vec4 tmpvar_10;
  tmpvar_10.w = 0.00000;
  tmpvar_10.xyz = (tmpvar_7 * (gl_Normal * unity_Scale.w));
  gl_TexCoord[1] = tmpvar_10;
  vec4 tmpvar_11;
  tmpvar_11.w = 0.00000;
  tmpvar_11.xyz = (_WorldSpaceLightPos0.xyz - (_Object2World * tmpvar_5).xyz);
  gl_TexCoord[2] = tmpvar_11;
  gl_TexCoord[3] = (_LightMatrix0 * (_Object2World * tmpvar_5));
}

