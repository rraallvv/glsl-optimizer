#include <metal_stdlib>
using namespace metal;
struct xlatMtlShaderInput {
  float4 dcl_Input0_POSITION0 [[attribute(0)]];
  float4 dcl_Input1_NORMAL0 [[attribute(1)]];
  float4 dcl_Input2_TEXCOORD0 [[attribute(2)]];
};
struct xlatMtlShaderOutput {
  float4 gl_Position [[position]];
  float4 VtxGeoOutput1_TEXCOORD0;
  float4 VtxGeoOutput2_COLOR0;
};
struct xlatMtlShaderUniform {
  float4 glstate_lightmodel_ambient;
  float4 glstate_matrix_invtrans_modelview0[4];
  float4 glstate_matrix_modelview0[4];
  float4 glstate_matrix_mvp[4];
  float4 unity_LightAtten[8];
  float4 unity_LightPosition[8];
  float4 unity_LightColor[8];
  float4 _MainTex_ST;
};
vertex xlatMtlShaderOutput xlatMtlMain (xlatMtlShaderInput _mtl_i [[stage_in]], constant xlatMtlShaderUniform& _mtl_u [[buffer(0)]])
{
  xlatMtlShaderOutput _mtl_o;
float4 phase0_Output0_1;
float4 Temp_0_2;
float4 Temp_1_3;
float4 Temp_2_4;
float4 Temp_3_5;
int tmpvar_6;
  Temp_0_2 = (_mtl_i.dcl_Input0_POSITION0.yyyy * _mtl_u.glstate_matrix_mvp[1]);
  Temp_0_2 = ((_mtl_u.glstate_matrix_mvp[0] * _mtl_i.dcl_Input0_POSITION0.xxxx) + Temp_0_2);
  Temp_0_2 = ((_mtl_u.glstate_matrix_mvp[2] * _mtl_i.dcl_Input0_POSITION0.zzzz) + Temp_0_2);
  phase0_Output0_1 = ((_mtl_u.glstate_matrix_mvp[3] * _mtl_i.dcl_Input0_POSITION0.wwww) + Temp_0_2);
  _mtl_o.VtxGeoOutput1_TEXCOORD0.xy = ((_mtl_i.dcl_Input2_TEXCOORD0.xyxx * _mtl_u._MainTex_ST.xyxx) + _mtl_u._MainTex_ST.zwzz).xy;
  Temp_0_2.xyz = (_mtl_i.dcl_Input0_POSITION0.yyyy * _mtl_u.glstate_matrix_modelview0[1].xyzx).xyz;
  Temp_0_2.xyz = ((_mtl_u.glstate_matrix_modelview0[0].xyzx * _mtl_i.dcl_Input0_POSITION0.xxxx) + Temp_0_2.xyzx).xyz;
  Temp_0_2.xyz = ((_mtl_u.glstate_matrix_modelview0[2].xyzx * _mtl_i.dcl_Input0_POSITION0.zzzz) + Temp_0_2.xyzx).xyz;
  Temp_0_2.xyz = ((_mtl_u.glstate_matrix_modelview0[3].xyzx * _mtl_i.dcl_Input0_POSITION0.wwww) + Temp_0_2.xyzx).xyz;
  Temp_1_3.xyz = (_mtl_i.dcl_Input1_NORMAL0.yyyy * _mtl_u.glstate_matrix_invtrans_modelview0[1].xyzx).xyz;
  Temp_1_3.xyz = ((_mtl_u.glstate_matrix_invtrans_modelview0[0].xyzx * _mtl_i.dcl_Input1_NORMAL0.xxxx) + Temp_1_3.xyzx).xyz;
  Temp_1_3.xyz = ((_mtl_u.glstate_matrix_invtrans_modelview0[2].xyzx * _mtl_i.dcl_Input1_NORMAL0.zzzz) + Temp_1_3.xyzx).xyz;
  Temp_0_2.w = dot (Temp_1_3.xyz, Temp_1_3.xyz);
  Temp_0_2.w = rsqrt(Temp_0_2.w);
  Temp_1_3.xyz = (Temp_0_2.wwww * Temp_1_3.xyzx).xyz;
  Temp_2_4.xyz = _mtl_u.glstate_lightmodel_ambient.xyz;
  tmpvar_6 = 0;
  Temp_3_5.xyz = ((-(Temp_0_2.xyzx) * _mtl_u.unity_LightPosition[tmpvar_6].wwww) + _mtl_u.unity_LightPosition[tmpvar_6].xyzx).xyz;
  Temp_1_3.w = dot (Temp_3_5.xyz, Temp_3_5.xyz);
  Temp_2_4.w = ((Temp_1_3.w * _mtl_u.unity_LightAtten[tmpvar_6].z) + 1.0);
  Temp_2_4.w = (1.0/(Temp_2_4.w));
  Temp_1_3.w = rsqrt(Temp_1_3.w);
  Temp_3_5.xyz = (Temp_1_3.wwww * Temp_3_5.xyzx).xyz;
  Temp_1_3.w = dot (Temp_1_3.xyz, Temp_3_5.xyz);
  Temp_1_3.w = max (Temp_1_3.w, 0.0);
  Temp_1_3.w = (Temp_1_3.w * Temp_2_4.w);
  Temp_2_4.xyz = ((_mtl_u.unity_LightColor[tmpvar_6].xyzx * Temp_1_3.wwww) + _mtl_u.glstate_lightmodel_ambient.xyzx).xyz;
  tmpvar_6++;
  Temp_3_5.xyz = ((-(Temp_0_2.xyzx) * _mtl_u.unity_LightPosition[tmpvar_6].wwww) + _mtl_u.unity_LightPosition[tmpvar_6].xyzx).xyz;
  Temp_1_3.w = dot (Temp_3_5.xyz, Temp_3_5.xyz);
  Temp_2_4.w = ((Temp_1_3.w * _mtl_u.unity_LightAtten[tmpvar_6].z) + 1.0);
  Temp_2_4.w = (1.0/(Temp_2_4.w));
  Temp_1_3.w = rsqrt(Temp_1_3.w);
  Temp_3_5.xyz = (Temp_1_3.wwww * Temp_3_5.xyzx).xyz;
  Temp_1_3.w = dot (Temp_1_3.xyz, Temp_3_5.xyz);
  Temp_1_3.w = max (Temp_1_3.w, 0.0);
  Temp_1_3.w = (Temp_1_3.w * Temp_2_4.w);
  Temp_2_4.xyz = ((_mtl_u.unity_LightColor[tmpvar_6].xyzx * Temp_1_3.wwww) + Temp_2_4.xyzx).xyz;
  tmpvar_6++;
  Temp_3_5.xyz = ((-(Temp_0_2.xyzx) * _mtl_u.unity_LightPosition[tmpvar_6].wwww) + _mtl_u.unity_LightPosition[tmpvar_6].xyzx).xyz;
  Temp_1_3.w = dot (Temp_3_5.xyz, Temp_3_5.xyz);
  Temp_2_4.w = ((Temp_1_3.w * _mtl_u.unity_LightAtten[tmpvar_6].z) + 1.0);
  Temp_2_4.w = (1.0/(Temp_2_4.w));
  Temp_1_3.w = rsqrt(Temp_1_3.w);
  Temp_3_5.xyz = (Temp_1_3.wwww * Temp_3_5.xyzx).xyz;
  Temp_1_3.w = dot (Temp_1_3.xyz, Temp_3_5.xyz);
  Temp_1_3.w = max (Temp_1_3.w, 0.0);
  Temp_1_3.w = (Temp_1_3.w * Temp_2_4.w);
  Temp_2_4.xyz = ((_mtl_u.unity_LightColor[tmpvar_6].xyzx * Temp_1_3.wwww) + Temp_2_4.xyzx).xyz;
  tmpvar_6++;
  Temp_3_5.xyz = ((-(Temp_0_2.xyzx) * _mtl_u.unity_LightPosition[tmpvar_6].wwww) + _mtl_u.unity_LightPosition[tmpvar_6].xyzx).xyz;
  Temp_1_3.w = dot (Temp_3_5.xyz, Temp_3_5.xyz);
  Temp_2_4.w = ((Temp_1_3.w * _mtl_u.unity_LightAtten[tmpvar_6].z) + 1.0);
  Temp_2_4.w = (1.0/(Temp_2_4.w));
  Temp_1_3.w = rsqrt(Temp_1_3.w);
  Temp_3_5.xyz = (Temp_1_3.wwww * Temp_3_5.xyzx).xyz;
  Temp_1_3.w = dot (Temp_1_3.xyz, Temp_3_5.xyz);
  Temp_1_3.w = max (Temp_1_3.w, 0.0);
  Temp_1_3.w = (Temp_1_3.w * Temp_2_4.w);
  Temp_2_4.xyz = ((_mtl_u.unity_LightColor[tmpvar_6].xyzx * Temp_1_3.wwww) + Temp_2_4.xyzx).xyz;
  tmpvar_6++;
  _mtl_o.VtxGeoOutput2_COLOR0.xyz = (Temp_2_4.xyzx + Temp_2_4.xyzx).xyz;
  _mtl_o.VtxGeoOutput2_COLOR0.w = 1.0;
  _mtl_o.gl_Position = phase0_Output0_1;
  return _mtl_o;
}


// stats: 87 alu 0 tex 0 flow
// inputs: 3
//  #0: dcl_Input0_POSITION0 (high float) 4x1 [-1] loc 0
//  #1: dcl_Input1_NORMAL0 (high float) 4x1 [-1] loc 1
//  #2: dcl_Input2_TEXCOORD0 (high float) 4x1 [-1] loc 2
// uniforms: 8 (total size: 608)
//  #0: glstate_lightmodel_ambient (high float) 4x1 [-1] loc 0
//  #1: glstate_matrix_invtrans_modelview0 (high float) 4x1 [4] loc 16
//  #2: glstate_matrix_modelview0 (high float) 4x1 [4] loc 80
//  #3: glstate_matrix_mvp (high float) 4x1 [4] loc 144
//  #4: unity_LightAtten (high float) 4x1 [8] loc 208
//  #5: unity_LightPosition (high float) 4x1 [8] loc 336
//  #6: unity_LightColor (high float) 4x1 [8] loc 464
//  #7: _MainTex_ST (high float) 4x1 [-1] loc 592
