#include <metal_stdlib>
using namespace metal;
struct xlatMtlShaderInput {
  float4 _inVertex [[attribute(0)]];
};
struct xlatMtlShaderOutput {
  float4 gl_Position [[position]];
  half4 xlv_TEXCOORD0;
};
struct xlatMtlShaderUniform {
  float4x4 UNITY_MATRIX_MVP;
  float4 unity_LightAtten[4];
  float4 unity_LightColor[4];
};
vertex xlatMtlShaderOutput xlatMtlMain (xlatMtlShaderInput _mtl_i [[stage_in]], constant xlatMtlShaderUniform& _mtl_u [[buffer(0)]])
{
  xlatMtlShaderOutput _mtl_o;
  half4 tmpvar_1;
  half4 tmpvar_2;
  float4 tmpvar_3;
  tmpvar_3 = (_mtl_u.UNITY_MATRIX_MVP * _mtl_i._inVertex);
  tmpvar_1 = half4(tmpvar_3);
  float4 tmpvar_4;
  tmpvar_4 = _mtl_u.unity_LightColor[0];
  tmpvar_2 = half4(tmpvar_4);
  float4 tmpvar_5;
  tmpvar_5 = ((float4)tmpvar_2 + _mtl_u.unity_LightColor[1]);
  tmpvar_2 = half4(tmpvar_5);
  float4 tmpvar_6;
  tmpvar_6 = ((float4)tmpvar_2 + _mtl_u.unity_LightColor[0]);
  tmpvar_2 = half4(tmpvar_6);
  float4 tmpvar_7;
  tmpvar_7 = ((float4)tmpvar_2 + _mtl_u.unity_LightColor[1]);
  tmpvar_2 = half4(tmpvar_7);
  float4 tmpvar_8;
  tmpvar_8 = ((float4)tmpvar_2 + _mtl_u.unity_LightColor[2]);
  tmpvar_2 = half4(tmpvar_8);
  float4 tmpvar_9;
  tmpvar_9 = ((float4)tmpvar_2 + _mtl_u.unity_LightColor[3]);
  tmpvar_2 = half4(tmpvar_9);
  float4 tmpvar_10;
  tmpvar_10 = ((float4)tmpvar_2 + _mtl_u.unity_LightColor[3]);
  tmpvar_2 = half4(tmpvar_10);
  float4 tmpvar_11;
  tmpvar_11 = ((float4)tmpvar_2 + _mtl_u.unity_LightColor[2]);
  tmpvar_2 = half4(tmpvar_11);
  float4 tmpvar_12;
  tmpvar_12 = ((float4)tmpvar_2 + _mtl_u.unity_LightColor[1]);
  tmpvar_2 = half4(tmpvar_12);
  float4 tmpvar_13;
  tmpvar_13 = ((float4)tmpvar_2 + _mtl_u.unity_LightColor[0]);
  tmpvar_2 = half4(tmpvar_13);
  float4 tmpvar_14;
  tmpvar_14 = ((float4)tmpvar_2 + (_mtl_u.unity_LightColor[0] * _mtl_u.unity_LightAtten[0].x));
  tmpvar_2 = half4(tmpvar_14);
  float4 tmpvar_15;
  tmpvar_15 = ((float4)tmpvar_2 + (_mtl_u.unity_LightColor[1] * _mtl_u.unity_LightAtten[1].x));
  tmpvar_2 = half4(tmpvar_15);
  float4 tmpvar_16;
  tmpvar_16 = ((float4)tmpvar_2 + (_mtl_u.unity_LightColor[0] * _mtl_u.unity_LightAtten[0].z));
  tmpvar_2 = half4(tmpvar_16);
  float4 tmpvar_17;
  tmpvar_17 = ((float4)tmpvar_2 + (_mtl_u.unity_LightColor[1] * _mtl_u.unity_LightAtten[1].z));
  tmpvar_2 = half4(tmpvar_17);
  float4 tmpvar_18;
  tmpvar_18 = ((float4)tmpvar_2 + _mtl_u.unity_LightColor[1].x);
  tmpvar_2 = half4(tmpvar_18);
  float4 tmpvar_19;
  tmpvar_19 = ((float4)tmpvar_2 + _mtl_u.unity_LightColor[2].x);
  tmpvar_2 = half4(tmpvar_19);
  _mtl_o.gl_Position = float4(tmpvar_1);
  _mtl_o.xlv_TEXCOORD0 = tmpvar_2;
  return _mtl_o;
}


// stats: 20 alu 0 tex 0 flow
// inputs: 1
//  #0: _inVertex (high float) 4x1 [-1] loc 0
// uniforms: 3 (total size: 192)
//  #0: UNITY_MATRIX_MVP (high float) 4x4 [-1] loc 0
//  #1: unity_LightAtten (high float) 4x1 [4] loc 64
//  #2: unity_LightColor (high float) 4x1 [4] loc 128
