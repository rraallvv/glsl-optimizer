struct appdata_full {
  vec4 vertex;
  vec4 tangent;
  vec3 normal;
  vec4 texcoord;
  vec4 texcoord1;
  vec4 color;
};
attribute vec4 TANGENT;
uniform mat4 _World2Shadow3;
uniform mat4 _World2Shadow2;
uniform mat4 _World2Shadow1;
uniform mat4 _World2Shadow;
uniform vec4 _Wind;
uniform float _TimeX;
uniform vec4 _SquashPlaneNormal;
uniform float _SquashAmount;
uniform vec4 _Scale;
uniform mat4 _Object2World;
uniform vec4 _MainTex_ST;
uniform vec4 _LightShadowData;
uniform vec4 _Color;
void main ()
{
  appdata_full xlt_v;
  xlt_v.vertex = gl_Vertex.xyzw;
  xlt_v.tangent = TANGENT.xyzw;
  xlt_v.normal = gl_Normal.xyz;
  xlt_v.texcoord = gl_MultiTexCoord0.xyzw;
  xlt_v.texcoord1 = gl_MultiTexCoord1.xyzw;
  xlt_v.color = gl_Color.xyzw;
  vec2 tmpvar_292;
  appdata_full v_i0;
  v_i0 = xlt_v;
  vec4 pos;
  pos = xlt_v.vertex;
  vec3 normal;
  normal = xlt_v.normal;
  vec4 tangent;
  tangent = xlt_v.tangent;
  float tmpvar_170;
  tmpvar_170 = (1.000000 - abs (tangent.w));
  vec4 tmpvar_171;
  tmpvar_171.xyz = vec3(normal.xyz);
  tmpvar_171.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  vec4 tmpvar_175;
  tmpvar_175.x = float(normal.z);
  tmpvar_175.y = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_175.z = float(vec4(-(normal.x)));
  tmpvar_175.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  vec4 tmpvar_179;
  tmpvar_179 = (pos + ((tangent * gl_ModelViewMatrixInverseTranspose) * tmpvar_170));
  pos = tmpvar_179;
  vec3 tmpvar_181;
  tmpvar_181 = mix (normal, normalize ((tmpvar_171 * gl_ModelViewMatrixInverseTranspose)).xyz, vec3(tmpvar_170));
  normal = tmpvar_181;
  vec4 tmpvar_183;
  tmpvar_183.xyz = vec3(normalize ((tmpvar_175 * gl_ModelViewMatrixInverseTranspose)).xyz);
  tmpvar_183.w = float(vec4(-1.000000, -1.000000, -1.000000, -1.000000));
  vec4 tmpvar_185;
  tmpvar_185 = mix (tangent, tmpvar_183, vec4(tmpvar_170));
  tangent = tmpvar_185;
  v_i0.vertex = tmpvar_179;
  v_i0.normal = tmpvar_181;
  v_i0.tangent = tmpvar_185;
  v_i0.vertex.xyz = (v_i0.vertex.xyz * _Scale.xyz).xyz;
  vec4 tmpvar_188;
  tmpvar_188.xy = vec2(v_i0.color.xy);
  tmpvar_188.zw = vec2(v_i0.texcoord1.xy);
  vec4 pos_i0;
  pos_i0 = v_i0.vertex;
  vec3 bend;
  float tmpvar_195;
  tmpvar_195 = (dot (_Object2World[3].xyz, vec3(1.000000, 1.000000, 1.000000)) + tmpvar_188.x);
  vec2 tmpvar_199;
  tmpvar_199.x = float(vec2(dot (pos_i0.xyz, vec3((tmpvar_188.y + tmpvar_195)))));
  tmpvar_199.y = float(vec2(tmpvar_195));
  vec4 tmpvar_208;
  tmpvar_208 = abs (((fract ((((fract (((_TimeX + tmpvar_199).xxyy * vec4(1.975000, 0.793000, 0.375000, 0.193000))) * 2.000000) - 1.000000) + 0.500000)) * 2.000000) - 1.000000));
  vec4 __retval_i0;
  __retval_i0 = ((tmpvar_208 * tmpvar_208) * (3.000000 - (2.000000 * tmpvar_208)));
  vec2 tmpvar_212;
  tmpvar_212 = (__retval_i0.xz + __retval_i0.yw);
  bend = ((tmpvar_188.y * 0.100000) * v_i0.normal.xyz);
  bend.y = float(vec2((tmpvar_188.w * 0.300000)));
  pos_i0.xyz = (pos_i0.xyz + (((tmpvar_212.xyx * bend) + ((_Wind.xyz * tmpvar_212.y) * tmpvar_188.w)) * _Wind.w)).xyz;
  pos_i0.xyz = (pos_i0.xyz + (tmpvar_188.z * _Wind.xyz)).xyz;
  v_i0.vertex = pos_i0;
  vec4 pos_i0_i1;
  pos_i0_i1 = v_i0.vertex;
  vec3 tmpvar_221;
  tmpvar_221.x = float(vec3(0.000000, 0.000000, 0.000000));
  tmpvar_221.y = float(_SquashPlaneNormal.w);
  tmpvar_221.z = float(vec3(0.000000, 0.000000, 0.000000));
  vec3 tmpvar_223;
  tmpvar_223 = _SquashPlaneNormal.xyz;
  vec4 tmpvar_229;
  tmpvar_229.xyz = vec3(mix ((pos_i0_i1.xyz + (dot (tmpvar_223, (tmpvar_221 - pos_i0_i1.xyz)) * tmpvar_223)), pos_i0_i1.xyz, vec3(_SquashAmount)).xyz);
  tmpvar_229.w = float(vec4(1.000000, 1.000000, 1.000000, 1.000000));
  pos_i0_i1 = tmpvar_229;
  v_i0.vertex = tmpvar_229;
  vec4 tmpvar_232;
  tmpvar_232.xyz = vec3((v_i0.color.w * _Color.xyz).xyz);
  tmpvar_232.w = float(_Color.w);
  v_i0.color = tmpvar_232;
  v_i0.normal = normalize (v_i0.normal);
  v_i0.tangent.xyz = normalize (v_i0.tangent.xyz).xyz;
  float tmpvar_241;
  tmpvar_241 = -((gl_ModelViewMatrix * v_i0.vertex).z);
  tmpvar_292.x = tmpvar_241;
  tmpvar_292.y = float(vec2(((tmpvar_241 * _LightShadowData.z) + _LightShadowData.w)));
  vec4 tmpvar_244;
  tmpvar_244 = (_Object2World * v_i0.vertex);
  gl_Position = (gl_ModelViewProjectionMatrix * v_i0.vertex).xyzw;
  vec4 tmpvar_17;
  tmpvar_17.xyz = vec3((_World2Shadow * tmpvar_244).xyz);
  tmpvar_17.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[0] = tmpvar_17;
  vec4 tmpvar_19;
  tmpvar_19.xyz = vec3((_World2Shadow1 * tmpvar_244).xyz);
  tmpvar_19.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[1] = tmpvar_19;
  vec4 tmpvar_21;
  tmpvar_21.xyz = vec3((_World2Shadow2 * tmpvar_244).xyz);
  tmpvar_21.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[2] = tmpvar_21;
  vec4 tmpvar_23;
  tmpvar_23.xyz = vec3((_World2Shadow3 * tmpvar_244).xyz);
  tmpvar_23.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[3] = tmpvar_23;
  vec4 tmpvar_25;
  tmpvar_25.xy = vec2(tmpvar_292.xy);
  tmpvar_25.z = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_25.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[4] = tmpvar_25;
  vec4 tmpvar_27;
  tmpvar_27.xy = vec2(((v_i0.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw).xy);
  tmpvar_27.z = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_27.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[5] = tmpvar_27;
  gl_FrontColor = v_i0.color.xyzw;
}

