struct appdata_full {
  vec4 vertex;
  vec4 tangent;
  vec3 normal;
  vec4 texcoord;
  vec4 texcoord1;
  vec4 color;
};
varying vec4 xlv_FOG;
attribute vec4 TANGENT;
uniform vec4 unity_Scale;
uniform vec4 unity_SHC;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec3 unity_LightColor3;
uniform vec3 unity_LightColor2;
uniform vec3 unity_LightColor1;
uniform vec3 unity_LightColor0;
uniform vec4 unity_4LightPosZ0;
uniform vec4 unity_4LightPosY0;
uniform vec4 unity_4LightPosX0;
uniform vec4 unity_4LightAtten0;
uniform vec4 _WavingTint;
uniform vec4 _WaveAndDistance;
uniform mat4 _Object2World;
uniform vec4 _MainTex_ST;
uniform vec3 _CameraUp;
uniform vec3 _CameraRight;
uniform vec4 _CameraPosition;
void main ()
{
  appdata_full xlt_v;
  xlt_v.vertex = gl_Vertex.xyzw;
  xlt_v.tangent = TANGENT.xyzw;
  xlt_v.normal = gl_Normal.xyz;
  xlt_v.texcoord = gl_MultiTexCoord0.xyzw;
  xlt_v.texcoord1 = gl_MultiTexCoord1.xyzw;
  xlt_v.color = gl_Color.xyzw;
  vec3 tmpvar_315;
  appdata_full v_i0;
  v_i0 = xlt_v;
  vec4 pos;
  pos = xlt_v.vertex;
  vec2 offset;
  offset = xlt_v.tangent.xy;
  vec3 tmpvar_179;
  tmpvar_179 = (pos.xyz - _CameraPosition.xyz);
  float tmpvar_180;
  tmpvar_180 = dot (tmpvar_179, tmpvar_179);
  if ((tmpvar_180 > _WaveAndDistance.w)) {
    offset = vec2(0.000000, 0.000000);
  };
  pos.xyz = (pos.xyz + (offset.x * _CameraRight.xyz)).xyz;
  pos.xyz = (pos.xyz + (offset.y * _CameraUp.xyz)).xyz;
  v_i0.vertex = pos;
  vec4 vertex;
  vertex = v_i0.vertex;
  vec4 outColor;
  vec3 waveMove;
  waveMove = vec3(0.000000, 0.000000, 0.000000);
  vec4 tmpvar_198;
  tmpvar_198 = ((fract ((((vertex.x * (vec4(0.012000, 0.020000, 0.060000, 0.024000) * _WaveAndDistance.y)) + (vertex.z * (vec4(0.006000, 0.020000, 0.020000, 0.050000) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.200000, 2.000000, 1.600000, 4.800000)))) * 6.408850) - 3.141590);
  vec4 tmpvar_199;
  tmpvar_199 = (tmpvar_198 * tmpvar_198);
  vec4 tmpvar_203;
  tmpvar_203 = (tmpvar_199 * tmpvar_198);
  vec4 tmpvar_204;
  tmpvar_204 = (tmpvar_203 * tmpvar_199);
  vec4 tmpvar_206;
  tmpvar_206 = (((tmpvar_198 + (tmpvar_203 * -0.161616)) + (tmpvar_204 * 0.008333)) + ((tmpvar_204 * tmpvar_199) * -0.000198));
  vec4 tmpvar_208;
  tmpvar_208 = (tmpvar_206 * tmpvar_206);
  vec4 tmpvar_209;
  tmpvar_209 = (tmpvar_208 * tmpvar_208);
  vec4 tmpvar_213;
  tmpvar_213 = (tmpvar_209 * v_i0.tangent.y);
  waveMove.x = dot (tmpvar_213, vec4(0.024000, 0.040000, -0.120000, 0.096000));
  waveMove.z = float(vec3(dot (tmpvar_213, vec4(0.006000, 0.020000, -0.020000, 0.100000))));
  vertex.xz = vec2((vertex.xz - (waveMove.xz * _WaveAndDistance.z)).xy);
  outColor.xyz = ((v_i0.color.xyz * mix (vec3(0.500000, 0.500000, 0.500000), _WavingTint.xyz, vec3((dot (tmpvar_209, vec4(0.674200, 0.674200, 0.269680, 0.134840)) * 0.700000)))) * 2.000000).xyz;
  outColor.w = float(vec4(1.000000, 1.000000, 1.000000, 1.000000));
  v_i0.vertex = vertex;
  v_i0.color = outColor;
  vec4 tmpvar_225;
  tmpvar_225 = (gl_ModelViewProjectionMatrix * v_i0.vertex);
  mat3 tmpvar_234;
  tmpvar_234[0] = _Object2World[0].xyz;
  tmpvar_234[1] = _Object2World[1].xyz;
  tmpvar_234[2] = _Object2World[2].xyz;
  vec3 tmpvar_238;
  tmpvar_238 = (tmpvar_234 * (v_i0.normal * unity_Scale.w));
  vec4 tmpvar_240;
  tmpvar_240.xyz = vec3(tmpvar_238.xyz);
  tmpvar_240.w = float(vec4(1.000000, 1.000000, 1.000000, 1.000000));
  vec3 x2;
  vec3 x1;
  x1.x = dot (unity_SHAr, tmpvar_240);
  x1.y = float(vec2(dot (unity_SHAg, tmpvar_240)));
  x1.z = float(vec3(dot (unity_SHAb, tmpvar_240)));
  vec4 tmpvar_249;
  tmpvar_249 = (tmpvar_240.xyzz * tmpvar_240.yzzx);
  x2.x = dot (unity_SHBr, tmpvar_249);
  x2.y = float(vec2(dot (unity_SHBg, tmpvar_249)));
  x2.z = float(vec3(dot (unity_SHBb, tmpvar_249)));
  tmpvar_315 = ((x1 + x2) + (unity_SHC.xyz * ((tmpvar_240.x * tmpvar_240.x) - (tmpvar_240.y * tmpvar_240.y))));
  vec3 tmpvar_260;
  tmpvar_260 = (_Object2World * v_i0.vertex).xyz;
  vec4 tmpvar_263;
  tmpvar_263 = (unity_4LightPosX0 - tmpvar_260.x);
  vec4 tmpvar_264;
  tmpvar_264 = (unity_4LightPosY0 - tmpvar_260.y);
  vec4 tmpvar_265;
  tmpvar_265 = (unity_4LightPosZ0 - tmpvar_260.z);
  vec4 tmpvar_269;
  tmpvar_269 = (((tmpvar_263 * tmpvar_263) + (tmpvar_264 * tmpvar_264)) + (tmpvar_265 * tmpvar_265));
  vec4 tmpvar_279;
  tmpvar_279 = (max (vec4(0.000000, 0.000000, 0.000000, 0.000000), ((((tmpvar_263 * tmpvar_238.x) + (tmpvar_264 * tmpvar_238.y)) + (tmpvar_265 * tmpvar_238.z)) * inversesqrt (tmpvar_269))) * 1.0/((1.000000 + (tmpvar_269 * unity_4LightAtten0))));
  tmpvar_315 = (tmpvar_315 + ((((unity_LightColor0 * tmpvar_279.x) + (unity_LightColor1 * tmpvar_279.y)) + (unity_LightColor2 * tmpvar_279.z)) + (unity_LightColor3 * tmpvar_279.w)));
  gl_Position = tmpvar_225.xyzw;
  vec4 tmpvar_17;
  tmpvar_17.x = float(tmpvar_225.z);
  tmpvar_17.y = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_17.z = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_17.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  xlv_FOG = tmpvar_17;
  vec4 tmpvar_19;
  tmpvar_19.xy = vec2(((v_i0.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw).xy);
  tmpvar_19.z = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_19.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[0] = tmpvar_19;
  gl_FrontColor = v_i0.color.xyzw;
  vec4 tmpvar_23;
  tmpvar_23.xyz = vec3(tmpvar_238.xyz);
  tmpvar_23.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[1] = tmpvar_23;
  vec4 tmpvar_25;
  tmpvar_25.xyz = vec3(tmpvar_315.xyz);
  tmpvar_25.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[2] = tmpvar_25;
}

