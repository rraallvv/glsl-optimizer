struct appdata_full {
  vec4 vertex;
  vec4 tangent;
  vec3 normal;
  vec4 texcoord;
  vec4 texcoord1;
  vec4 color;
};
struct v2f_surf {
  vec4 pos;
  float fog;
  vec2 hip_pack0;
  vec4 lop_color;
  vec3 normal;
  vec3 vlight;
};
uniform vec4 _CameraPosition;
uniform vec3 _CameraRight;
uniform vec3 _CameraUp;
uniform vec4 _MainTex_ST;
uniform mat4 _Object2World;
uniform vec4 _WaveAndDistance;
uniform vec4 _WavingTint;
uniform vec4 unity_4LightAtten0;
uniform vec4 unity_4LightPosX0;
uniform vec4 unity_4LightPosY0;
uniform vec4 unity_4LightPosZ0;
uniform vec3 unity_LightColor0;
uniform vec3 unity_LightColor1;
uniform vec3 unity_LightColor2;
uniform vec3 unity_LightColor3;
uniform vec4 unity_SHAb;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAr;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHC;
uniform vec4 unity_Scale;
attribute vec4 TANGENT;
varying vec4 xlv_FOG;
void main ()
{
  appdata_full xlt_v;
  vec4 tmpvar_1;
  tmpvar_1.xyzw = gl_Vertex;
  xlt_v.vertex = tmpvar_1;
  vec4 tmpvar_3;
  tmpvar_3.xyzw = TANGENT;
  xlt_v.tangent = tmpvar_3;
  vec3 tmpvar_5;
  tmpvar_5.xyz = gl_Normal;
  xlt_v.normal = tmpvar_5;
  vec4 tmpvar_7;
  tmpvar_7.xyzw = gl_MultiTexCoord0;
  xlt_v.texcoord = tmpvar_7;
  vec4 tmpvar_9;
  tmpvar_9.xyzw = gl_MultiTexCoord1;
  xlt_v.texcoord1 = tmpvar_9;
  vec4 tmpvar_11;
  tmpvar_11.xyzw = gl_Color;
  xlt_v.color = tmpvar_11;
  appdata_full v;
  v = xlt_v;
  v2f_surf o;
  vec3 worldN;
  appdata_full v_i0;
  v_i0 = xlt_v;
  vec4 pos;
  pos = xlt_v.vertex;
  vec2 offset;
  offset = xlt_v.tangent.xy;
  vec3 grasspos;
  grasspos = (pos.xyz - _CameraPosition.xyz);
  float tmpvar_180;
  tmpvar_180 = dot (grasspos, grasspos);
  if ((tmpvar_180 > _WaveAndDistance.w)) {
    offset = vec2 (0.000000, 0.000000);
  };
  pos.xyz = (pos.xyz + (offset.x * _CameraRight.xyz));
  pos.xyz = (pos.xyz + (offset.y * _CameraUp.xyz));
  v_i0.vertex = pos;
  vec4 vertex;
  vertex = v_i0.vertex;
  float waveAmount_i0;
  waveAmount_i0 = v_i0.tangent.y;
  vec3 color_i0;
  color_i0 = v_i0.color.xyz;
  vec4 outColor;
  vec4 _waveXmove;
  _waveXmove = vec4 (0.024000, 0.040000, -0.120000, 0.096000);
  vec4 _waveZmove;
  _waveZmove = vec4 (0.006000, 0.020000, -0.020000, 0.100000);
  vec4 waves;
  vec4 s;
  float lighting;
  vec3 waveMove;
  waveMove = vec3 (0.000000, 0.000000, 0.000000);
  waves = (((vertex.x * (vec4 (0.012000, 0.020000, 0.060000, 0.024000) * _WaveAndDistance.y)) + (vertex.z * (vec4 (0.006000, 0.020000, 0.020000, 0.050000) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4 (1.200000, 2.000000, 1.600000, 4.800000)));
  vec4 tmpvar_194;
  tmpvar_194 = fract (waves);
  waves = tmpvar_194;
  vec4 s_i0;
  vec4 c_i0;
  vec4 tmpvar_198;
  tmpvar_198 = ((tmpvar_194 * 6.408850) - 3.141590);
  vec4 tmpvar_199;
  tmpvar_199 = (tmpvar_198 * tmpvar_198);
  vec4 tmpvar_200;
  tmpvar_200 = (tmpvar_199 * tmpvar_199);
  vec4 tmpvar_203;
  tmpvar_203 = (tmpvar_199 * tmpvar_198);
  vec4 tmpvar_204;
  tmpvar_204 = (tmpvar_203 * tmpvar_199);
  vec4 tmpvar_206;
  tmpvar_206 = (((tmpvar_198 + (tmpvar_203 * -0.161616)) + (tmpvar_204 * 0.008333)) + ((tmpvar_204 * tmpvar_199) * -0.000198));
  s_i0 = tmpvar_206;
  c_i0 = ((((1.000000 + (tmpvar_199 * -0.500000)) + (tmpvar_200 * 0.041667)) + ((tmpvar_200 * tmpvar_199) * -0.001389)) + ((tmpvar_200 * tmpvar_199) * 0.000025));
  vec4 tmpvar_208;
  tmpvar_208 = (tmpvar_206 * tmpvar_206);
  s = (tmpvar_208 * tmpvar_208);
  float tmpvar_211;
  tmpvar_211 = dot (s, vec4 (0.674200, 0.674200, 0.269680, 0.134840));
  lighting = (tmpvar_211 * 0.700000);
  s = (s * waveAmount_i0);
  float tmpvar_214;
  tmpvar_214 = dot (s, _waveXmove);
  waveMove.x = tmpvar_214;
  float tmpvar_216;
  tmpvar_216 = dot (s, _waveZmove);
  waveMove.z = tmpvar_216;
  vertex.xz = (vertex.xz - (waveMove.xz * _WaveAndDistance.z));
  vec3 tmpvar_220;
  tmpvar_220 = mix (vec3 (0.500000, 0.500000, 0.500000), _WavingTint.xyz, vec3(lighting));
  outColor.xyz = ((color_i0 * tmpvar_220) * 2.000000);
  outColor.w = 1.000000;
  v_i0.vertex = vertex;
  v_i0.color = outColor;
  v = v_i0;
  vec4 pos_i0;
  float fog;
  vec4 tmpvar_225;
  tmpvar_225 = (gl_ModelViewProjectionMatrix * v_i0.vertex);
  pos_i0 = tmpvar_225;
  float tmpvar_226;
  tmpvar_226 = tmpvar_225.z;
  fog = tmpvar_226;
  o.pos = tmpvar_225;
  o.fog = tmpvar_226;
  o.hip_pack0.xy = ((v_i0.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  o.lop_color = v_i0.color;
  vec3 tmpvar_231;
  tmpvar_231.xyz = vec3(_Object2World[0]);
  vec3 tmpvar_232;
  tmpvar_232.xyz = vec3(_Object2World[1]);
  vec3 tmpvar_233;
  tmpvar_233.xyz = vec3(_Object2World[2]);
  mat3 tmpvar_234;
  tmpvar_234[0].xyz = tmpvar_231.xyz;
  tmpvar_234[1].xyz = tmpvar_232.xyz;
  tmpvar_234[2].xyz = tmpvar_233.xyz;
  vec3 tmpvar_238;
  tmpvar_238 = (tmpvar_234 * (v_i0.normal * unity_Scale.w));
  worldN = tmpvar_238;
  o.normal = tmpvar_238;
  vec4 tmpvar_240;
  tmpvar_240.xyz = tmpvar_238;
  tmpvar_240.w = 1.000000;
  vec4 normal;
  normal = tmpvar_240;
  vec3 x1;
  vec4 vB;
  vec3 x2;
  float tmpvar_243;
  tmpvar_243 = dot (unity_SHAr, normal);
  x1.x = tmpvar_243;
  float tmpvar_245;
  tmpvar_245 = dot (unity_SHAg, normal);
  x1.y = tmpvar_245;
  float tmpvar_247;
  tmpvar_247 = dot (unity_SHAb, normal);
  x1.z = tmpvar_247;
  vB = (normal.xyzz * normal.yzzx);
  float tmpvar_250;
  tmpvar_250 = dot (unity_SHBr, vB);
  x2.x = tmpvar_250;
  float tmpvar_252;
  tmpvar_252 = dot (unity_SHBg, vB);
  x2.y = tmpvar_252;
  float tmpvar_254;
  tmpvar_254 = dot (unity_SHBb, vB);
  x2.z = tmpvar_254;
  o.vlight = ((x1 + x2) + (unity_SHC.xyz * ((normal.x * normal.x) - (normal.y * normal.y))));
  vec3 tmpvar_260;
  tmpvar_260 = (_Object2World * v.vertex).xyz;
  vec3 lightColor0;
  lightColor0 = unity_LightColor0;
  vec3 lightColor1;
  lightColor1 = unity_LightColor1;
  vec3 lightColor2;
  lightColor2 = unity_LightColor2;
  vec3 lightColor3;
  lightColor3 = unity_LightColor3;
  vec4 lightAttenSq;
  lightAttenSq = unity_4LightAtten0;
  vec4 lengthSq;
  vec4 ndotl;
  vec4 tmpvar_263;
  tmpvar_263 = (unity_4LightPosX0 - tmpvar_260.x);
  vec4 tmpvar_264;
  tmpvar_264 = (unity_4LightPosY0 - tmpvar_260.y);
  vec4 tmpvar_265;
  tmpvar_265 = (unity_4LightPosZ0 - tmpvar_260.z);
  lengthSq = (((tmpvar_263 * tmpvar_263) + (tmpvar_264 * tmpvar_264)) + (tmpvar_265 * tmpvar_265));
  ndotl = (((tmpvar_263 * worldN.x) + (tmpvar_264 * worldN.y)) + (tmpvar_265 * worldN.z));
  vec4 tmpvar_274;
  tmpvar_274 = inversesqrt (lengthSq);
  vec4 tmpvar_276;
  tmpvar_276 = max (vec4 (0.000000, 0.000000, 0.000000, 0.000000), (ndotl * tmpvar_274));
  ndotl = tmpvar_276;
  vec4 tmpvar_279;
  tmpvar_279 = (tmpvar_276 * 1.0/((1.000000 + (lengthSq * lightAttenSq))));
  o.vlight = (o.vlight + ((((lightColor0 * tmpvar_279.x) + (lightColor1 * tmpvar_279.y)) + (lightColor2 * tmpvar_279.z)) + (lightColor3 * tmpvar_279.w)));
  vec4 tmpvar_15;
  tmpvar_15.xyzw = o.pos;
  gl_Position = tmpvar_15;
  vec4 tmpvar_17;
  tmpvar_17.x = o.fog;
  tmpvar_17.y = 0.000000;
  tmpvar_17.z = 0.000000;
  tmpvar_17.w = 0.000000;
  xlv_FOG = tmpvar_17;
  vec4 tmpvar_19;
  tmpvar_19.xy = o.hip_pack0;
  tmpvar_19.z = 0.000000;
  tmpvar_19.w = 0.000000;
  gl_TexCoord[0] = tmpvar_19;
  vec4 tmpvar_21;
  tmpvar_21.xyzw = o.lop_color;
  gl_FrontColor = tmpvar_21;
  vec4 tmpvar_23;
  tmpvar_23.xyz = o.normal;
  tmpvar_23.w = 0.000000;
  gl_TexCoord[1] = tmpvar_23;
  vec4 tmpvar_25;
  tmpvar_25.xyz = o.vlight;
  tmpvar_25.w = 0.000000;
  gl_TexCoord[2] = tmpvar_25;
}

