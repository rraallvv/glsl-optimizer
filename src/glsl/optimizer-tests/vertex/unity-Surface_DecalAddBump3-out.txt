struct v2f_surf {
  vec4 pos;
  float fog;
  vec4 hip_pack0;
  vec3 lightDir;
  vec3 vlight;
  vec4 _ShadowCoord;
};
struct appdata_full {
  vec4 vertex;
  vec4 tangent;
  vec3 normal;
  vec4 texcoord;
  vec4 texcoord1;
  vec4 color;
};
uniform vec4 _DecalBump_ST;
uniform vec4 _Decal_ST;
uniform mat4 _Object2World;
uniform vec4 _ProjectionParams;
uniform mat4 _World2Object;
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 unity_SHAb;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAr;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHC;
uniform vec4 unity_Scale;
attribute vec4 TANGENT;
varying vec4 xlv_FOG;
void main ()
{
  appdata_full xlt_v;
  vec4 tmpvar_1;
  tmpvar_1.xyzw = gl_Vertex;
  xlt_v.vertex = tmpvar_1;
  vec4 tmpvar_3;
  tmpvar_3.xyzw = TANGENT;
  xlt_v.tangent = tmpvar_3;
  vec3 tmpvar_5;
  tmpvar_5.xyz = gl_Normal;
  xlt_v.normal = tmpvar_5;
  vec4 tmpvar_7;
  tmpvar_7.xyzw = gl_MultiTexCoord0;
  xlt_v.texcoord = tmpvar_7;
  vec4 tmpvar_9;
  tmpvar_9.xyzw = gl_MultiTexCoord1;
  xlt_v.texcoord1 = tmpvar_9;
  vec4 tmpvar_11;
  tmpvar_11.xyzw = gl_Color;
  xlt_v.color = tmpvar_11;
  appdata_full v;
  v = xlt_v;
  v2f_surf o;
  vec3 worldN;
  vec4 pos;
  float fog;
  vec4 tmpvar_61;
  tmpvar_61 = (gl_ModelViewProjectionMatrix * xlt_v.vertex);
  pos = tmpvar_61;
  float tmpvar_62;
  tmpvar_62 = tmpvar_61.z;
  fog = tmpvar_62;
  o.pos = tmpvar_61;
  o.fog = tmpvar_62;
  o.hip_pack0.xy = ((xlt_v.texcoord.xy * _Decal_ST.xy) + _Decal_ST.zw);
  o.hip_pack0.zw = ((xlt_v.texcoord.xy * _DecalBump_ST.xy) + _DecalBump_ST.zw);
  vec3 tmpvar_67;
  tmpvar_67.xyz = vec3(_Object2World[0]);
  vec3 tmpvar_68;
  tmpvar_68.xyz = vec3(_Object2World[1]);
  vec3 tmpvar_69;
  tmpvar_69.xyz = vec3(_Object2World[2]);
  mat3 tmpvar_70;
  tmpvar_70[0].xyz = tmpvar_67.xyz;
  tmpvar_70[1].xyz = tmpvar_68.xyz;
  tmpvar_70[2].xyz = tmpvar_69.xyz;
  worldN = (tmpvar_70 * (xlt_v.normal * unity_Scale.w));
  vec3 tmpvar_75;
  tmpvar_75 = cross (v.normal, v.tangent.xyz);
  vec3 tmpvar_76;
  tmpvar_76 = (tmpvar_75 * v.tangent.w);
  mat3 tmpvar_77;
  tmpvar_77[0].x = v.tangent.x;
  tmpvar_77[0].y = tmpvar_76.x;
  tmpvar_77[0].z = v.normal.x;
  tmpvar_77[1].x = v.tangent.y;
  tmpvar_77[1].y = tmpvar_76.y;
  tmpvar_77[1].z = v.normal.y;
  tmpvar_77[2].x = v.tangent.z;
  tmpvar_77[2].y = tmpvar_76.z;
  tmpvar_77[2].z = v.normal.z;
  o.lightDir = (tmpvar_77 * (_World2Object * _WorldSpaceLightPos0).xyz);
  vec4 tmpvar_92;
  tmpvar_92.xyz = worldN;
  tmpvar_92.w = 1.000000;
  vec4 normal;
  normal = tmpvar_92;
  vec3 x1;
  vec4 vB;
  vec3 x2;
  float tmpvar_95;
  tmpvar_95 = dot (unity_SHAr, normal);
  x1.x = tmpvar_95;
  float tmpvar_97;
  tmpvar_97 = dot (unity_SHAg, normal);
  x1.y = tmpvar_97;
  float tmpvar_99;
  tmpvar_99 = dot (unity_SHAb, normal);
  x1.z = tmpvar_99;
  vB = (normal.xyzz * normal.yzzx);
  float tmpvar_102;
  tmpvar_102 = dot (unity_SHBr, vB);
  x2.x = tmpvar_102;
  float tmpvar_104;
  tmpvar_104 = dot (unity_SHBg, vB);
  x2.y = tmpvar_104;
  float tmpvar_106;
  tmpvar_106 = dot (unity_SHBb, vB);
  x2.z = tmpvar_106;
  o.vlight = ((x1 + x2) + (unity_SHC.xyz * ((normal.x * normal.x) - (normal.y * normal.y))));
  vec4 pos_i0;
  pos_i0 = o.pos;
  vec4 o_i0;
  vec4 tmpvar_114;
  tmpvar_114 = (pos_i0 * 0.500000);
  o_i0 = tmpvar_114;
  vec2 tmpvar_115;
  tmpvar_115.x = tmpvar_114.x;
  tmpvar_115.y = (tmpvar_114.y * _ProjectionParams.x);
  o_i0.xy = (tmpvar_115 + tmpvar_114.w);
  o_i0.zw = pos_i0.zw;
  o._ShadowCoord = o_i0;
  vec4 tmpvar_15;
  tmpvar_15.xyzw = o.pos;
  gl_Position = tmpvar_15;
  vec4 tmpvar_17;
  tmpvar_17.x = o.fog;
  tmpvar_17.y = 0.000000;
  tmpvar_17.z = 0.000000;
  tmpvar_17.w = 0.000000;
  xlv_FOG = tmpvar_17;
  vec4 tmpvar_19;
  tmpvar_19.xyzw = o.hip_pack0;
  gl_TexCoord[0] = tmpvar_19;
  vec4 tmpvar_21;
  tmpvar_21.xyz = o.lightDir;
  tmpvar_21.w = 0.000000;
  gl_TexCoord[1] = tmpvar_21;
  vec4 tmpvar_23;
  tmpvar_23.xyz = o.vlight;
  tmpvar_23.w = 0.000000;
  gl_TexCoord[2] = tmpvar_23;
  vec4 tmpvar_25;
  tmpvar_25.xyzw = o._ShadowCoord;
  gl_TexCoord[3] = tmpvar_25;
}

