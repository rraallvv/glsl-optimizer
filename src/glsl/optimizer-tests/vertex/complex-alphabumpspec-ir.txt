struct v2f_surf {
  vec4 pos;
  float fog;
  vec4 hip_pack0;
  vec3 viewDir;
  vec3 lightDir;
  vec3 vlight;
};
struct appdata_full {
  vec4 vertex;
  vec4 tangent;
  vec3 normal;
  vec4 texcoord;
  vec4 texcoord1;
  vec4 color;
};
mat3 xll_constructMat3 (
  in mat4 m;
)
{
  vec3 tmpvar_1;
  tmpvar_1 .xyz = m [0] ; 
  vec3 tmpvar_2;
  tmpvar_2 .xyz = m [1] ; 
  vec3 tmpvar_3;
  tmpvar_3 .xyz = m [2] ; 
  mat3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5  = tmpvar_1 ; 
  tmpvar_4 [uint (0) ] .xyz = tmpvar_5 .xyz; 
  vec3 tmpvar_6;
  tmpvar_6  = tmpvar_2 ; 
  tmpvar_4 [uint (1) ] .xyz = tmpvar_6 .xyz; 
  vec3 tmpvar_7;
  tmpvar_7  = tmpvar_3 ; 
  tmpvar_4 [uint (2) ] .xyz = tmpvar_7 .xyz; 
  return tmpvar_4 ;
}

uniform vec4 _BumpMap_ST;
uniform vec4 _MainTex_ST;
uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 unity_SHAb;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAr;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHC;
uniform vec4 unity_Scale;
vec3 ShadeSH9 (
  in vec4 normal;
);

vec3 ShadeSH9 (
  in vec4 normal;
)
{
  vec3 x1;
  vec4 vB;
  vec3 x2;
  float vC;
  vec3 x3;
  float tmpvar_1;
  tmpvar_1  = dot (unity_SHAr , normal ) ; 
  float tmpvar_2;
  tmpvar_2  = tmpvar_1 ; 
  x1 .x = tmpvar_2 ; 
  float tmpvar_3;
  tmpvar_3  = dot (unity_SHAg , normal ) ; 
  float tmpvar_4;
  tmpvar_4  = tmpvar_3 ; 
  x1 .y = tmpvar_4 ; 
  float tmpvar_5;
  tmpvar_5  = dot (unity_SHAb , normal ) ; 
  float tmpvar_6;
  tmpvar_6  = tmpvar_5 ; 
  x1 .z = tmpvar_6 ; 
  vec4 tmpvar_7;
  tmpvar_7  = normal .xyzz * normal .yzzx ; 
  vB  = tmpvar_7 ; 
  float tmpvar_8;
  tmpvar_8  = dot (unity_SHBr , vB ) ; 
  float tmpvar_9;
  tmpvar_9  = tmpvar_8 ; 
  x2 .x = tmpvar_9 ; 
  float tmpvar_10;
  tmpvar_10  = dot (unity_SHBg , vB ) ; 
  float tmpvar_11;
  tmpvar_11  = tmpvar_10 ; 
  x2 .y = tmpvar_11 ; 
  float tmpvar_12;
  tmpvar_12  = dot (unity_SHBb , vB ) ; 
  float tmpvar_13;
  tmpvar_13  = tmpvar_12 ; 
  x2 .z = tmpvar_13 ; 
  float tmpvar_14;
  tmpvar_14  = normal .x * normal .x  - normal .y * normal .y  ; 
  vC  = tmpvar_14 ; 
  vec3 tmpvar_15;
  tmpvar_15  = unity_SHC .xyz * vC  ; 
  x3  = tmpvar_15 ; 
  return x1  + x2   + x3  ;
}

void PositionFog (
  in vec4 v;
  out vec4 pos;
  out float fog;
);

void PositionFog (
  in vec4 v;
  out vec4 pos;
  out float fog;
)
{
  vec4 tmpvar_1;
  tmpvar_1  = gl_ModelViewProjectionMatrix  * v  ; 
  pos  = tmpvar_1 ; 
  float tmpvar_2;
  tmpvar_2  = pos .z; 
  fog  = tmpvar_2 ; 
}

vec3 ObjSpaceViewDir (
  in vec4 v;
);

vec3 ObjSpaceViewDir (
  in vec4 v;
)
{
  vec3 objSpaceCameraPos;
  vec4 tmpvar_1;
  tmpvar_1 .xyz = _WorldSpaceCameraPos .xyz; 
  tmpvar_1 .w = 1.000000; 
  vec3 tmpvar_2;
  tmpvar_2  = _World2Object  * tmpvar_1  .xyz * unity_Scale .w ; 
  objSpaceCameraPos  = tmpvar_2 ; 
  return objSpaceCameraPos  - v .xyz ;
}

vec3 ObjSpaceLightDir (
  in vec4 v;
);

vec3 ObjSpaceLightDir (
  in vec4 v;
)
{
  vec3 objSpaceLightPos;
  vec3 tmpvar_1;
  tmpvar_1  = _World2Object  * _WorldSpaceLightPos0  .xyz; 
  objSpaceLightPos  = tmpvar_1 ; 
  return objSpaceLightPos .xyz;
}

v2f_surf vert_surf (
  in appdata_full v;
);

v2f_surf vert_surf (
  in appdata_full v;
)
{
  v2f_surf o;
  vec3 worldN;
  vec3 binormal;
  mat3 rotation;
  vec3 shlight;
  PositionFog (v .vertex , o .pos , o .fog ) 
  vec2 tmpvar_1;
  tmpvar_1  = v .texcoord .xy * _MainTex_ST .xy  + _MainTex_ST .zw ; 
  o .hip_pack0 .xy = tmpvar_1 ; 
  vec2 tmpvar_2;
  tmpvar_2  = v .texcoord .xy * _BumpMap_ST .xy  + _BumpMap_ST .zw ; 
  o .hip_pack0 .zw = tmpvar_2 ; 
  mat3 tmpvar_3;
  tmpvar_3  = xll_constructMat3 (_Object2World ) ; 
  vec3 tmpvar_4;
  tmpvar_4  = tmpvar_3  * v .normal  * unity_Scale .w  ; 
  worldN  = tmpvar_4 ; 
  vec3 tmpvar_5;
  tmpvar_5  = cross (v .normal , v .tangent .xyz) ; 
  vec3 tmpvar_6;
  tmpvar_6  = tmpvar_5  * v .tangent .w ; 
  binormal  = tmpvar_6 ; 
  mat3 tmpvar_7;
  float tmpvar_8;
  tmpvar_8  = v .tangent .x; 
  tmpvar_7 [uint (0) ] .x = tmpvar_8 .x; 
  float tmpvar_9;
  tmpvar_9  = binormal .x; 
  tmpvar_7 [uint (0) ] .y = tmpvar_9 .x; 
  float tmpvar_10;
  tmpvar_10  = v .normal .x; 
  tmpvar_7 [uint (0) ] .z = tmpvar_10 .x; 
  float tmpvar_11;
  tmpvar_11  = v .tangent .y; 
  tmpvar_7 [uint (1) ] .x = tmpvar_11 .x; 
  float tmpvar_12;
  tmpvar_12  = binormal .y; 
  tmpvar_7 [uint (1) ] .y = tmpvar_12 .x; 
  float tmpvar_13;
  tmpvar_13  = v .normal .y; 
  tmpvar_7 [uint (1) ] .z = tmpvar_13 .x; 
  float tmpvar_14;
  tmpvar_14  = v .tangent .z; 
  tmpvar_7 [uint (2) ] .x = tmpvar_14 .x; 
  float tmpvar_15;
  tmpvar_15  = binormal .z; 
  tmpvar_7 [uint (2) ] .y = tmpvar_15 .x; 
  float tmpvar_16;
  tmpvar_16  = v .normal .z; 
  tmpvar_7 [uint (2) ] .z = tmpvar_16 .x; 
  mat3 tmpvar_17;
  tmpvar_17  = tmpvar_7 ; 
  rotation  = tmpvar_17 ; 
  vec3 tmpvar_18;
  tmpvar_18  = ObjSpaceLightDir (v .vertex ) ; 
  vec3 tmpvar_19;
  tmpvar_19  = rotation  * tmpvar_18  ; 
  o .lightDir  = tmpvar_19 ; 
  vec3 tmpvar_20;
  tmpvar_20  = ObjSpaceViewDir (v .vertex ) ; 
  vec3 tmpvar_21;
  tmpvar_21  = rotation  * tmpvar_20  ; 
  o .viewDir  = tmpvar_21 ; 
  vec4 tmpvar_22;
  tmpvar_22 .xyz = worldN ; 
  tmpvar_22 .w = 1.000000; 
  vec3 tmpvar_23;
  tmpvar_23  = ShadeSH9 (tmpvar_22 ) ; 
  vec3 tmpvar_24;
  tmpvar_24  = tmpvar_23 ; 
  shlight  = tmpvar_24 ; 
  vec3 tmpvar_25;
  tmpvar_25  = shlight ; 
  o .vlight  = tmpvar_25 ; 
  return o ;
}

in vec4 TANGENT;
out vec4 xlv_FOG;
void main ()
{
  v2f_surf xl_retval;
  appdata_full xlt_v;
  vec4 tmpvar_1;
  tmpvar_1 .xyzw = gl_Vertex ; 
  vec4 tmpvar_2;
  tmpvar_2  = tmpvar_1 ; 
  xlt_v .vertex  = tmpvar_2 ; 
  vec4 tmpvar_3;
  tmpvar_3 .xyzw = TANGENT ; 
  vec4 tmpvar_4;
  tmpvar_4  = tmpvar_3 ; 
  xlt_v .tangent  = tmpvar_4 ; 
  vec3 tmpvar_5;
  tmpvar_5 .xyz = gl_Normal ; 
  vec3 tmpvar_6;
  tmpvar_6  = tmpvar_5 ; 
  xlt_v .normal  = tmpvar_6 ; 
  vec4 tmpvar_7;
  tmpvar_7 .xyzw = gl_MultiTexCoord0 ; 
  vec4 tmpvar_8;
  tmpvar_8  = tmpvar_7 ; 
  xlt_v .texcoord  = tmpvar_8 ; 
  vec4 tmpvar_9;
  tmpvar_9 .xyzw = gl_MultiTexCoord1 ; 
  vec4 tmpvar_10;
  tmpvar_10  = tmpvar_9 ; 
  xlt_v .texcoord1  = tmpvar_10 ; 
  vec4 tmpvar_11;
  tmpvar_11 .xyzw = gl_Color ; 
  vec4 tmpvar_12;
  tmpvar_12  = tmpvar_11 ; 
  xlt_v .color  = tmpvar_12 ; 
  v2f_surf tmpvar_13;
  tmpvar_13  = vert_surf (xlt_v ) ; 
  v2f_surf tmpvar_14;
  tmpvar_14  = tmpvar_13 ; 
  xl_retval  = tmpvar_14 ; 
  vec4 tmpvar_15;
  tmpvar_15 .xyzw = xl_retval .pos ; 
  vec4 tmpvar_16;
  tmpvar_16  = tmpvar_15 ; 
  gl_Position  = tmpvar_16 ; 
  vec4 tmpvar_17;
  tmpvar_17 .x = xl_retval .fog ; 
  tmpvar_17 .y = 0.000000; 
  tmpvar_17 .z = 0.000000; 
  tmpvar_17 .w = 0.000000; 
  vec4 tmpvar_18;
  tmpvar_18  = tmpvar_17 ; 
  xlv_FOG  = tmpvar_18 ; 
  vec4 tmpvar_19;
  tmpvar_19 .xyzw = xl_retval .hip_pack0 ; 
  vec4 tmpvar_20;
  tmpvar_20  = tmpvar_19 ; 
  gl_TexCoord [0]  = tmpvar_20 ; 
  vec4 tmpvar_21;
  tmpvar_21 .xyz = xl_retval .viewDir ; 
  tmpvar_21 .w = 0.000000; 
  vec4 tmpvar_22;
  tmpvar_22  = tmpvar_21 ; 
  gl_TexCoord [1]  = tmpvar_22 ; 
  vec4 tmpvar_23;
  tmpvar_23 .xyz = xl_retval .lightDir ; 
  tmpvar_23 .w = 0.000000; 
  vec4 tmpvar_24;
  tmpvar_24  = tmpvar_23 ; 
  gl_TexCoord [2]  = tmpvar_24 ; 
  vec4 tmpvar_25;
  tmpvar_25 .xyz = xl_retval .vlight ; 
  tmpvar_25 .w = 0.000000; 
  vec4 tmpvar_26;
  tmpvar_26  = tmpvar_25 ; 
  gl_TexCoord [3]  = tmpvar_26 ; 
}

