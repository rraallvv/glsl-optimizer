struct appdata_full {
  vec4 vertex;
  vec4 tangent;
  vec3 normal;
  vec4 texcoord;
  vec4 texcoord1;
  vec4 color;
};
struct v2f_surf {
  vec4 pos;
  float fog;
  vec2 hip_pack0;
  vec4 hip_screen;
  vec3 hip_lmapFade;
};
uniform vec4 _MainTex_ST;
uniform vec4 _ProjectionParams;
uniform vec4 _Scale;
uniform float _SquashAmount;
uniform vec4 _SquashPlaneNormal;
uniform mat4 _TerrainEngineBendTree;
uniform vec4 unity_LightmapFade;
uniform vec4 unity_LightmapST;
vec4 Squash (
  in vec4 pos
);

vec4 Squash (
  in vec4 pos
)
{
  vec3 projectedVertex;
  vec3 planePoint;
  vec3 planeNormal;
  vec3 tmpvar_1;
  tmpvar_1 = pos.xyz;
  projectedVertex = tmpvar_1;
  vec3 tmpvar_2;
  tmpvar_2.x = 0.000000;
  tmpvar_2.y = _SquashPlaneNormal.w;
  tmpvar_2.z = 0.000000;
  vec3 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  planePoint = tmpvar_3;
  vec3 tmpvar_4;
  tmpvar_4 = _SquashPlaneNormal.xyz;
  planeNormal = tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5.xyz = vec3(pos);
  float tmpvar_6;
  tmpvar_6 = dot (planeNormal, (planePoint - tmpvar_5));
  vec3 tmpvar_7;
  tmpvar_7 = (projectedVertex + (tmpvar_6 * planeNormal));
  projectedVertex = tmpvar_7;
  vec3 tmpvar_8;
  tmpvar_8 = _SquashAmount.xxx;
  vec3 tmpvar_9;
  tmpvar_9 = mix (projectedVertex, pos.xyz, tmpvar_8);
  vec4 tmpvar_10;
  tmpvar_10.xyz = tmpvar_9;
  tmpvar_10.w = 1.000000;
  vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  pos = tmpvar_11;
  return pos;
}

void TerrainAnimateTree (
  inout vec4 pos,
  in float alpha
);

void TerrainAnimateTree (
  inout vec4 pos,
  in float alpha
)
{
  vec3 bent;
  vec3 tmpvar_1;
  tmpvar_1 = (pos.xyz * _Scale.xyz);
  pos.xyz = tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2.xyz = pos.xyz;
  tmpvar_2.w = 0.000000;
  vec3 tmpvar_3;
  tmpvar_3 = (_TerrainEngineBendTree * tmpvar_2).xyz;
  bent = tmpvar_3;
  vec3 tmpvar_4;
  tmpvar_4 = alpha.xxx;
  vec3 tmpvar_5;
  tmpvar_5 = mix (pos.xyz, bent, tmpvar_4);
  vec3 tmpvar_6;
  tmpvar_6 = tmpvar_5;
  pos.xyz = tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = Squash (pos);
  vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  pos = tmpvar_8;
}

void treevertex (
  inout appdata_full v
);

void treevertex (
  inout appdata_full v
)
{
  TerrainAnimateTree (v.vertex, v.color.w);
}

void PositionFog (
  in vec4 v,
  out vec4 pos,
  out float fog
);

void PositionFog (
  in vec4 v,
  out vec4 pos,
  out float fog
)
{
  vec4 tmpvar_1;
  tmpvar_1 = (gl_ModelViewProjectionMatrix * v);
  pos = tmpvar_1;
  float tmpvar_2;
  tmpvar_2 = pos.z;
  fog = tmpvar_2;
}

vec4 ComputeScreenPos (
  in vec4 pos
);

vec4 ComputeScreenPos (
  in vec4 pos
)
{
  vec4 o;
  vec4 tmpvar_1;
  tmpvar_1 = (pos * 0.500000);
  o = tmpvar_1;
  vec2 tmpvar_2;
  tmpvar_2.x = o.x;
  tmpvar_2.y = (o.y * _ProjectionParams.x);
  vec2 tmpvar_3;
  tmpvar_3 = (tmpvar_2 + o.w);
  o.xy = tmpvar_3;
  vec2 tmpvar_4;
  tmpvar_4 = pos.zw;
  o.zw = tmpvar_4;
  return o;
}

v2f_surf vert_surf (
  in appdata_full v
);

v2f_surf vert_surf (
  in appdata_full v
)
{
  v2f_surf o;
  treevertex (v);
  PositionFog (v.vertex, o.pos, o.fog);
  vec2 tmpvar_1;
  tmpvar_1 = ((v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  o.hip_pack0.xy = tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = ComputeScreenPos (o.pos);
  vec4 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  o.hip_screen = tmpvar_3;
  vec2 tmpvar_4;
  tmpvar_4 = ((v.texcoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  o.hip_lmapFade.xy = tmpvar_4;
  float tmpvar_5;
  tmpvar_5 = ((-((gl_ModelViewMatrix * v.vertex).z) * unity_LightmapFade.z) + unity_LightmapFade.w);
  o.hip_lmapFade.z = tmpvar_5;
  return o;
}

attribute vec4 TANGENT;
varying vec4 xlv_FOG;
void main ()
{
  v2f_surf xl_retval;
  appdata_full xlt_v;
  vec4 tmpvar_1;
  tmpvar_1.xyzw = gl_Vertex;
  vec4 tmpvar_2;
  tmpvar_2 = tmpvar_1;
  xlt_v.vertex = tmpvar_2;
  vec4 tmpvar_3;
  tmpvar_3.xyzw = TANGENT;
  vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  xlt_v.tangent = tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5.xyz = gl_Normal;
  vec3 tmpvar_6;
  tmpvar_6 = tmpvar_5;
  xlt_v.normal = tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7.xyzw = gl_MultiTexCoord0;
  vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  xlt_v.texcoord = tmpvar_8;
  vec4 tmpvar_9;
  tmpvar_9.xyzw = gl_MultiTexCoord1;
  vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  xlt_v.texcoord1 = tmpvar_10;
  vec4 tmpvar_11;
  tmpvar_11.xyzw = gl_Color;
  vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  xlt_v.color = tmpvar_12;
  v2f_surf tmpvar_13;
  tmpvar_13 = vert_surf (xlt_v);
  v2f_surf tmpvar_14;
  tmpvar_14 = tmpvar_13;
  xl_retval = tmpvar_14;
  vec4 tmpvar_15;
  tmpvar_15.xyzw = xl_retval.pos;
  vec4 tmpvar_16;
  tmpvar_16 = tmpvar_15;
  gl_Position = tmpvar_16;
  vec4 tmpvar_17;
  tmpvar_17.x = xl_retval.fog;
  tmpvar_17.y = 0.000000;
  tmpvar_17.z = 0.000000;
  tmpvar_17.w = 0.000000;
  vec4 tmpvar_18;
  tmpvar_18 = tmpvar_17;
  xlv_FOG = tmpvar_18;
  vec4 tmpvar_19;
  tmpvar_19.xy = xl_retval.hip_pack0;
  tmpvar_19.z = 0.000000;
  tmpvar_19.w = 0.000000;
  vec4 tmpvar_20;
  tmpvar_20 = tmpvar_19;
  gl_TexCoord[0] = tmpvar_20;
  vec4 tmpvar_21;
  tmpvar_21.xyzw = xl_retval.hip_screen;
  vec4 tmpvar_22;
  tmpvar_22 = tmpvar_21;
  gl_TexCoord[1] = tmpvar_22;
  vec4 tmpvar_23;
  tmpvar_23.xyz = xl_retval.hip_lmapFade;
  tmpvar_23.w = 0.000000;
  vec4 tmpvar_24;
  tmpvar_24 = tmpvar_23;
  gl_TexCoord[2] = tmpvar_24;
}

