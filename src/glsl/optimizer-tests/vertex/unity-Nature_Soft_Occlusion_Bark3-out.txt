struct appdata_full {
  vec4 vertex;
  vec4 tangent;
  vec3 normal;
  vec4 texcoord;
  vec4 texcoord1;
  vec4 color;
};
struct v2f_surf {
  vec4 pos;
  vec3 _ShadowCoord0;
  vec3 _ShadowCoord1;
  vec3 _ShadowCoord2;
  vec3 _ShadowCoord3;
  vec2 _ShadowZFade;
};
uniform vec4 _LightShadowData;
uniform mat4 _Object2World;
uniform vec4 _Scale;
uniform float _SquashAmount;
uniform vec4 _SquashPlaneNormal;
uniform mat4 _TerrainEngineBendTree;
uniform mat4 _World2Shadow;
uniform mat4 _World2Shadow1;
uniform mat4 _World2Shadow2;
uniform mat4 _World2Shadow3;
attribute vec4 TANGENT;
void main ()
{
  appdata_full xlt_v;
  xlt_v.vertex = gl_Vertex.xyzw;
  xlt_v.tangent = TANGENT.xyzw;
  xlt_v.normal = gl_Normal.xyz;
  xlt_v.texcoord = gl_MultiTexCoord0.xyzw;
  xlt_v.texcoord1 = gl_MultiTexCoord1.xyzw;
  xlt_v.color = gl_Color.xyzw;
  v2f_surf o;
  appdata_full v_i0;
  v_i0 = xlt_v;
  vec4 pos;
  pos = xlt_v.vertex;
  pos.xyz = (pos.xyz * _Scale.xyz).xyz;
  vec4 tmpvar_81;
  tmpvar_81.xyz = vec3(pos.xyzx);
  tmpvar_81.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  vec3 tmpvar_84;
  tmpvar_84 = mix (pos.xyz, (_TerrainEngineBendTree * tmpvar_81).xyz, xlt_v.color.www);
  pos.xyz = tmpvar_84.xyz;
  vec4 pos_i0;
  pos_i0 = pos;
  vec3 projectedVertex;
  vec3 planeNormal;
  projectedVertex = pos.xyz;
  vec3 tmpvar_89;
  tmpvar_89.x = float(vec3(0.000000, 0.000000, 0.000000));
  tmpvar_89.y = float(_SquashPlaneNormal.www);
  tmpvar_89.z = float(vec3(0.000000, 0.000000, 0.000000));
  planeNormal = _SquashPlaneNormal.xyz;
  float tmpvar_93;
  tmpvar_93 = dot (planeNormal, (tmpvar_89 - pos.xyz));
  projectedVertex = (projectedVertex + (tmpvar_93 * planeNormal));
  vec3 tmpvar_96;
  tmpvar_96 = mix (projectedVertex, pos_i0.xyz, vec3(_SquashAmount));
  vec4 tmpvar_97;
  tmpvar_97.xyz = vec3(tmpvar_96.xyzx);
  tmpvar_97.w = float(vec4(1.000000, 1.000000, 1.000000, 1.000000));
  pos_i0 = tmpvar_97;
  pos = tmpvar_97;
  v_i0.vertex = tmpvar_97;
  o.pos = (gl_ModelViewProjectionMatrix * v_i0.vertex);
  float tmpvar_101;
  tmpvar_101 = -((gl_ModelViewMatrix * v_i0.vertex).z);
  o._ShadowZFade.x = tmpvar_101;
  o._ShadowZFade.y = float(vec2(((tmpvar_101 * _LightShadowData.z) + _LightShadowData.w)));
  vec4 tmpvar_104;
  tmpvar_104 = (_Object2World * v_i0.vertex);
  o._ShadowCoord0 = (_World2Shadow * tmpvar_104).xyz;
  o._ShadowCoord1 = (_World2Shadow1 * tmpvar_104).xyz;
  o._ShadowCoord2 = (_World2Shadow2 * tmpvar_104).xyz;
  o._ShadowCoord3 = (_World2Shadow3 * tmpvar_104).xyz;
  gl_Position = o.pos.xyzw;
  vec4 tmpvar_17;
  tmpvar_17.xyz = vec3(o._ShadowCoord0.xyzx);
  tmpvar_17.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[0] = tmpvar_17;
  vec4 tmpvar_19;
  tmpvar_19.xyz = vec3(o._ShadowCoord1.xyzx);
  tmpvar_19.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[1] = tmpvar_19;
  vec4 tmpvar_21;
  tmpvar_21.xyz = vec3(o._ShadowCoord2.xyzx);
  tmpvar_21.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[2] = tmpvar_21;
  vec4 tmpvar_23;
  tmpvar_23.xyz = vec3(o._ShadowCoord3.xyzx);
  tmpvar_23.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[3] = tmpvar_23;
  vec4 tmpvar_25;
  tmpvar_25.xy = vec2(o._ShadowZFade.xyxx);
  tmpvar_25.z = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_25.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[4] = tmpvar_25;
}

