struct appdata_full {
  vec4 vertex;
  vec4 tangent;
  vec3 normal;
  vec4 texcoord;
  vec4 texcoord1;
  vec4 color;
};
struct v2f_surf {
  vec4 pos;
  float fog;
  vec2 hip_pack0;
  vec3 normal;
  vec3 lightDir;
  vec4 _LightCoord;
};
uniform mat4 _LightMatrix0;
uniform vec4 _MainTex_ST;
uniform mat4 _Object2World;
uniform vec4 _Scale;
uniform float _SquashAmount;
uniform vec4 _SquashPlaneNormal;
uniform mat4 _TerrainEngineBendTree;
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 unity_Scale;
attribute vec4 TANGENT;
varying vec4 xlv_FOG;
void main ()
{
  appdata_full xlt_v;
  xlt_v.vertex = gl_Vertex.xyzw;
  xlt_v.tangent = TANGENT.xyzw;
  xlt_v.normal = gl_Normal.xyz;
  xlt_v.texcoord = gl_MultiTexCoord0.xyzw;
  xlt_v.texcoord1 = gl_MultiTexCoord1.xyzw;
  xlt_v.color = gl_Color.xyzw;
  v2f_surf o;
  appdata_full v_i0;
  v_i0 = xlt_v;
  vec4 pos;
  pos = xlt_v.vertex;
  pos.xyz = (pos.xyz * _Scale.xyz).xyz;
  vec4 tmpvar_93;
  tmpvar_93.xyz = vec3(pos.xyzx);
  tmpvar_93.w = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  vec3 tmpvar_96;
  tmpvar_96 = mix (pos.xyz, (_TerrainEngineBendTree * tmpvar_93).xyz, xlt_v.color.www);
  pos.xyz = tmpvar_96.xyz;
  vec4 pos_i0;
  pos_i0 = pos;
  vec3 projectedVertex;
  vec3 planeNormal;
  projectedVertex = pos.xyz;
  vec3 tmpvar_101;
  tmpvar_101.x = float(vec3 (0.000000, 0.000000, 0.000000));
  tmpvar_101.y = float(_SquashPlaneNormal.www);
  tmpvar_101.z = float(vec3 (0.000000, 0.000000, 0.000000));
  planeNormal = _SquashPlaneNormal.xyz;
  float tmpvar_105;
  tmpvar_105 = dot (planeNormal, (tmpvar_101 - pos.xyz));
  projectedVertex = (projectedVertex + (tmpvar_105 * planeNormal));
  vec3 tmpvar_108;
  tmpvar_108 = mix (projectedVertex, pos_i0.xyz, vec3(_SquashAmount));
  vec4 tmpvar_109;
  tmpvar_109.xyz = vec3(tmpvar_108.xyzx);
  tmpvar_109.w = float(vec4 (1.000000, 1.000000, 1.000000, 1.000000));
  pos_i0 = tmpvar_109;
  pos = tmpvar_109;
  v_i0.vertex = tmpvar_109;
  vec4 tmpvar_112;
  tmpvar_112 = (gl_ModelViewProjectionMatrix * v_i0.vertex);
  o.pos = tmpvar_112;
  o.fog = tmpvar_112.z;
  o.hip_pack0 = ((v_i0.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw).xy;
  mat3 tmpvar_120;
  tmpvar_120[0] = _Object2World[0].xyz;
  tmpvar_120[1] = _Object2World[1].xyz;
  tmpvar_120[2] = _Object2World[2].xyz;
  o.normal = (tmpvar_120 * (v_i0.normal * unity_Scale.w));
  o.lightDir = (_WorldSpaceLightPos0.xyz - (_Object2World * v_i0.vertex).xyz);
  o._LightCoord = (_LightMatrix0 * (_Object2World * v_i0.vertex));
  gl_Position = o.pos.xyzw;
  vec4 tmpvar_17;
  tmpvar_17.x = float(vec4(o.fog));
  tmpvar_17.y = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_17.z = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_17.w = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  xlv_FOG = tmpvar_17;
  vec4 tmpvar_19;
  tmpvar_19.xy = vec2(o.hip_pack0.xyxx);
  tmpvar_19.z = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_19.w = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[0] = tmpvar_19;
  vec4 tmpvar_21;
  tmpvar_21.xyz = vec3(o.normal.xyzx);
  tmpvar_21.w = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[1] = tmpvar_21;
  vec4 tmpvar_23;
  tmpvar_23.xyz = vec3(o.lightDir.xyzx);
  tmpvar_23.w = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[2] = tmpvar_23;
  gl_TexCoord[3] = o._LightCoord.xyzw;
}

