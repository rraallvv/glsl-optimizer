varying vec4 xlv_FOG;
attribute vec4 TANGENT;
uniform vec4 _WavingTint;
uniform vec4 _WaveAndDistance;
uniform vec4 _ProjectionParams;
uniform vec4 _MainTex_ST;
void main ()
{
  vec4 vertex;
  vertex = gl_Vertex;
  vec4 outColor;
  vec3 waveMove;
  waveMove = vec3(0.0, 0.0, 0.0);
  vec4 tmpvar_1;
  tmpvar_1 = ((fract ((((gl_Vertex.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (gl_Vertex.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))) * 6.40885) - 3.14159);
  vec4 tmpvar_2;
  tmpvar_2 = (tmpvar_1 * tmpvar_1);
  vec4 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * tmpvar_1);
  vec4 tmpvar_4;
  tmpvar_4 = (tmpvar_3 * tmpvar_2);
  vec4 tmpvar_5;
  tmpvar_5 = (((tmpvar_1 + (tmpvar_3 * -0.161616)) + (tmpvar_4 * 0.0083333)) + ((tmpvar_4 * tmpvar_2) * -0.00019841));
  vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_5 * tmpvar_5);
  vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * tmpvar_6);
  vec4 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (gl_Color.w * _WaveAndDistance.z));
  waveMove.x = dot (tmpvar_8, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove.z = dot (tmpvar_8, vec4(0.006, 0.02, -0.02, 0.1));
  vertex.xz = (gl_Vertex.xz - (waveMove.xz * _WaveAndDistance.z));
  outColor.xyz = ((gl_Color.xyz * mix (vec3(0.5, 0.5, 0.5), _WavingTint.xyz, vec3((dot (tmpvar_7, vec4(0.6742, 0.6742, 0.26968, 0.13484)) * 0.7)))) * 2.0);
  outColor.w = 1.0;
  vec4 tmpvar_9;
  tmpvar_9 = (gl_ModelViewProjectionMatrix * vertex);
  vec4 o_i0;
  vec4 tmpvar_10;
  tmpvar_10 = (tmpvar_9 * 0.5);
  o_i0 = tmpvar_10;
  vec2 tmpvar_11;
  tmpvar_11.x = tmpvar_10.x;
  tmpvar_11.y = (tmpvar_10.y * _ProjectionParams.x);
  o_i0.xy = (tmpvar_11 + tmpvar_10.w);
  o_i0.zw = tmpvar_9.zw;
  gl_Position = tmpvar_9;
  vec4 tmpvar_12;
  tmpvar_12.yzw = vec3(0.0, 0.0, 0.0);
  tmpvar_12.x = tmpvar_9.z;
  xlv_FOG = tmpvar_12;
  vec4 tmpvar_13;
  tmpvar_13.zw = vec2(0.0, 0.0);
  tmpvar_13.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  gl_TexCoord[0] = tmpvar_13;
  gl_FrontColor = outColor;
  gl_TexCoord[1] = o_i0;
}

