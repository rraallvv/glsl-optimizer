struct appdata_img {
  vec4 vertex;
  vec2 texcoord;
};
struct v2f {
  vec4 pos;
  vec2 uv[3];
};
uniform vec4 _MainTex_TexelSize;
void main ()
{
  appdata_img xlt_v;
  xlt_v.vertex = gl_Vertex.xyzw;
  xlt_v.texcoord = gl_MultiTexCoord0.xy;
  v2f o;
  o.pos = (gl_ModelViewProjectionMatrix * xlt_v.vertex);
  vec2 __retval_i0;
  vec2 inUV;
  inUV = xlt_v.texcoord;
  vec4 tmpvar_23;
  tmpvar_23.x = float(inUV.xxxx);
  tmpvar_23.y = float(inUV.yyyy);
  tmpvar_23.z = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_23.w = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  __retval_i0 = (gl_TextureMatrix[0] * tmpvar_23).xy;
  o.uv[0] = __retval_i0;
  vec2 tmpvar_28;
  tmpvar_28.x = float(vec2(-(_MainTex_TexelSize.x)));
  tmpvar_28.y = float(vec2(-(_MainTex_TexelSize.y)));
  o.uv[1] = (__retval_i0 + tmpvar_28);
  vec2 tmpvar_30;
  tmpvar_30.x = float(_MainTex_TexelSize.xx);
  tmpvar_30.y = float(vec2(-(_MainTex_TexelSize.y)));
  o.uv[2] = (__retval_i0 + tmpvar_30);
  gl_Position = o.pos.xyzw;
  vec4 tmpvar_9;
  tmpvar_9.xy = vec2(o.uv[0].xyxx);
  tmpvar_9.z = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_9.w = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[0] = tmpvar_9;
  vec4 tmpvar_11;
  tmpvar_11.xy = vec2(o.uv[1].xyxx);
  tmpvar_11.z = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_11.w = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[1] = tmpvar_11;
  vec4 tmpvar_13;
  tmpvar_13.xy = vec2(o.uv[2].xyxx);
  tmpvar_13.z = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_13.w = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[2] = tmpvar_13;
}

