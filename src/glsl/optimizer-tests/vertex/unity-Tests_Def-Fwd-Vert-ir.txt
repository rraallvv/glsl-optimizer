struct v2f_surf {
  vec4 pos;
  float fog;
  vec3 normal;
  vec3 vlight;
};
struct appdata_full {
  vec4 vertex;
  vec4 tangent;
  vec3 normal;
  vec4 texcoord;
  vec4 texcoord1;
  vec4 color;
};
mat3 xll_constructMat3 (
  in mat4 m
)
{
  vec3 tmpvar_1;
  tmpvar_1.xyz = vec3(m[0]);
  vec3 tmpvar_2;
  tmpvar_2.xyz = vec3(m[1]);
  vec3 tmpvar_3;
  tmpvar_3.xyz = vec3(m[2]);
  mat3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = tmpvar_1;
  tmpvar_4[0].xyz = tmpvar_5.xyz;
  vec3 tmpvar_6;
  tmpvar_6 = tmpvar_2;
  tmpvar_4[1].xyz = tmpvar_6.xyz;
  vec3 tmpvar_7;
  tmpvar_7 = tmpvar_3;
  tmpvar_4[2].xyz = tmpvar_7.xyz;
  return tmpvar_4;
}

uniform mat4 _Object2World;
uniform vec4 unity_4LightAtten0;
uniform vec4 unity_4LightPosX0;
uniform vec4 unity_4LightPosY0;
uniform vec4 unity_4LightPosZ0;
uniform vec3 unity_LightColor0;
uniform vec3 unity_LightColor1;
uniform vec3 unity_LightColor2;
uniform vec3 unity_LightColor3;
uniform vec4 unity_SHAb;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAr;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHC;
uniform vec4 unity_Scale;
vec3 ShadeSH9 (
  in vec4 normal
);

vec3 ShadeSH9 (
  in vec4 normal
)
{
  vec3 x1;
  vec4 vB;
  vec3 x2;
  float vC;
  vec3 x3;
  float tmpvar_1;
  tmpvar_1 = dot (unity_SHAr, normal);
  float tmpvar_2;
  tmpvar_2 = tmpvar_1;
  x1.x = tmpvar_2;
  float tmpvar_3;
  tmpvar_3 = dot (unity_SHAg, normal);
  float tmpvar_4;
  tmpvar_4 = tmpvar_3;
  x1.y = tmpvar_4;
  float tmpvar_5;
  tmpvar_5 = dot (unity_SHAb, normal);
  float tmpvar_6;
  tmpvar_6 = tmpvar_5;
  x1.z = tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (normal.xyzz * normal.yzzx);
  vB = tmpvar_7;
  float tmpvar_8;
  tmpvar_8 = dot (unity_SHBr, vB);
  float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  x2.x = tmpvar_9;
  float tmpvar_10;
  tmpvar_10 = dot (unity_SHBg, vB);
  float tmpvar_11;
  tmpvar_11 = tmpvar_10;
  x2.y = tmpvar_11;
  float tmpvar_12;
  tmpvar_12 = dot (unity_SHBb, vB);
  float tmpvar_13;
  tmpvar_13 = tmpvar_12;
  x2.z = tmpvar_13;
  float tmpvar_14;
  tmpvar_14 = ((normal.x * normal.x) - (normal.y * normal.y));
  vC = tmpvar_14;
  vec3 tmpvar_15;
  tmpvar_15 = (unity_SHC.xyz * vC);
  x3 = tmpvar_15;
  return ((x1 + x2) + x3);
}

vec3 Shade4PointLights (
  in vec4 lightPosX,
  in vec4 lightPosY,
  in vec4 lightPosZ,
  in vec3 lightColor0,
  in vec3 lightColor1,
  in vec3 lightColor2,
  in vec3 lightColor3,
  in vec4 lightAttenSq,
  in vec3 pos,
  in vec3 normal
);

vec3 Shade4PointLights (
  in vec4 lightPosX,
  in vec4 lightPosY,
  in vec4 lightPosZ,
  in vec3 lightColor0,
  in vec3 lightColor1,
  in vec3 lightColor2,
  in vec3 lightColor3,
  in vec4 lightAttenSq,
  in vec3 pos,
  in vec3 normal
)
{
  vec4 toLightX;
  vec4 toLightY;
  vec4 toLightZ;
  vec4 lengthSq;
  vec4 ndotl;
  vec4 corr;
  vec4 atten;
  vec4 diff;
  vec3 col;
  vec4 tmpvar_1;
  tmpvar_1 = (lightPosX - pos.x);
  toLightX = tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = (lightPosY - pos.y);
  toLightY = tmpvar_2;
  vec4 tmpvar_3;
  tmpvar_3 = (lightPosZ - pos.z);
  toLightZ = tmpvar_3;
  vec4 tmpvar_4;
  tmpvar_4 = vec4 (0.000000, 0.000000, 0.000000, 0.000000);
  lengthSq = tmpvar_4;
  vec4 tmpvar_5;
  tmpvar_5 = (lengthSq + (toLightX * toLightX));
  lengthSq = tmpvar_5;
  vec4 tmpvar_6;
  tmpvar_6 = (lengthSq + (toLightY * toLightY));
  lengthSq = tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (lengthSq + (toLightZ * toLightZ));
  lengthSq = tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = vec4 (0.000000, 0.000000, 0.000000, 0.000000);
  ndotl = tmpvar_8;
  vec4 tmpvar_9;
  tmpvar_9 = (ndotl + (toLightX * normal.x));
  ndotl = tmpvar_9;
  vec4 tmpvar_10;
  tmpvar_10 = (ndotl + (toLightY * normal.y));
  ndotl = tmpvar_10;
  vec4 tmpvar_11;
  tmpvar_11 = (ndotl + (toLightZ * normal.z));
  ndotl = tmpvar_11;
  vec4 tmpvar_12;
  tmpvar_12 = inversesqrt (lengthSq);
  vec4 tmpvar_13;
  tmpvar_13 = tmpvar_12;
  corr = tmpvar_13;
  vec4 tmpvar_14;
  tmpvar_14 = max (vec4 (0.000000, 0.000000, 0.000000, 0.000000), (ndotl * corr));
  vec4 tmpvar_15;
  tmpvar_15 = tmpvar_14;
  ndotl = tmpvar_15;
  vec4 tmpvar_16;
  tmpvar_16 = (1.000000 / (1.000000 + (lengthSq * lightAttenSq)));
  atten = tmpvar_16;
  vec4 tmpvar_17;
  tmpvar_17 = (ndotl * atten);
  diff = tmpvar_17;
  vec3 tmpvar_18;
  tmpvar_18 = vec3 (0.000000, 0.000000, 0.000000);
  col = tmpvar_18;
  vec3 tmpvar_19;
  tmpvar_19 = (col + (lightColor0 * diff.x));
  col = tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_20 = (col + (lightColor1 * diff.y));
  col = tmpvar_20;
  vec3 tmpvar_21;
  tmpvar_21 = (col + (lightColor2 * diff.z));
  col = tmpvar_21;
  vec3 tmpvar_22;
  tmpvar_22 = (col + (lightColor3 * diff.w));
  col = tmpvar_22;
  return col;
}

void PositionFog (
  in vec4 v,
  out vec4 pos,
  out float fog
);

void PositionFog (
  in vec4 v,
  out vec4 pos,
  out float fog
)
{
  vec4 tmpvar_1;
  tmpvar_1 = (gl_ModelViewProjectionMatrix * v);
  pos = tmpvar_1;
  float tmpvar_2;
  tmpvar_2 = pos.z;
  fog = tmpvar_2;
}

v2f_surf vert_surf (
  in appdata_full v
);

v2f_surf vert_surf (
  in appdata_full v
)
{
  v2f_surf o;
  vec3 worldN;
  vec3 shlight;
  vec3 worldPos;
  PositionFog (v.vertex, o.pos, o.fog);
  mat3 tmpvar_1;
  tmpvar_1 = xll_constructMat3 (_Object2World);
  vec3 tmpvar_2;
  tmpvar_2 = (tmpvar_1 * (v.normal * unity_Scale.w));
  worldN = tmpvar_2;
  vec3 tmpvar_3;
  tmpvar_3 = worldN;
  o.normal = tmpvar_3;
  vec4 tmpvar_4;
  tmpvar_4.xyz = worldN;
  tmpvar_4.w = 1.000000;
  vec3 tmpvar_5;
  tmpvar_5 = ShadeSH9 (tmpvar_4);
  vec3 tmpvar_6;
  tmpvar_6 = tmpvar_5;
  shlight = tmpvar_6;
  vec3 tmpvar_7;
  tmpvar_7 = shlight;
  o.vlight = tmpvar_7;
  vec3 tmpvar_8;
  tmpvar_8 = (_Object2World * v.vertex).xyz;
  worldPos = tmpvar_8;
  vec3 tmpvar_9;
  tmpvar_9 = Shade4PointLights (unity_4LightPosX0, unity_4LightPosY0, unity_4LightPosZ0, unity_LightColor0, unity_LightColor1, unity_LightColor2, unity_LightColor3, unity_4LightAtten0, worldPos, worldN);
  vec3 tmpvar_10;
  tmpvar_10 = (o.vlight + tmpvar_9);
  o.vlight = tmpvar_10;
  return o;
}

attribute vec4 TANGENT;
varying vec4 xlv_FOG;
void main ()
{
  v2f_surf xl_retval;
  appdata_full xlt_v;
  vec4 tmpvar_1;
  tmpvar_1.xyzw = gl_Vertex;
  vec4 tmpvar_2;
  tmpvar_2 = tmpvar_1;
  xlt_v.vertex = tmpvar_2;
  vec4 tmpvar_3;
  tmpvar_3.xyzw = TANGENT;
  vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  xlt_v.tangent = tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5.xyz = gl_Normal;
  vec3 tmpvar_6;
  tmpvar_6 = tmpvar_5;
  xlt_v.normal = tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7.xyzw = gl_MultiTexCoord0;
  vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  xlt_v.texcoord = tmpvar_8;
  vec4 tmpvar_9;
  tmpvar_9.xyzw = gl_MultiTexCoord1;
  vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  xlt_v.texcoord1 = tmpvar_10;
  vec4 tmpvar_11;
  tmpvar_11.xyzw = gl_Color;
  vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  xlt_v.color = tmpvar_12;
  v2f_surf tmpvar_13;
  tmpvar_13 = vert_surf (xlt_v);
  v2f_surf tmpvar_14;
  tmpvar_14 = tmpvar_13;
  xl_retval = tmpvar_14;
  vec4 tmpvar_15;
  tmpvar_15.xyzw = xl_retval.pos;
  vec4 tmpvar_16;
  tmpvar_16 = tmpvar_15;
  gl_Position = tmpvar_16;
  vec4 tmpvar_17;
  tmpvar_17.x = xl_retval.fog;
  tmpvar_17.y = 0.000000;
  tmpvar_17.z = 0.000000;
  tmpvar_17.w = 0.000000;
  vec4 tmpvar_18;
  tmpvar_18 = tmpvar_17;
  xlv_FOG = tmpvar_18;
  vec4 tmpvar_19;
  tmpvar_19.xyz = xl_retval.normal;
  tmpvar_19.w = 0.000000;
  vec4 tmpvar_20;
  tmpvar_20 = tmpvar_19;
  gl_TexCoord[0] = tmpvar_20;
  vec4 tmpvar_21;
  tmpvar_21.xyz = xl_retval.vlight;
  tmpvar_21.w = 0.000000;
  vec4 tmpvar_22;
  tmpvar_22 = tmpvar_21;
  gl_TexCoord[1] = tmpvar_22;
}

