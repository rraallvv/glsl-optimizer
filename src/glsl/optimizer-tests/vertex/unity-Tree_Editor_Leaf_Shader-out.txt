struct appdata_full {
  vec4 vertex;
  vec4 tangent;
  vec3 normal;
  vec4 texcoord;
  vec4 texcoord1;
  vec4 color;
};
varying vec4 xlv_FOG;
attribute vec4 TANGENT;
uniform vec4 unity_Scale;
uniform vec4 _WorldSpaceLightPos0;
uniform vec3 _WorldSpaceCameraPos;
uniform mat4 _World2Object;
uniform vec4 _Wind;
uniform float _TimeX;
uniform vec4 _SquashPlaneNormal;
uniform float _SquashAmount;
uniform vec4 _Scale;
uniform mat4 _Object2World;
uniform vec4 _MainTex_ST;
uniform mat4 _LightMatrix0;
uniform vec4 _Color;
void main ()
{
  appdata_full xlt_v;
  xlt_v.vertex = gl_Vertex.xyzw;
  xlt_v.tangent = TANGENT.xyzw;
  xlt_v.normal = gl_Normal.xyz;
  xlt_v.texcoord = gl_MultiTexCoord0.xyzw;
  xlt_v.texcoord1 = gl_MultiTexCoord1.xyzw;
  xlt_v.color = gl_Color.xyzw;
  appdata_full v_i0;
  v_i0 = xlt_v;
  vec4 pos;
  pos = xlt_v.vertex;
  vec3 normal;
  normal = xlt_v.normal;
  vec4 tangent;
  tangent = xlt_v.tangent;
  float tmpvar_175;
  tmpvar_175 = (1.000000 - abs (tangent.w));
  vec4 tmpvar_176;
  tmpvar_176.xyz = vec3(normal.xyz);
  tmpvar_176.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  vec4 tmpvar_180;
  tmpvar_180.x = float(normal.z);
  tmpvar_180.y = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_180.z = float(vec4(-(normal.x)));
  tmpvar_180.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  vec4 tmpvar_184;
  tmpvar_184 = (pos + ((tangent * gl_ModelViewMatrixInverseTranspose) * tmpvar_175));
  pos = tmpvar_184;
  vec3 tmpvar_186;
  tmpvar_186 = mix (normal, normalize ((tmpvar_176 * gl_ModelViewMatrixInverseTranspose)).xyz, vec3(tmpvar_175));
  normal = tmpvar_186;
  vec4 tmpvar_188;
  tmpvar_188.xyz = vec3(normalize ((tmpvar_180 * gl_ModelViewMatrixInverseTranspose)).xyz);
  tmpvar_188.w = float(vec4(-1.000000, -1.000000, -1.000000, -1.000000));
  vec4 tmpvar_190;
  tmpvar_190 = mix (tangent, tmpvar_188, vec4(tmpvar_175));
  tangent = tmpvar_190;
  v_i0.vertex = tmpvar_184;
  v_i0.normal = tmpvar_186;
  v_i0.tangent = tmpvar_190;
  v_i0.vertex.xyz = (v_i0.vertex.xyz * _Scale.xyz).xyz;
  vec4 tmpvar_193;
  tmpvar_193.xy = vec2(v_i0.color.xy);
  tmpvar_193.zw = vec2(v_i0.texcoord1.xy);
  vec4 pos_i0;
  pos_i0 = v_i0.vertex;
  vec3 bend;
  float tmpvar_200;
  tmpvar_200 = (dot (_Object2World[3].xyz, vec3(1.000000, 1.000000, 1.000000)) + tmpvar_193.x);
  vec2 tmpvar_204;
  tmpvar_204.x = float(vec2(dot (pos_i0.xyz, vec3((tmpvar_193.y + tmpvar_200)))));
  tmpvar_204.y = float(vec2(tmpvar_200));
  vec4 tmpvar_213;
  tmpvar_213 = abs (((fract ((((fract (((_TimeX + tmpvar_204).xxyy * vec4(1.975000, 0.793000, 0.375000, 0.193000))) * 2.000000) - 1.000000) + 0.500000)) * 2.000000) - 1.000000));
  vec4 _ret_val_i0;
  _ret_val_i0 = ((tmpvar_213 * tmpvar_213) * (3.000000 - (2.000000 * tmpvar_213)));
  vec2 tmpvar_217;
  tmpvar_217 = (_ret_val_i0.xz + _ret_val_i0.yw);
  bend = ((tmpvar_193.y * 0.100000) * v_i0.normal.xyz);
  bend.y = float(vec2((tmpvar_193.w * 0.300000)));
  pos_i0.xyz = (pos_i0.xyz + (((tmpvar_217.xyx * bend) + ((_Wind.xyz * tmpvar_217.y) * tmpvar_193.w)) * _Wind.w)).xyz;
  pos_i0.xyz = (pos_i0.xyz + (tmpvar_193.z * _Wind.xyz)).xyz;
  v_i0.vertex = pos_i0;
  vec4 pos_i0_i1;
  pos_i0_i1 = v_i0.vertex;
  vec3 tmpvar_226;
  tmpvar_226.x = float(vec3(0.000000, 0.000000, 0.000000));
  tmpvar_226.y = float(_SquashPlaneNormal.w);
  tmpvar_226.z = float(vec3(0.000000, 0.000000, 0.000000));
  vec3 tmpvar_228;
  tmpvar_228 = _SquashPlaneNormal.xyz;
  vec4 tmpvar_234;
  tmpvar_234.xyz = vec3(mix ((pos_i0_i1.xyz + (dot (tmpvar_228, (tmpvar_226 - pos_i0_i1.xyz)) * tmpvar_228)), pos_i0_i1.xyz, vec3(_SquashAmount)).xyz);
  tmpvar_234.w = float(vec4(1.000000, 1.000000, 1.000000, 1.000000));
  pos_i0_i1 = tmpvar_234;
  v_i0.vertex = tmpvar_234;
  vec4 tmpvar_237;
  tmpvar_237.xyz = vec3((v_i0.color.w * _Color.xyz).xyz);
  tmpvar_237.w = float(_Color.w);
  v_i0.color = tmpvar_237;
  v_i0.normal = normalize (v_i0.normal);
  v_i0.tangent.xyz = normalize (v_i0.tangent.xyz).xyz;
  vec4 tmpvar_243;
  tmpvar_243 = (gl_ModelViewProjectionMatrix * v_i0.vertex);
  vec3 tmpvar_248;
  tmpvar_248 = (cross (v_i0.normal, v_i0.tangent.xyz) * v_i0.tangent.w);
  mat3 tmpvar_249;
  tmpvar_249[0].x = float(v_i0.tangent.x);
  tmpvar_249[0].y = float(tmpvar_248.x);
  tmpvar_249[0].z = float(v_i0.normal.x);
  tmpvar_249[1].x = float(v_i0.tangent.y);
  tmpvar_249[1].y = float(tmpvar_248.y);
  tmpvar_249[1].z = float(v_i0.normal.y);
  tmpvar_249[2].x = float(v_i0.tangent.z);
  tmpvar_249[2].y = float(tmpvar_248.z);
  tmpvar_249[2].z = float(v_i0.normal.z);
  vec4 tmpvar_266;
  tmpvar_266.xyz = vec3(_WorldSpaceCameraPos.xyz);
  tmpvar_266.w = float(vec4(1.000000, 1.000000, 1.000000, 1.000000));
  gl_Position = tmpvar_243.xyzw;
  vec4 tmpvar_17;
  tmpvar_17.x = float(tmpvar_243.z);
  tmpvar_17.y = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_17.z = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_17.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  xlv_FOG = tmpvar_17;
  vec4 tmpvar_19;
  tmpvar_19.xy = vec2(((v_i0.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw).xy);
  tmpvar_19.z = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_19.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[0] = tmpvar_19;
  gl_FrontColor = v_i0.color.xyzw;
  vec4 tmpvar_23;
  tmpvar_23.xyz = vec3((tmpvar_249 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - v_i0.vertex.xyz)).xyz);
  tmpvar_23.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[1] = tmpvar_23;
  vec4 tmpvar_25;
  tmpvar_25.xyz = vec3((tmpvar_249 * (((_World2Object * tmpvar_266).xyz * unity_Scale.w) - v_i0.vertex.xyz)).xyz);
  tmpvar_25.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[2] = tmpvar_25;
  vec4 tmpvar_27;
  tmpvar_27.xyz = vec3((_LightMatrix0 * (_Object2World * v_i0.vertex)).xyz);
  tmpvar_27.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[3] = tmpvar_27;
}

