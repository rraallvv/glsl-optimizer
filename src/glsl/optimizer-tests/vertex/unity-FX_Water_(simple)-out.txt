varying vec4 xlv_FOG;
uniform vec4 unity_Scale;
uniform vec3 _WorldSpaceCameraPos;
uniform mat4 _World2Object;
uniform float _WaveScale;
uniform vec4 _WaveOffset;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1 = gl_Vertex.xyzw;
  vec4 temp;
  vec2 tmpvar_56[2];
  vec4 tmpvar_23;
  tmpvar_23 = (gl_ModelViewProjectionMatrix * tmpvar_1);
  temp = ((tmpvar_1.xzxz * _WaveScale) + _WaveOffset).xyzw;
  tmpvar_56[0] = (temp.xy * vec2(0.400000, 0.450000));
  tmpvar_56[1] = temp.wz;
  vec4 tmpvar_30;
  tmpvar_30.xyz = _WorldSpaceCameraPos.xyz;
  tmpvar_30.w = (vec4(1.000000, 1.000000, 1.000000, 1.000000)).w;
  gl_Position = tmpvar_23.xyzw;
  vec4 tmpvar_9;
  tmpvar_9.x = tmpvar_23.z;
  tmpvar_9.y = (vec4(0.000000, 0.000000, 0.000000, 0.000000)).y;
  tmpvar_9.z = (vec4(0.000000, 0.000000, 0.000000, 0.000000)).z;
  tmpvar_9.w = (vec4(0.000000, 0.000000, 0.000000, 0.000000)).w;
  xlv_FOG = tmpvar_9;
  vec4 tmpvar_11;
  tmpvar_11.xy = tmpvar_56[0].xy;
  tmpvar_11.z = (vec4(0.000000, 0.000000, 0.000000, 0.000000)).z;
  tmpvar_11.w = (vec4(0.000000, 0.000000, 0.000000, 0.000000)).w;
  gl_TexCoord[0] = tmpvar_11;
  vec4 tmpvar_13;
  tmpvar_13.xy = tmpvar_56[1].xy;
  tmpvar_13.z = (vec4(0.000000, 0.000000, 0.000000, 0.000000)).z;
  tmpvar_13.w = (vec4(0.000000, 0.000000, 0.000000, 0.000000)).w;
  gl_TexCoord[1] = tmpvar_13;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize ((((_World2Object * tmpvar_30).xyz * unity_Scale.w) - tmpvar_1.xyz)).xzy;
  tmpvar_15.w = (vec4(0.000000, 0.000000, 0.000000, 0.000000)).w;
  gl_TexCoord[2] = tmpvar_15;
}

