struct appdata_full {
  vec4 vertex;
  vec4 tangent;
  vec3 normal;
  vec4 texcoord;
  vec4 texcoord1;
  vec4 color;
};
attribute vec4 TANGENT;
uniform vec3 _TerrainTreeLightDirections[4];
uniform vec4 _TerrainTreeLightColors[4];
void main ()
{
  appdata_full xlt_v;
  xlt_v.vertex = gl_Vertex.xyzw;
  xlt_v.tangent = TANGENT.xyzw;
  xlt_v.normal = gl_Normal.xyz;
  xlt_v.texcoord = gl_MultiTexCoord0.xyzw;
  xlt_v.texcoord1 = gl_MultiTexCoord1.xyzw;
  xlt_v.color = gl_Color.xyzw;
  appdata_full v;
  v = xlt_v;
  int i;
  vec3 lightColor;
  vec4 tmpvar_46;
  vec2 tmpvar_47;
  i = 0;
  tmpvar_46 = (gl_ModelViewProjectionMatrix * xlt_v.vertex);
  tmpvar_47 = xlt_v.texcoord.xy;
  lightColor = gl_LightModel.ambient.xyz;
  while (true) {
    if (!((i < 4))) {
      break;
    };
    float tmpvar_27;
    tmpvar_27 = dot (_TerrainTreeLightDirections[i].xyz, v.normal);
    float tmpvar_28;
    tmpvar_28 = max (0.000000, tmpvar_27);
    lightColor = (lightColor + (_TerrainTreeLightColors[i] * tmpvar_28).xyz);
    i = (i + 1);
  };
  gl_Position = tmpvar_46.xyzw;
  vec4 tmpvar_17;
  tmpvar_17.xy = vec2(tmpvar_47.xy);
  tmpvar_17.z = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_17.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[0] = tmpvar_17;
  vec4 tmpvar_19;
  tmpvar_19.xyz = vec3((lightColor * v.color.w).xyz);
  tmpvar_19.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[1] = tmpvar_19;
}

