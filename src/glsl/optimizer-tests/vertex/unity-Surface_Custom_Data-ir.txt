struct appdata_full {
  vec4 vertex;
  vec4 tangent;
  vec3 normal;
  vec4 texcoord;
  vec4 texcoord1;
  vec4 color;
};
struct Input {
  vec3 foo;
};
struct v2f_surf {
  vec4 pos;
  float fog;
  vec3 cust_foo;
  vec3 normal;
  vec3 lightDir;
  vec3 _LightCoord;
};
mat3 xll_constructMat3 (
  in mat4 m
)
{
  vec3 tmpvar_1;
  tmpvar_1.xyz = vec3(m[0]);
  vec3 tmpvar_2;
  tmpvar_2.xyz = vec3(m[1]);
  vec3 tmpvar_3;
  tmpvar_3.xyz = vec3(m[2]);
  mat3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = tmpvar_1;
  tmpvar_4[0].xyz = tmpvar_5.xyz;
  vec3 tmpvar_6;
  tmpvar_6 = tmpvar_2;
  tmpvar_4[1].xyz = tmpvar_6.xyz;
  vec3 tmpvar_7;
  tmpvar_7 = tmpvar_3;
  tmpvar_4[2].xyz = tmpvar_7.xyz;
  return tmpvar_4;
}

uniform mat4 _LightMatrix0;
uniform mat4 _Object2World;
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 unity_Scale;
void vert (
  inout appdata_full v,
  out Input o
);

void vert (
  inout appdata_full v,
  out Input o
)
{
  vec3 tmpvar_1;
  tmpvar_1 = ((v.normal * 0.500000) + 0.500000);
  o.foo = tmpvar_1;
}

vec3 WorldSpaceLightDir (
  in vec4 v
);

vec3 WorldSpaceLightDir (
  in vec4 v
)
{
  vec3 worldPos;
  vec3 tmpvar_1;
  tmpvar_1 = (_Object2World * v).xyz;
  worldPos = tmpvar_1;
  return (_WorldSpaceLightPos0.xyz - worldPos);
}

void PositionFog (
  in vec4 v,
  out vec4 pos,
  out float fog
);

void PositionFog (
  in vec4 v,
  out vec4 pos,
  out float fog
)
{
  vec4 tmpvar_1;
  tmpvar_1 = (gl_ModelViewProjectionMatrix * v);
  pos = tmpvar_1;
  float tmpvar_2;
  tmpvar_2 = pos.z;
  fog = tmpvar_2;
}

v2f_surf vert_surf (
  in appdata_full v
);

v2f_surf vert_surf (
  in appdata_full v
)
{
  Input customInputData;
  v2f_surf o;
  vert (v, customInputData);
  vec3 tmpvar_1;
  tmpvar_1 = customInputData.foo;
  o.cust_foo = tmpvar_1;
  PositionFog (v.vertex, o.pos, o.fog);
  mat3 tmpvar_2;
  tmpvar_2 = xll_constructMat3 (_Object2World);
  vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * (v.normal * unity_Scale.w));
  o.normal = tmpvar_3;
  vec3 tmpvar_4;
  tmpvar_4 = WorldSpaceLightDir (v.vertex);
  vec3 tmpvar_5;
  tmpvar_5 = tmpvar_4;
  o.lightDir = tmpvar_5;
  vec3 tmpvar_6;
  tmpvar_6 = (_LightMatrix0 * (_Object2World * v.vertex)).xyz;
  o._LightCoord = tmpvar_6;
  return o;
}

attribute vec4 TANGENT;
varying vec4 xlv_FOG;
void main ()
{
  v2f_surf xl_retval;
  appdata_full xlt_v;
  vec4 tmpvar_1;
  tmpvar_1.xyzw = gl_Vertex;
  vec4 tmpvar_2;
  tmpvar_2 = tmpvar_1;
  xlt_v.vertex = tmpvar_2;
  vec4 tmpvar_3;
  tmpvar_3.xyzw = TANGENT;
  vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  xlt_v.tangent = tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5.xyz = gl_Normal;
  vec3 tmpvar_6;
  tmpvar_6 = tmpvar_5;
  xlt_v.normal = tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7.xyzw = gl_MultiTexCoord0;
  vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  xlt_v.texcoord = tmpvar_8;
  vec4 tmpvar_9;
  tmpvar_9.xyzw = gl_MultiTexCoord1;
  vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  xlt_v.texcoord1 = tmpvar_10;
  vec4 tmpvar_11;
  tmpvar_11.xyzw = gl_Color;
  vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  xlt_v.color = tmpvar_12;
  v2f_surf tmpvar_13;
  tmpvar_13 = vert_surf (xlt_v);
  v2f_surf tmpvar_14;
  tmpvar_14 = tmpvar_13;
  xl_retval = tmpvar_14;
  vec4 tmpvar_15;
  tmpvar_15.xyzw = xl_retval.pos;
  vec4 tmpvar_16;
  tmpvar_16 = tmpvar_15;
  gl_Position = tmpvar_16;
  vec4 tmpvar_17;
  tmpvar_17.x = xl_retval.fog;
  tmpvar_17.y = 0.000000;
  tmpvar_17.z = 0.000000;
  tmpvar_17.w = 0.000000;
  vec4 tmpvar_18;
  tmpvar_18 = tmpvar_17;
  xlv_FOG = tmpvar_18;
  vec4 tmpvar_19;
  tmpvar_19.xyz = xl_retval.cust_foo;
  tmpvar_19.w = 0.000000;
  vec4 tmpvar_20;
  tmpvar_20 = tmpvar_19;
  gl_TexCoord[0] = tmpvar_20;
  vec4 tmpvar_21;
  tmpvar_21.xyz = xl_retval.normal;
  tmpvar_21.w = 0.000000;
  vec4 tmpvar_22;
  tmpvar_22 = tmpvar_21;
  gl_TexCoord[1] = tmpvar_22;
  vec4 tmpvar_23;
  tmpvar_23.xyz = xl_retval.lightDir;
  tmpvar_23.w = 0.000000;
  vec4 tmpvar_24;
  tmpvar_24 = tmpvar_23;
  gl_TexCoord[2] = tmpvar_24;
  vec4 tmpvar_25;
  tmpvar_25.xyz = xl_retval._LightCoord;
  tmpvar_25.w = 0.000000;
  vec4 tmpvar_26;
  tmpvar_26 = tmpvar_25;
  gl_TexCoord[3] = tmpvar_26;
}

