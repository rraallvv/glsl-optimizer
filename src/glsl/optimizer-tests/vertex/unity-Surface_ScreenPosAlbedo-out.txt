struct v2f_surf {
  vec4 pos;
  vec3 normal;
};
struct appdata_full {
  vec4 vertex;
  vec4 tangent;
  vec3 normal;
  vec4 texcoord;
  vec4 texcoord1;
  vec4 color;
};
attribute vec4 TANGENT;
void main ()
{
  appdata_full xlt_v;
  vec4 tmpvar_1;
  tmpvar_1.xyzw = gl_Vertex;
  xlt_v.vertex = tmpvar_1;
  vec4 tmpvar_3;
  tmpvar_3.xyzw = TANGENT;
  xlt_v.tangent = tmpvar_3;
  vec3 tmpvar_5;
  tmpvar_5.xyz = gl_Normal;
  xlt_v.normal = tmpvar_5;
  vec4 tmpvar_7;
  tmpvar_7.xyzw = gl_MultiTexCoord0;
  xlt_v.texcoord = tmpvar_7;
  vec4 tmpvar_9;
  tmpvar_9.xyzw = gl_MultiTexCoord1;
  xlt_v.texcoord1 = tmpvar_9;
  vec4 tmpvar_11;
  tmpvar_11.xyzw = gl_Color;
  xlt_v.color = tmpvar_11;
  v2f_surf o;
  o.pos = (gl_ModelViewProjectionMatrix * xlt_v.vertex);
  vec3 tmpvar_31;
  tmpvar_31.xyz = vec3(gl_ModelViewMatrixInverseTranspose[0]);
  vec3 tmpvar_32;
  tmpvar_32.xyz = vec3(gl_ModelViewMatrixInverseTranspose[1]);
  vec3 tmpvar_33;
  tmpvar_33.xyz = vec3(gl_ModelViewMatrixInverseTranspose[2]);
  mat3 tmpvar_34;
  tmpvar_34[0].xyz = tmpvar_31.xyz;
  tmpvar_34[1].xyz = tmpvar_32.xyz;
  tmpvar_34[2].xyz = tmpvar_33.xyz;
  o.normal = (tmpvar_34 * xlt_v.normal);
  vec4 tmpvar_15;
  tmpvar_15.xyzw = o.pos;
  gl_Position = tmpvar_15;
  vec4 tmpvar_17;
  tmpvar_17.xyz = o.normal;
  tmpvar_17.w = 0.000000;
  gl_TexCoord[0] = tmpvar_17;
}

