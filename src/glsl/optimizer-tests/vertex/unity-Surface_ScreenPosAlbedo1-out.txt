struct v2f_surf {
  vec4 pos;
  float fog;
  vec4 hip_screenPos;
  vec4 hip_screen;
};
struct appdata_full {
  vec4 vertex;
  vec4 tangent;
  vec3 normal;
  vec4 texcoord;
  vec4 texcoord1;
  vec4 color;
};
varying vec4 xlv_FOG;
attribute vec4 TANGENT;
uniform vec4 _ProjectionParams;
void main ()
{
  appdata_full xlt_v;
  xlt_v.vertex = gl_Vertex.xyzw;
  xlt_v.tangent = TANGENT.xyzw;
  xlt_v.normal = gl_Normal.xyz;
  xlt_v.texcoord = gl_MultiTexCoord0.xyzw;
  xlt_v.texcoord1 = gl_MultiTexCoord1.xyzw;
  xlt_v.color = gl_Color.xyzw;
  v2f_surf o;
  vec4 tmpvar_36;
  tmpvar_36 = (gl_ModelViewProjectionMatrix * xlt_v.vertex);
  o.pos = tmpvar_36;
  o.fog = tmpvar_36.z;
  vec4 pos_i0;
  pos_i0 = o.pos;
  vec4 o_i0;
  vec4 tmpvar_40;
  tmpvar_40 = (pos_i0 * 0.500000);
  o_i0 = tmpvar_40;
  vec2 tmpvar_41;
  tmpvar_41.x = float(tmpvar_40.x);
  tmpvar_41.y = float(vec2((tmpvar_40.y * _ProjectionParams.x)));
  o_i0.xy = (tmpvar_41 + tmpvar_40.w).xy;
  o_i0.zw = vec2(pos_i0.zw);
  o.hip_screenPos = o_i0;
  vec4 pos_i0_i1;
  pos_i0_i1 = o.pos;
  vec4 o_i0_i1;
  vec4 tmpvar_47;
  tmpvar_47 = (pos_i0_i1 * 0.500000);
  o_i0_i1 = tmpvar_47;
  vec2 tmpvar_48;
  tmpvar_48.x = float(tmpvar_47.x);
  tmpvar_48.y = float(vec2((tmpvar_47.y * _ProjectionParams.x)));
  o_i0_i1.xy = (tmpvar_48 + tmpvar_47.w).xy;
  o_i0_i1.zw = vec2(pos_i0_i1.zw);
  o.hip_screen = o_i0_i1;
  gl_Position = o.pos.xyzw;
  vec4 tmpvar_17;
  tmpvar_17.x = float(vec4(o.fog));
  tmpvar_17.y = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_17.z = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_17.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  xlv_FOG = tmpvar_17;
  gl_TexCoord[0] = o.hip_screenPos.xyzw;
  gl_TexCoord[1] = o.hip_screen.xyzw;
}

