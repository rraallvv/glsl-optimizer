struct appdata_full {
  vec4 vertex;
  vec4 tangent;
  vec3 normal;
  vec4 texcoord;
  vec4 texcoord1;
  vec4 color;
};
struct v2f_surf {
  vec4 pos;
  vec2 hip_pack0;
  vec4 lop_color;
};
uniform vec4 _CameraPosition;
uniform vec3 _CameraRight;
uniform vec3 _CameraUp;
uniform vec4 _MainTex_ST;
uniform vec4 _WaveAndDistance;
uniform vec4 _WavingTint;
uniform vec4 unity_LightShadowBias;
void FastSinCos (
  in vec4 val,
  out vec4 s,
  out vec4 c
);

void FastSinCos (
  in vec4 val,
  out vec4 s,
  out vec4 c
)
{
  vec4 r5;
  vec4 r6;
  vec4 r7;
  vec4 r8;
  vec4 r1;
  vec4 r2;
  vec4 r3;
  vec4 sin7;
  vec4 tmpvar_1;
  tmpvar_1 = vec4 (1.000000, -0.161616, 0.008333, -0.000198);
  sin7 = tmpvar_1;
  vec4 cos8;
  vec4 tmpvar_2;
  tmpvar_2 = vec4 (-0.500000, 0.041667, -0.001389, 0.000025);
  cos8 = tmpvar_2;
  vec4 tmpvar_3;
  tmpvar_3 = ((val * 6.408850) - 3.141590);
  val = tmpvar_3;
  vec4 tmpvar_4;
  tmpvar_4 = (val * val);
  r5 = tmpvar_4;
  vec4 tmpvar_5;
  tmpvar_5 = (r5 * r5);
  r6 = tmpvar_5;
  vec4 tmpvar_6;
  tmpvar_6 = (r6 * r5);
  r7 = tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (r6 * r5);
  r8 = tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (r5 * val);
  r1 = tmpvar_8;
  vec4 tmpvar_9;
  tmpvar_9 = (r1 * r5);
  r2 = tmpvar_9;
  vec4 tmpvar_10;
  tmpvar_10 = (r2 * r5);
  r3 = tmpvar_10;
  vec4 tmpvar_11;
  tmpvar_11 = (((val + (r1 * sin7.y)) + (r2 * sin7.z)) + (r3 * sin7.w));
  s = tmpvar_11;
  vec4 tmpvar_12;
  tmpvar_12 = ((((1.000000 + (r5 * cos8.x)) + (r6 * cos8.y)) + (r7 * cos8.z)) + (r8 * cos8.w));
  c = tmpvar_12;
}

void TerrainWaveGrass (
  inout vec4 vertex,
  in float waveAmount,
  in vec3 color,
  out vec4 outColor
);

void TerrainWaveGrass (
  inout vec4 vertex,
  in float waveAmount,
  in vec3 color,
  out vec4 outColor
)
{
  vec4 _waveXSize;
  vec4 _waveZSize;
  vec4 waveSpeed;
  vec4 tmpvar_1;
  tmpvar_1 = vec4 (1.200000, 2.000000, 1.600000, 4.800000);
  waveSpeed = tmpvar_1;
  vec4 _waveXmove;
  vec4 tmpvar_2;
  tmpvar_2 = vec4 (0.024000, 0.040000, -0.120000, 0.096000);
  _waveXmove = tmpvar_2;
  vec4 _waveZmove;
  vec4 tmpvar_3;
  tmpvar_3 = vec4 (0.006000, 0.020000, -0.020000, 0.100000);
  _waveZmove = tmpvar_3;
  vec4 waves;
  vec4 s;
  vec4 c;
  float lighting;
  vec3 waveMove;
  vec3 tmpvar_4;
  tmpvar_4 = vec3 (0.000000, 0.000000, 0.000000);
  waveMove = tmpvar_4;
  vec3 waveColor;
  vec4 tmpvar_5;
  tmpvar_5 = (vec4 (0.012000, 0.020000, 0.060000, 0.024000) * _WaveAndDistance.y);
  _waveXSize = tmpvar_5;
  vec4 tmpvar_6;
  tmpvar_6 = (vec4 (0.006000, 0.020000, 0.020000, 0.050000) * _WaveAndDistance.y);
  _waveZSize = tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (vertex.x * _waveXSize);
  waves = tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (waves + (vertex.z * _waveZSize));
  waves = tmpvar_8;
  vec4 tmpvar_9;
  tmpvar_9 = (waves + (_WaveAndDistance.x * waveSpeed));
  waves = tmpvar_9;
  vec4 tmpvar_10;
  tmpvar_10 = fract (waves);
  vec4 tmpvar_11;
  tmpvar_11 = tmpvar_10;
  waves = tmpvar_11;
  FastSinCos (waves, s, c);
  vec4 tmpvar_12;
  tmpvar_12 = (s * s);
  s = tmpvar_12;
  vec4 tmpvar_13;
  tmpvar_13 = (s * s);
  s = tmpvar_13;
  vec4 tmpvar_14;
  tmpvar_14 = normalize (vec4 (1.000000, 1.000000, 0.400000, 0.200000));
  float tmpvar_15;
  tmpvar_15 = dot (s, tmpvar_14);
  float tmpvar_16;
  tmpvar_16 = (tmpvar_15 * 0.700000);
  lighting = tmpvar_16;
  vec4 tmpvar_17;
  tmpvar_17 = (s * waveAmount);
  s = tmpvar_17;
  float tmpvar_18;
  tmpvar_18 = dot (s, _waveXmove);
  float tmpvar_19;
  tmpvar_19 = tmpvar_18;
  waveMove.x = tmpvar_19;
  float tmpvar_20;
  tmpvar_20 = dot (s, _waveZmove);
  float tmpvar_21;
  tmpvar_21 = tmpvar_20;
  waveMove.z = tmpvar_21;
  vec2 tmpvar_22;
  tmpvar_22 = (vertex.xz - (waveMove.xz * _WaveAndDistance.z));
  vertex.xz = tmpvar_22;
  vec3 tmpvar_23;
  tmpvar_23 = lighting.xxx;
  vec3 tmpvar_24;
  tmpvar_24 = mix (vec3 (0.500000, 0.500000, 0.500000), _WavingTint.xyz, tmpvar_23);
  vec3 tmpvar_25;
  tmpvar_25 = tmpvar_24;
  waveColor = tmpvar_25;
  vec3 tmpvar_26;
  tmpvar_26 = ((color * waveColor) * 2.000000);
  outColor.xyz = tmpvar_26;
  float tmpvar_27;
  tmpvar_27 = 1.000000;
  outColor.w = tmpvar_27;
}

void TerrainBillboardGrass (
  inout vec4 pos,
  in vec2 offset
);

void TerrainBillboardGrass (
  inout vec4 pos,
  in vec2 offset
)
{
  vec3 grasspos;
  vec3 tmpvar_1;
  tmpvar_1 = (pos.xyz - _CameraPosition.xyz);
  grasspos = tmpvar_1;
  float tmpvar_2;
  tmpvar_2 = dot (grasspos, grasspos);
  if ((tmpvar_2 > _WaveAndDistance.w)) {
    vec2 tmpvar_3;
    tmpvar_3 = vec2 (0.000000, 0.000000);
    offset = tmpvar_3;
  };
  vec3 tmpvar_4;
  tmpvar_4 = (pos.xyz + (offset.x * _CameraRight.xyz));
  pos.xyz = tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = (pos.xyz + (offset.y * _CameraUp.xyz));
  pos.xyz = tmpvar_5;
}

void vert (
  inout appdata_full v
);

void vert (
  inout appdata_full v
)
{
  float waveAmount;
  vec4 color;
  TerrainBillboardGrass (v.vertex, v.tangent.xy);
  float tmpvar_1;
  tmpvar_1 = v.tangent.y;
  waveAmount = tmpvar_1;
  TerrainWaveGrass (v.vertex, waveAmount, v.color.xyz, color);
  vec4 tmpvar_2;
  tmpvar_2 = color;
  v.color = tmpvar_2;
}

v2f_surf vert_surf (
  in appdata_full v
);

v2f_surf vert_surf (
  in appdata_full v
)
{
  v2f_surf o;
  vert (v);
  vec2 tmpvar_1;
  tmpvar_1 = ((v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  o.hip_pack0.xy = tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = v.color;
  o.lop_color = tmpvar_2;
  vec4 tmpvar_3;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * v.vertex);
  o.pos = tmpvar_3;
  float tmpvar_4;
  tmpvar_4 = (o.pos.z + unity_LightShadowBias.x);
  o.pos.z = tmpvar_4;
  if ((o.pos.z < -(o.pos.w))) {
    float tmpvar_5;
    tmpvar_5 = -(o.pos.w);
    o.pos.z = tmpvar_5;
  };
  return o;
}

attribute vec4 TANGENT;
void main ()
{
  v2f_surf xl_retval;
  appdata_full xlt_v;
  vec4 tmpvar_1;
  tmpvar_1.xyzw = gl_Vertex;
  vec4 tmpvar_2;
  tmpvar_2 = tmpvar_1;
  xlt_v.vertex = tmpvar_2;
  vec4 tmpvar_3;
  tmpvar_3.xyzw = TANGENT;
  vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  xlt_v.tangent = tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5.xyz = gl_Normal;
  vec3 tmpvar_6;
  tmpvar_6 = tmpvar_5;
  xlt_v.normal = tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7.xyzw = gl_MultiTexCoord0;
  vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  xlt_v.texcoord = tmpvar_8;
  vec4 tmpvar_9;
  tmpvar_9.xyzw = gl_MultiTexCoord1;
  vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  xlt_v.texcoord1 = tmpvar_10;
  vec4 tmpvar_11;
  tmpvar_11.xyzw = gl_Color;
  vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  xlt_v.color = tmpvar_12;
  v2f_surf tmpvar_13;
  tmpvar_13 = vert_surf (xlt_v);
  v2f_surf tmpvar_14;
  tmpvar_14 = tmpvar_13;
  xl_retval = tmpvar_14;
  vec4 tmpvar_15;
  tmpvar_15.xyzw = xl_retval.pos;
  vec4 tmpvar_16;
  tmpvar_16 = tmpvar_15;
  gl_Position = tmpvar_16;
  vec4 tmpvar_17;
  tmpvar_17.xy = xl_retval.hip_pack0;
  tmpvar_17.z = 0.000000;
  tmpvar_17.w = 0.000000;
  vec4 tmpvar_18;
  tmpvar_18 = tmpvar_17;
  gl_TexCoord[1] = tmpvar_18;
  vec4 tmpvar_19;
  tmpvar_19.xyzw = xl_retval.lop_color;
  vec4 tmpvar_20;
  tmpvar_20 = tmpvar_19;
  gl_FrontColor = tmpvar_20;
}

