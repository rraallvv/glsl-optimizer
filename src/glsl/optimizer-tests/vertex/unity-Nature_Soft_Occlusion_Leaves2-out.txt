struct appdata_full {
  vec4 vertex;
  vec4 tangent;
  vec3 normal;
  vec4 texcoord;
  vec4 texcoord1;
  vec4 color;
};
struct v2f_surf {
  vec4 pos;
  float fog;
  vec2 hip_pack0;
  vec4 hip_screen;
  vec3 hip_lmapFade;
};
uniform vec4 _MainTex_ST;
uniform vec4 _ProjectionParams;
uniform vec4 _Scale;
uniform float _SquashAmount;
uniform vec4 _SquashPlaneNormal;
uniform mat4 _TerrainEngineBendTree;
uniform vec4 unity_LightmapFade;
uniform vec4 unity_LightmapST;
attribute vec4 TANGENT;
varying vec4 xlv_FOG;
void main ()
{
  appdata_full xlt_v;
  xlt_v.vertex = gl_Vertex.xyzw;
  xlt_v.tangent = TANGENT.xyzw;
  xlt_v.normal = gl_Normal.xyz;
  xlt_v.texcoord = gl_MultiTexCoord0.xyzw;
  xlt_v.texcoord1 = gl_MultiTexCoord1.xyzw;
  xlt_v.color = gl_Color.xyzw;
  v2f_surf o;
  appdata_full v_i0;
  v_i0 = xlt_v;
  vec4 pos;
  pos = xlt_v.vertex;
  pos.xyz = (pos.xyz * _Scale.xyz).xyz;
  vec4 tmpvar_86;
  tmpvar_86.xyz = vec3(pos.xyzx);
  tmpvar_86.w = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  vec3 tmpvar_89;
  tmpvar_89 = mix (pos.xyz, (_TerrainEngineBendTree * tmpvar_86).xyz, xlt_v.color.www);
  pos.xyz = tmpvar_89.xyz;
  vec4 pos_i0;
  pos_i0 = pos;
  vec3 projectedVertex;
  vec3 planeNormal;
  projectedVertex = pos.xyz;
  vec3 tmpvar_94;
  tmpvar_94.x = float(vec3 (0.000000, 0.000000, 0.000000));
  tmpvar_94.y = float(_SquashPlaneNormal.www);
  tmpvar_94.z = float(vec3 (0.000000, 0.000000, 0.000000));
  planeNormal = _SquashPlaneNormal.xyz;
  float tmpvar_98;
  tmpvar_98 = dot (planeNormal, (tmpvar_94 - pos.xyz));
  projectedVertex = (projectedVertex + (tmpvar_98 * planeNormal));
  vec3 tmpvar_101;
  tmpvar_101 = mix (projectedVertex, pos_i0.xyz, vec3(_SquashAmount));
  vec4 tmpvar_102;
  tmpvar_102.xyz = vec3(tmpvar_101.xyzx);
  tmpvar_102.w = float(vec4 (1.000000, 1.000000, 1.000000, 1.000000));
  pos_i0 = tmpvar_102;
  pos = tmpvar_102;
  v_i0.vertex = tmpvar_102;
  vec4 tmpvar_105;
  tmpvar_105 = (gl_ModelViewProjectionMatrix * v_i0.vertex);
  o.pos = tmpvar_105;
  o.fog = tmpvar_105.z;
  o.hip_pack0 = ((v_i0.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw).xy;
  vec4 pos_i0_i1_i2;
  pos_i0_i1_i2 = o.pos;
  vec4 o_i0;
  vec4 tmpvar_110;
  tmpvar_110 = (pos_i0_i1_i2 * 0.500000);
  o_i0 = tmpvar_110;
  vec2 tmpvar_111;
  tmpvar_111.x = float(tmpvar_110.xx);
  tmpvar_111.y = float(vec2((tmpvar_110.y * _ProjectionParams.x)));
  o_i0.xy = (tmpvar_111 + tmpvar_110.w).xy;
  o_i0.zw = vec2(pos_i0_i1_i2.zzzw);
  o.hip_screen = o_i0;
  o.hip_lmapFade.xy = ((v_i0.texcoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw).xy;
  o.hip_lmapFade.z = float(vec3(((-((gl_ModelViewMatrix * v_i0.vertex).z) * unity_LightmapFade.z) + unity_LightmapFade.w)));
  gl_Position = o.pos.xyzw;
  vec4 tmpvar_17;
  tmpvar_17.x = float(vec4(o.fog));
  tmpvar_17.y = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_17.z = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_17.w = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  xlv_FOG = tmpvar_17;
  vec4 tmpvar_19;
  tmpvar_19.xy = vec2(o.hip_pack0.xyxx);
  tmpvar_19.z = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_19.w = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[0] = tmpvar_19;
  gl_TexCoord[1] = o.hip_screen.xyzw;
  vec4 tmpvar_23;
  tmpvar_23.xyz = vec3(o.hip_lmapFade.xyzx);
  tmpvar_23.w = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[2] = tmpvar_23;
}

