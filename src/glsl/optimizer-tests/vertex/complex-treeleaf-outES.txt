varying highp vec2 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_COLOR0;
varying highp vec2 xlv_TEXCOORD0;
attribute vec4 TANGENT;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 _World2Object;
uniform highp vec4 _Wind;
uniform highp vec4 _Time;
uniform highp vec4 _SquashPlaneNormal;
uniform highp float _SquashAmount;
uniform highp vec4 _Scale;
uniform highp mat4 _Object2World;
uniform highp vec4 _MainTex_ST;
uniform highp mat4 _LightMatrix0;
attribute lowp vec4 _glesColor;
attribute highp vec4 _glesMultiTexCoord1;
attribute highp vec4 _glesMultiTexCoord0;
attribute mediump vec3 _glesNormal;
attribute highp vec4 _glesVertex;
void main ()
{
  highp vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec4 tmpvar_2;
  tmpvar_2 = _glesColor;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp float tmpvar_5;
  tmpvar_5 = (1.0 - abs (TANGENT.w));
  highp vec4 tmpvar_6;
  tmpvar_6.w = 0.0;
  tmpvar_6.xyz = tmpvar_1;
  highp vec4 tmpvar_7;
  tmpvar_7.w = 0.0;
  tmpvar_7.xyz = TANGENT.xyz;
  highp vec4 tmpvar_8;
  tmpvar_8.zw = vec2(0.0, 0.0);
  tmpvar_8.xy = tmpvar_1.xy;
  highp vec4 tmpvar_9;
  tmpvar_9 = (_glesVertex + ((tmpvar_8 * glstate_matrix_invtrans_modelview0) * tmpvar_5));
  highp vec3 tmpvar_10;
  tmpvar_10 = mix (tmpvar_1, normalize ((tmpvar_6 * glstate_matrix_invtrans_modelview0)).xyz, vec3(tmpvar_5));
  highp vec4 tmpvar_11;
  tmpvar_11.w = -1.0;
  tmpvar_11.xyz = normalize ((tmpvar_7 * glstate_matrix_invtrans_modelview0)).xyz;
  highp vec4 tmpvar_12;
  tmpvar_12 = mix (TANGENT, tmpvar_11, vec4(tmpvar_5));
  tmpvar_3 = tmpvar_9;
  tmpvar_4 = tmpvar_12;
  tmpvar_3.xyz = (tmpvar_9.xyz * _Scale.xyz);
  highp vec4 tmpvar_13;
  tmpvar_13.xy = tmpvar_2.xy;
  tmpvar_13.zw = _glesMultiTexCoord1.xy;
  highp vec4 pos_i0;
  pos_i0 = tmpvar_3;
  highp vec3 bend;
  highp float tmpvar_14;
  tmpvar_14 = (dot (_Object2World[3].xyz, vec3(1.0, 1.0, 1.0)) + tmpvar_13.x);
  highp vec2 tmpvar_15;
  tmpvar_15.x = dot (tmpvar_3.xyz, vec3((tmpvar_13.y + tmpvar_14)));
  tmpvar_15.y = tmpvar_14;
  highp vec4 tmpvar_16;
  tmpvar_16 = abs (((fract ((((fract (((_Time.yy + tmpvar_15).xxyy * vec4(1.975, 0.793, 0.375, 0.193))) * 2.0) - 1.0) + 0.5)) * 2.0) - 1.0));
  highp vec4 tmpvar_17;
  tmpvar_17 = ((tmpvar_16 * tmpvar_16) * (3.0 - (2.0 * tmpvar_16)));
  highp vec2 tmpvar_18;
  tmpvar_18 = (tmpvar_17.xz + tmpvar_17.yw);
  bend = ((tmpvar_13.y * 0.1) * tmpvar_10);
  bend.y = (tmpvar_13.w * 0.3);
  pos_i0.xyz = (tmpvar_3.xyz + (((tmpvar_18.xyx * bend) + ((_Wind.xyz * tmpvar_18.y) * tmpvar_13.w)) * _Wind.w));
  pos_i0.xyz = (pos_i0.xyz + (tmpvar_13.z * _Wind.xyz));
  highp vec3 tmpvar_19;
  tmpvar_19 = _SquashPlaneNormal.xyz;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = mix ((pos_i0.xyz - ((dot (tmpvar_19, pos_i0.xyz) + _SquashPlaneNormal.w) * tmpvar_19)), pos_i0.xyz, vec3(_SquashAmount));
  tmpvar_3 = tmpvar_20;
  highp vec4 tmpvar_21;
  tmpvar_21.xyz = vec3(1.0, 1.0, 1.0);
  tmpvar_21.w = tmpvar_2.w;
  highp vec3 tmpvar_22;
  tmpvar_22 = normalize (tmpvar_10);
  tmpvar_4.xyz = normalize (tmpvar_12.xyz);
  highp vec3 tmpvar_23;
  tmpvar_23 = (cross (tmpvar_22, tmpvar_4.xyz) * tmpvar_4.w);
  mat3 tmpvar_24;
  tmpvar_24[0].x = tmpvar_4.x;
  tmpvar_24[0].y = tmpvar_23.x;
  tmpvar_24[0].z = tmpvar_22.x;
  tmpvar_24[1].x = tmpvar_4.y;
  tmpvar_24[1].y = tmpvar_23.y;
  tmpvar_24[1].z = tmpvar_22.y;
  tmpvar_24[2].x = tmpvar_4.z;
  tmpvar_24[2].y = tmpvar_23.z;
  tmpvar_24[2].z = tmpvar_22.z;
  highp vec4 tmpvar_25;
  tmpvar_25.w = 1.0;
  tmpvar_25.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * tmpvar_20);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_COLOR0 = tmpvar_21;
  xlv_TEXCOORD1 = (tmpvar_24 * (_World2Object * _WorldSpaceLightPos0).xyz);
  xlv_TEXCOORD2 = (tmpvar_24 * (((_World2Object * tmpvar_25).xyz * unity_Scale.w) - tmpvar_20.xyz));
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * tmpvar_20)).xy;
}

