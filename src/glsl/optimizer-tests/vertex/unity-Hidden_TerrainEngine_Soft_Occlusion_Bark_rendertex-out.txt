varying vec4 xlv_FOG;
attribute vec4 TANGENT;
uniform vec3 _TerrainTreeLightDirections[4];
uniform vec4 _TerrainTreeLightColors[4];
uniform mat4 _TerrainEngineBendTree;
uniform vec4 _SquashPlaneNormal;
uniform float _SquashAmount;
uniform vec4 _Scale;
uniform vec4 _Color;
uniform float _AO;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1 = gl_Vertex.xyzw;
  vec4 tmpvar_9;
  tmpvar_9 = gl_MultiTexCoord0.xyzw;
  vec3 tmpvar_117;
  tmpvar_117 = gl_Normal.xyz;
  int i;
  vec4 lightColor;
  vec4 lightDir;
  vec4 tmpvar_123;
  i = 0;
  vec4 pos;
  pos = tmpvar_1;
  pos.xyz = (tmpvar_1.xyz * _Scale.xyz).xyz;
  vec4 tmpvar_57;
  tmpvar_57.xyz = pos.xyz;
  tmpvar_57.w = 0.0;
  pos.xyz = mix (pos.xyz, (_TerrainEngineBendTree * tmpvar_57).xyz, gl_Color.www).xyz;
  vec3 tmpvar_65;
  tmpvar_65.x = 0.0;
  tmpvar_65.y = _SquashPlaneNormal.w;
  tmpvar_65.z = 0.0;
  vec3 tmpvar_67;
  tmpvar_67 = _SquashPlaneNormal.xyz;
  vec4 tmpvar_73;
  tmpvar_73.xyz = mix ((pos.xyz + (dot (tmpvar_67, (tmpvar_65 - pos.xyz)) * tmpvar_67)), pos.xyz, vec3(_SquashAmount)).xyz;
  tmpvar_73.w = 1.0;
  pos = tmpvar_73;
  vec4 tmpvar_78;
  tmpvar_78 = (gl_ModelViewProjectionMatrix * tmpvar_73);
  float tmpvar_79;
  tmpvar_79 = tmpvar_78.z;
  lightDir.w = (vec4(_AO)).w;
  lightColor = gl_LightModel.ambient;
  while (true) {
    if ((i >= 4)) {
      break;
    };
    lightDir.xyz = _TerrainTreeLightDirections[i].xyz;
    lightColor = (lightColor + (_TerrainTreeLightColors[i] * max (0.0, dot (lightDir.xyz, tmpvar_117))));
    i = (i + 1);
  };
  lightColor.w = 1.0;
  tmpvar_123 = (lightColor * _Color);
  tmpvar_123.w = 1.0;
  gl_Position = tmpvar_78.xyzw;
  vec4 tmpvar_15;
  tmpvar_15.x = (vec4(tmpvar_79)).x;
  tmpvar_15.y = 0.0;
  tmpvar_15.z = 0.0;
  tmpvar_15.w = 0.0;
  xlv_FOG = tmpvar_15;
  gl_TexCoord[0] = tmpvar_9.xyzw;
  gl_FrontColor = tmpvar_123.xyzw;
}

