struct appdata_full {
  vec4 vertex;
  vec4 tangent;
  vec3 normal;
  vec4 texcoord;
  vec4 texcoord1;
  vec4 color;
};
varying vec4 xlv_FOG;
attribute vec4 TANGENT;
uniform vec4 unity_Scale;
uniform vec4 _WorldSpaceLightPos0;
uniform vec3 _WorldSpaceCameraPos;
uniform mat4 _World2Object;
uniform vec4 _Wind;
uniform float _TimeX;
uniform vec4 _SquashPlaneNormal;
uniform float _SquashAmount;
uniform vec4 _Scale;
uniform mat4 _Object2World;
uniform vec4 _MainTex_ST;
uniform vec4 _Color;
void main ()
{
  appdata_full xlt_v;
  xlt_v.vertex = gl_Vertex.xyzw;
  xlt_v.tangent = TANGENT.xyzw;
  xlt_v.normal = gl_Normal.xyz;
  xlt_v.texcoord = gl_MultiTexCoord0.xyzw;
  xlt_v.texcoord1 = gl_MultiTexCoord1.xyzw;
  xlt_v.color = gl_Color.xyzw;
  appdata_full v;
  v = xlt_v;
  vec4 tmpvar_237;
  float tmpvar_238;
  vec2 tmpvar_239;
  vec4 tmpvar_240;
  appdata_full v_i0;
  v_i0 = xlt_v;
  v_i0.vertex.xyz = (xlt_v.vertex.xyz * _Scale.xyz).xyz;
  vec4 tmpvar_137;
  tmpvar_137.xy = vec2(v_i0.color.xy);
  tmpvar_137.zw = vec2(v_i0.texcoord1.xy);
  vec4 pos;
  pos = v_i0.vertex;
  vec3 normal;
  normal = v_i0.normal;
  vec4 animParams;
  animParams = tmpvar_137;
  vec3 bend;
  float fBranchPhase;
  float tmpvar_142;
  tmpvar_142 = dot (_Object2World[3].xyz, vec3(1.000000, 1.000000, 1.000000));
  float tmpvar_144;
  tmpvar_144 = (tmpvar_142 + animParams.x);
  fBranchPhase = tmpvar_144;
  float tmpvar_146;
  tmpvar_146 = dot (pos.xyz, vec3((animParams.y + tmpvar_144)));
  vec2 tmpvar_148;
  tmpvar_148.x = float(vec2(tmpvar_146));
  tmpvar_148.y = float(vec2(fBranchPhase));
  vec4 tmpvar_150;
  tmpvar_150 = fract (((_TimeX + tmpvar_148).xxyy * vec4(1.975000, 0.793000, 0.375000, 0.193000)));
  vec4 tmpvar_156;
  tmpvar_156 = fract ((((tmpvar_150 * 2.000000) - 1.000000) + 0.500000));
  vec4 tmpvar_157;
  tmpvar_157 = abs (((tmpvar_156 * 2.000000) - 1.000000));
  vec4 __retval_i0;
  __retval_i0 = ((tmpvar_157 * tmpvar_157) * (3.000000 - (2.000000 * tmpvar_157)));
  vec2 tmpvar_161;
  tmpvar_161 = (__retval_i0.xz + __retval_i0.yw);
  bend = ((animParams.y * 0.100000) * normal.xyz);
  bend.y = float(vec2((animParams.w * 0.300000)));
  pos.xyz = (pos.xyz + (((tmpvar_161.xyx * bend) + ((_Wind.xyz * tmpvar_161.y) * animParams.w)) * _Wind.w)).xyz;
  pos.xyz = (pos.xyz + (animParams.z * _Wind.xyz)).xyz;
  v_i0.vertex = pos;
  vec4 pos_i0;
  pos_i0 = v_i0.vertex;
  vec3 planeNormal;
  vec3 projectedVertex;
  projectedVertex = pos_i0.xyz;
  vec3 tmpvar_170;
  tmpvar_170.x = float(vec3(0.000000, 0.000000, 0.000000));
  tmpvar_170.y = float(_SquashPlaneNormal.w);
  tmpvar_170.z = float(vec3(0.000000, 0.000000, 0.000000));
  vec3 tmpvar_172;
  tmpvar_172 = _SquashPlaneNormal.xyz;
  planeNormal = tmpvar_172;
  float tmpvar_174;
  tmpvar_174 = dot (tmpvar_172, (tmpvar_170 - pos_i0.xyz));
  vec3 tmpvar_175;
  tmpvar_175 = (projectedVertex + (tmpvar_174 * planeNormal));
  projectedVertex = tmpvar_175;
  vec3 tmpvar_177;
  tmpvar_177 = mix (tmpvar_175, pos_i0.xyz, vec3(_SquashAmount));
  vec4 tmpvar_178;
  tmpvar_178.xyz = vec3(tmpvar_177.xyz);
  tmpvar_178.w = float(vec4(1.000000, 1.000000, 1.000000, 1.000000));
  pos_i0 = tmpvar_178;
  v_i0.vertex = tmpvar_178;
  vec4 tmpvar_181;
  tmpvar_181.xyz = vec3((v_i0.color.w * _Color.xyz).xyz);
  tmpvar_181.w = float(_Color.w);
  v_i0.color = tmpvar_181;
  vec3 tmpvar_183;
  tmpvar_183 = normalize (v_i0.normal);
  v_i0.normal = tmpvar_183;
  vec3 tmpvar_185;
  tmpvar_185 = normalize (v_i0.tangent.xyz);
  v_i0.tangent.xyz = tmpvar_185.xyz;
  v = v_i0;
  vec4 tmpvar_187;
  tmpvar_187 = (gl_ModelViewProjectionMatrix * v_i0.vertex);
  tmpvar_237 = tmpvar_187;
  tmpvar_238 = tmpvar_187.z;
  tmpvar_239 = ((v_i0.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw).xy;
  tmpvar_240 = v_i0.color;
  vec3 tmpvar_191;
  tmpvar_191 = cross (v_i0.normal, v_i0.tangent.xyz);
  vec3 tmpvar_192;
  tmpvar_192 = (tmpvar_191 * v.tangent.w);
  mat3 tmpvar_193;
  tmpvar_193[0].x = float(v.tangent.x);
  tmpvar_193[0].y = float(tmpvar_192.x);
  tmpvar_193[0].z = float(v.normal.x);
  tmpvar_193[1].x = float(v.tangent.y);
  tmpvar_193[1].y = float(tmpvar_192.y);
  tmpvar_193[1].z = float(v.normal.y);
  tmpvar_193[2].x = float(v.tangent.z);
  tmpvar_193[2].y = float(tmpvar_192.z);
  tmpvar_193[2].z = float(v.normal.z);
  vec4 tmpvar_210;
  tmpvar_210.xyz = vec3(_WorldSpaceCameraPos.xyz);
  tmpvar_210.w = float(vec4(1.000000, 1.000000, 1.000000, 1.000000));
  gl_Position = tmpvar_237.xyzw;
  vec4 tmpvar_17;
  tmpvar_17.x = float(vec4(tmpvar_238));
  tmpvar_17.y = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_17.z = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_17.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  xlv_FOG = tmpvar_17;
  vec4 tmpvar_19;
  tmpvar_19.xy = vec2(tmpvar_239.xy);
  tmpvar_19.z = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_19.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[0] = tmpvar_19;
  gl_FrontColor = tmpvar_240.xyzw;
  vec4 tmpvar_23;
  tmpvar_23.xyz = vec3((tmpvar_193 * (_World2Object * _WorldSpaceLightPos0).xyz).xyz);
  tmpvar_23.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[1] = tmpvar_23;
  vec4 tmpvar_25;
  tmpvar_25.xyz = vec3((tmpvar_193 * (((_World2Object * tmpvar_210).xyz * unity_Scale.w) - v.vertex.xyz)).xyz);
  tmpvar_25.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[2] = tmpvar_25;
}

