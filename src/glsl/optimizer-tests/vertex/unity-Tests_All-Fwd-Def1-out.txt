struct v2f_surf {
  vec4 pos;
  float fog;
  vec4 hip_screen;
  vec3 hip_lmapFade;
};
struct appdata_full {
  vec4 vertex;
  vec4 tangent;
  vec3 normal;
  vec4 texcoord;
  vec4 texcoord1;
  vec4 color;
};
uniform vec4 _ProjectionParams;
uniform vec4 unity_LightmapFade;
uniform vec4 unity_LightmapST;
attribute vec4 TANGENT;
varying vec4 xlv_FOG;
void main ()
{
  appdata_full xlt_v;
  xlt_v.vertex = gl_Vertex.xyzw;
  xlt_v.tangent = TANGENT.xyzw;
  xlt_v.normal = gl_Normal.xyz;
  xlt_v.texcoord = gl_MultiTexCoord0.xyzw;
  xlt_v.texcoord1 = gl_MultiTexCoord1.xyzw;
  xlt_v.color = gl_Color.xyzw;
  v2f_surf o;
  vec4 tmpvar_31;
  tmpvar_31 = (gl_ModelViewProjectionMatrix * xlt_v.vertex);
  o.pos = tmpvar_31;
  o.fog = tmpvar_31.z;
  vec4 pos_i0;
  pos_i0 = o.pos;
  vec4 o_i0;
  vec4 tmpvar_35;
  tmpvar_35 = (pos_i0 * 0.500000);
  o_i0 = tmpvar_35;
  vec2 tmpvar_36;
  tmpvar_36.x = float(tmpvar_35.x);
  tmpvar_36.y = float(vec2((tmpvar_35.y * _ProjectionParams.x)));
  o_i0.xy = (tmpvar_36 + tmpvar_35.w).xy;
  o_i0.zw = vec2(pos_i0.zw);
  o.hip_screen = o_i0;
  o.hip_lmapFade.xy = ((xlt_v.texcoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw).xy;
  o.hip_lmapFade.z = float(vec3(((-((gl_ModelViewMatrix * xlt_v.vertex).z) * unity_LightmapFade.z) + unity_LightmapFade.w)));
  gl_Position = o.pos.xyzw;
  vec4 tmpvar_17;
  tmpvar_17.x = float(vec4(o.fog));
  tmpvar_17.y = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_17.z = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_17.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  xlv_FOG = tmpvar_17;
  gl_TexCoord[0] = o.hip_screen.xyzw;
  vec4 tmpvar_21;
  tmpvar_21.xyz = vec3(o.hip_lmapFade.xyz);
  tmpvar_21.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[1] = tmpvar_21;
}

