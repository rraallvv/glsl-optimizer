struct v2f_surf {
  vec4 pos;
  float fog;
  vec2 hip_pack0;
  vec3 worldPos;
  vec4 hip_screen;
};
struct appdata_full {
  vec4 vertex;
  vec4 tangent;
  vec3 normal;
  vec4 texcoord;
  vec4 texcoord1;
  vec4 color;
};
uniform vec4 _MainTex_ST;
uniform mat4 _Object2World;
uniform vec4 _ProjectionParams;
attribute vec4 TANGENT;
varying vec4 xlv_FOG;
void main ()
{
  appdata_full xlt_v;
  xlt_v.vertex = gl_Vertex.xyzw;
  xlt_v.tangent = TANGENT.xyzw;
  xlt_v.normal = gl_Normal.xyz;
  xlt_v.texcoord = gl_MultiTexCoord0.xyzw;
  xlt_v.texcoord1 = gl_MultiTexCoord1.xyzw;
  xlt_v.color = gl_Color.xyzw;
  v2f_surf o;
  vec4 tmpvar_33;
  tmpvar_33 = (gl_ModelViewProjectionMatrix * xlt_v.vertex);
  o.pos = tmpvar_33;
  o.fog = tmpvar_33.z;
  o.hip_pack0 = ((xlt_v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw).xy;
  o.worldPos = (_Object2World * xlt_v.vertex).xyz;
  vec4 pos_i0;
  pos_i0 = o.pos;
  vec4 o_i0;
  vec4 tmpvar_39;
  tmpvar_39 = (pos_i0 * 0.500000);
  o_i0 = tmpvar_39;
  vec2 tmpvar_40;
  tmpvar_40.x = float(tmpvar_39.xx);
  tmpvar_40.y = float(vec2((tmpvar_39.y * _ProjectionParams.x)));
  o_i0.xy = (tmpvar_40 + tmpvar_39.w).xy;
  o_i0.zw = vec2(pos_i0.zzzw);
  o.hip_screen = o_i0;
  gl_Position = o.pos.xyzw;
  vec4 tmpvar_17;
  tmpvar_17.x = float(vec4(o.fog));
  tmpvar_17.y = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_17.z = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_17.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  xlv_FOG = tmpvar_17;
  vec4 tmpvar_19;
  tmpvar_19.xy = vec2(o.hip_pack0.xyxx);
  tmpvar_19.z = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_19.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[0] = tmpvar_19;
  vec4 tmpvar_21;
  tmpvar_21.xyz = vec3(o.worldPos.xyzx);
  tmpvar_21.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[1] = tmpvar_21;
  gl_TexCoord[2] = o.hip_screen.xyzw;
}

