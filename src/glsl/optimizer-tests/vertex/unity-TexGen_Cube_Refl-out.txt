struct v2f {
  vec4 vertex;
  vec4 color;
  vec3 texcoord;
};
struct appdata_t {
  vec4 vertex;
  vec4 color;
  vec3 normal;
};
uniform mat4 _World2Object;
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_Scale;
void main ()
{
  appdata_t xlt_v;
  vec4 tmpvar_1;
  tmpvar_1.xyzw = gl_Vertex;
  xlt_v.vertex = tmpvar_1;
  vec4 tmpvar_3;
  tmpvar_3.xyzw = gl_Color;
  xlt_v.color = tmpvar_3;
  vec3 tmpvar_5;
  tmpvar_5.xyz = gl_Normal;
  xlt_v.normal = tmpvar_5;
  appdata_t v;
  v = xlt_v;
  v2f o;
  o.vertex = (gl_ModelViewProjectionMatrix * xlt_v.vertex);
  vec4 tmpvar_22;
  tmpvar_22.xyz = _WorldSpaceCameraPos.xyz;
  tmpvar_22.w = 1.000000;
  vec3 tmpvar_24;
  tmpvar_24 = normalize ((((_World2Object * tmpvar_22).xyz * unity_Scale.w) - xlt_v.vertex.xyz));
  vec3 tmpvar_26;
  tmpvar_26 = reflect (-(tmpvar_24), v.normal);
  o.texcoord = tmpvar_26;
  vec4 tmpvar_28;
  tmpvar_28.xyz = o.texcoord;
  tmpvar_28.w = 0.000000;
  vec3 tmpvar_29;
  tmpvar_29.xyz = vec3((gl_ModelViewMatrix * tmpvar_28));
  o.texcoord = tmpvar_29;
  o.color = v.color;
  vec4 tmpvar_9;
  tmpvar_9.xyzw = o.vertex;
  gl_Position = tmpvar_9;
  vec4 tmpvar_11;
  tmpvar_11.xyzw = o.color;
  gl_FrontColor = tmpvar_11;
  vec4 tmpvar_13;
  tmpvar_13.xyz = o.texcoord;
  tmpvar_13.w = 0.000000;
  gl_TexCoord[0] = tmpvar_13;
}

