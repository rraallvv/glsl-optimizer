struct v2f_surf {
  vec4 pos;
  float fog;
  vec4 hip_pack0;
  vec4 hip_screen;
};
struct appdata_full {
  vec4 vertex;
  vec4 tangent;
  vec3 normal;
  vec4 texcoord;
  vec4 texcoord1;
  vec4 color;
};
varying vec4 xlv_FOG;
attribute vec4 TANGENT;
uniform vec4 _ProjectionParams;
uniform vec4 _MainTex_ST;
uniform vec4 _LightMap_ST;
void main ()
{
  appdata_full xlt_v;
  xlt_v.vertex = gl_Vertex.xyzw;
  xlt_v.tangent = TANGENT.xyzw;
  xlt_v.normal = gl_Normal.xyz;
  xlt_v.texcoord = gl_MultiTexCoord0.xyzw;
  xlt_v.texcoord1 = gl_MultiTexCoord1.xyzw;
  xlt_v.color = gl_Color.xyzw;
  v2f_surf o;
  vec4 tmpvar_31;
  tmpvar_31 = (gl_ModelViewProjectionMatrix * xlt_v.vertex);
  o.pos = tmpvar_31;
  o.fog = tmpvar_31.z;
  o.hip_pack0.xy = ((xlt_v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw).xy;
  o.hip_pack0.zw = vec2(((xlt_v.texcoord1.xy * _LightMap_ST.xy) + _LightMap_ST.zw).xy);
  vec4 pos_i0;
  pos_i0 = o.pos;
  vec4 o_i0;
  vec4 tmpvar_37;
  tmpvar_37 = (pos_i0 * 0.500000);
  o_i0 = tmpvar_37;
  vec2 tmpvar_38;
  tmpvar_38.x = float(tmpvar_37.x);
  tmpvar_38.y = float(vec2((tmpvar_37.y * _ProjectionParams.x)));
  o_i0.xy = (tmpvar_38 + tmpvar_37.w).xy;
  o_i0.zw = vec2(pos_i0.zw);
  o.hip_screen = o_i0;
  gl_Position = o.pos.xyzw;
  vec4 tmpvar_17;
  tmpvar_17.x = float(vec4(o.fog));
  tmpvar_17.y = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_17.z = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_17.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  xlv_FOG = tmpvar_17;
  gl_TexCoord[0] = o.hip_pack0.xyzw;
  gl_TexCoord[1] = o.hip_screen.xyzw;
}

