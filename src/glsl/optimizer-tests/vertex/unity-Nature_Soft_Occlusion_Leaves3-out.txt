struct appdata_full {
  vec4 vertex;
  vec4 tangent;
  vec3 normal;
  vec4 texcoord;
  vec4 texcoord1;
  vec4 color;
};
struct v2f_surf {
  vec4 pos;
  vec3 vec;
  vec2 hip_pack0;
};
uniform vec4 _LightPositionRange;
uniform vec4 _MainTex_ST;
uniform mat4 _Object2World;
uniform vec4 _Scale;
uniform float _SquashAmount;
uniform vec4 _SquashPlaneNormal;
uniform mat4 _TerrainEngineBendTree;
attribute vec4 TANGENT;
void main ()
{
  appdata_full xlt_v;
  vec4 tmpvar_1;
  tmpvar_1.xyzw = gl_Vertex;
  xlt_v.vertex = tmpvar_1;
  vec4 tmpvar_3;
  tmpvar_3.xyzw = TANGENT;
  xlt_v.tangent = tmpvar_3;
  vec3 tmpvar_5;
  tmpvar_5.xyz = gl_Normal;
  xlt_v.normal = tmpvar_5;
  vec4 tmpvar_7;
  tmpvar_7.xyzw = gl_MultiTexCoord0;
  xlt_v.texcoord = tmpvar_7;
  vec4 tmpvar_9;
  tmpvar_9.xyzw = gl_MultiTexCoord1;
  xlt_v.texcoord1 = tmpvar_9;
  vec4 tmpvar_11;
  tmpvar_11.xyzw = gl_Color;
  xlt_v.color = tmpvar_11;
  v2f_surf o;
  appdata_full v_i0;
  v_i0 = xlt_v;
  vec4 pos;
  pos = xlt_v.vertex;
  pos.xyz = (pos.xyz * _Scale.xyz);
  vec4 tmpvar_75;
  tmpvar_75.xyz = pos.xyz;
  tmpvar_75.w = 0.000000;
  vec3 tmpvar_78;
  tmpvar_78 = mix (pos.xyz, (_TerrainEngineBendTree * tmpvar_75).xyz, xlt_v.color.www);
  pos.xyz = tmpvar_78;
  vec4 pos_i0;
  pos_i0 = pos;
  vec3 projectedVertex;
  vec3 planeNormal;
  projectedVertex = pos.xyz;
  vec3 tmpvar_83;
  tmpvar_83.x = 0.000000;
  tmpvar_83.y = _SquashPlaneNormal.w;
  tmpvar_83.z = 0.000000;
  planeNormal = _SquashPlaneNormal.xyz;
  vec3 tmpvar_86;
  tmpvar_86.xyz = vec3(pos);
  float tmpvar_87;
  tmpvar_87 = dot (planeNormal, (tmpvar_83 - tmpvar_86));
  projectedVertex = (projectedVertex + (tmpvar_87 * planeNormal));
  vec3 tmpvar_90;
  tmpvar_90 = mix (projectedVertex, pos_i0.xyz, _SquashAmount.xxx);
  vec4 tmpvar_91;
  tmpvar_91.xyz = tmpvar_90;
  tmpvar_91.w = 1.000000;
  pos_i0 = tmpvar_91;
  pos = tmpvar_91;
  v_i0.vertex = tmpvar_91;
  o.hip_pack0.xy = ((v_i0.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  o.vec = ((_Object2World * v_i0.vertex).xyz - _LightPositionRange.xyz);
  o.pos = (gl_ModelViewProjectionMatrix * v_i0.vertex);
  vec4 tmpvar_15;
  tmpvar_15.xyzw = o.pos;
  gl_Position = tmpvar_15;
  vec4 tmpvar_17;
  tmpvar_17.xyz = o.vec;
  tmpvar_17.w = 0.000000;
  gl_TexCoord[0] = tmpvar_17;
  vec4 tmpvar_19;
  tmpvar_19.xy = o.hip_pack0;
  tmpvar_19.z = 0.000000;
  tmpvar_19.w = 0.000000;
  gl_TexCoord[1] = tmpvar_19;
}

