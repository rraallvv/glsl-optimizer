uniform mat4 _TerrainEngineBendTree;
uniform vec4 _SquashPlaneNormal;
uniform float _SquashAmount;
uniform vec4 _Scale;
uniform vec4 _ProjectionParams;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1 = gl_Vertex.xyzw;
  vec4 tmpvar_2;
  vec4 pos;
  pos = tmpvar_1;
  pos.xyz = (tmpvar_1.xyz * _Scale.xyz).xyz;
  vec4 tmpvar_3;
  tmpvar_3.xyz = pos.xyz;
  tmpvar_3.w = 0.0;
  pos.xyz = mix (pos.xyz, (_TerrainEngineBendTree * tmpvar_3).xyz, gl_Color.www).xyz;
  vec3 tmpvar_4;
  tmpvar_4.x = 0.0;
  tmpvar_4.y = _SquashPlaneNormal.w;
  tmpvar_4.z = 0.0;
  vec3 tmpvar_5;
  tmpvar_5 = _SquashPlaneNormal.xyz;
  vec4 tmpvar_6;
  tmpvar_6.xyz = mix ((pos.xyz + (dot (tmpvar_5, (tmpvar_4 - pos.xyz)) * tmpvar_5)), pos.xyz, vec3(_SquashAmount)).xyz;
  tmpvar_6.w = 1.0;
  pos = tmpvar_6;
  mat3 tmpvar_7;
  tmpvar_7[0] = gl_ModelViewMatrixInverseTranspose[0].xyz;
  tmpvar_7[1] = gl_ModelViewMatrixInverseTranspose[1].xyz;
  tmpvar_7[2] = gl_ModelViewMatrixInverseTranspose[2].xyz;
  tmpvar_2.xyz = (tmpvar_7 * gl_Normal.xyz).xyz;
  tmpvar_2.w = (vec4(-(((gl_ModelViewMatrix * tmpvar_6).z * _ProjectionParams.w)))).w;
  gl_Position = (gl_ModelViewProjectionMatrix * tmpvar_6).xyzw;
  vec4 tmpvar_8;
  tmpvar_8.xy = gl_MultiTexCoord0.xy;
  tmpvar_8.z = 0.0;
  tmpvar_8.w = 0.0;
  gl_TexCoord[0] = tmpvar_8;
  gl_TexCoord[1] = tmpvar_2.xyzw;
}

