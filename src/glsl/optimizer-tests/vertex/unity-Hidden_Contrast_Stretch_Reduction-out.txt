struct appdata_img {
  vec4 vertex;
  vec2 texcoord;
};
struct v2f {
  vec4 position;
  vec2 uv[4];
};
void main ()
{
  appdata_img xlt_v;
  xlt_v.vertex = gl_Vertex.xyzw;
  xlt_v.texcoord = gl_MultiTexCoord0.xy;
  v2f o;
  o.position = (gl_ModelViewProjectionMatrix * xlt_v.vertex);
  vec2 __retval_i0;
  vec2 inUV;
  inUV = xlt_v.texcoord;
  vec4 tmpvar_25;
  tmpvar_25.x = float(inUV.xxxx);
  tmpvar_25.y = float(inUV.yyyy);
  tmpvar_25.z = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_25.w = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  __retval_i0 = (gl_TextureMatrix[0] * tmpvar_25).xy;
  o.uv[0] = __retval_i0;
  o.uv[1] = (__retval_i0 + vec2 (0.000000, 1.000000));
  o.uv[2] = (__retval_i0 + vec2 (1.000000, 0.000000));
  o.uv[3] = (__retval_i0 + vec2 (1.000000, 1.000000));
  gl_Position = o.position.xyzw;
  vec4 tmpvar_9;
  tmpvar_9.xy = vec2(o.uv[0].xyxx);
  tmpvar_9.z = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_9.w = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[0] = tmpvar_9;
  vec4 tmpvar_11;
  tmpvar_11.xy = vec2(o.uv[1].xyxx);
  tmpvar_11.z = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_11.w = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[1] = tmpvar_11;
  vec4 tmpvar_13;
  tmpvar_13.xy = vec2(o.uv[2].xyxx);
  tmpvar_13.z = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_13.w = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[2] = tmpvar_13;
  vec4 tmpvar_15;
  tmpvar_15.xy = vec2(o.uv[3].xyxx);
  tmpvar_15.z = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_15.w = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[3] = tmpvar_15;
}

