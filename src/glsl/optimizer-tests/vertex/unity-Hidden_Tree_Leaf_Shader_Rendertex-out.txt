struct appdata_full {
  vec4 vertex;
  vec4 tangent;
  vec3 normal;
  vec4 texcoord;
  vec4 texcoord1;
  vec4 color;
};
struct v2f {
  vec4 pos;
  vec2 uv;
  vec3 color;
};
uniform vec4 _TerrainTreeLightColors[4];
uniform vec3 _TerrainTreeLightDirections[4];
attribute vec4 TANGENT;
void main ()
{
  appdata_full xlt_v;
  xlt_v.vertex = gl_Vertex.xyzw;
  xlt_v.tangent = TANGENT.xyzw;
  xlt_v.normal = gl_Normal.xyz;
  xlt_v.texcoord = gl_MultiTexCoord0.xyzw;
  xlt_v.texcoord1 = gl_MultiTexCoord1.xyzw;
  xlt_v.color = gl_Color.xyzw;
  appdata_full v;
  v = xlt_v;
  v2f o;
  vec3 lightColor;
  int i;
  i = 0;
  mat4 mat;
  mat = (gl_ModelViewMatrixInverseTranspose);
  vec4 pos;
  pos = xlt_v.vertex;
  vec3 normal;
  normal = xlt_v.normal;
  vec4 tangent;
  tangent = xlt_v.tangent;
  float isBillboard;
  vec3 norb;
  vec3 tanb;
  float tmpvar_41;
  tmpvar_41 = abs (tangent.w);
  isBillboard = (1.000000 - tmpvar_41);
  vec4 tmpvar_43;
  tmpvar_43.xyz = vec3(normal.xyzx);
  tmpvar_43.w = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  vec4 tmpvar_44;
  tmpvar_44 = normalize ((tmpvar_43 * mat));
  norb = tmpvar_44.xyz;
  vec4 tmpvar_47;
  tmpvar_47.x = float(normal.zzzz);
  tmpvar_47.y = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_47.z = float(vec4(-(normal.x)));
  tmpvar_47.w = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  vec4 tmpvar_48;
  tmpvar_48 = normalize ((tmpvar_47 * mat));
  tanb = tmpvar_48.xyz;
  pos = (pos + ((tangent * mat) * isBillboard));
  vec3 tmpvar_53;
  tmpvar_53 = mix (normal, norb, vec3(isBillboard));
  normal = tmpvar_53;
  vec4 tmpvar_55;
  tmpvar_55.xyz = vec3(tanb.xyzx);
  tmpvar_55.w = float(vec4 (-1.000000, -1.000000, -1.000000, -1.000000));
  vec4 tmpvar_57;
  tmpvar_57 = mix (tangent, tmpvar_55, vec4(isBillboard));
  tangent = tmpvar_57;
  v.vertex = pos;
  v.normal = normal;
  v.tangent = tmpvar_57;
  o.pos = (gl_ModelViewProjectionMatrix * v.vertex);
  o.uv = v.texcoord.xy;
  lightColor = gl_LightModel.ambient.xyz;
  while (true) {
    if (!((i < 4))) {
      break;
    };
    float tmpvar_63;
    tmpvar_63 = dot (_TerrainTreeLightDirections[i].xyz, v.normal);
    float tmpvar_64;
    tmpvar_64 = max (0.000000, ((tmpvar_63 * 0.500000) + 0.500000));
    lightColor = (lightColor + (_TerrainTreeLightColors[i] * tmpvar_64).xyz);
    i = (i + 1);
  };
  o.color = (lightColor * v.color.w);
  gl_Position = o.pos.xyzw;
  vec4 tmpvar_17;
  tmpvar_17.xy = vec2(o.uv.xyxx);
  tmpvar_17.z = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_17.w = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[0] = tmpvar_17;
  vec4 tmpvar_19;
  tmpvar_19.xyz = vec3(o.color.xyzx);
  tmpvar_19.w = float(vec4 (0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[1] = tmpvar_19;
}

