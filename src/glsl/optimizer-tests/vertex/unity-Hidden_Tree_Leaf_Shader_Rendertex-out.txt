struct appdata_full {
  vec4 vertex;
  vec4 tangent;
  vec3 normal;
  vec4 texcoord;
  vec4 texcoord1;
  vec4 color;
};
struct v2f {
  vec4 pos;
  vec2 uv;
  vec3 color;
};
uniform vec4[4] _TerrainTreeLightColors;
uniform vec3[4] _TerrainTreeLightDirections;
attribute vec4 TANGENT;
void main ()
{
  appdata_full xlt_v;
  vec4 tmpvar_1;
  tmpvar_1.xyzw = gl_Vertex;
  xlt_v.vertex = tmpvar_1;
  vec4 tmpvar_3;
  tmpvar_3.xyzw = TANGENT;
  xlt_v.tangent = tmpvar_3;
  vec3 tmpvar_5;
  tmpvar_5.xyz = gl_Normal;
  xlt_v.normal = tmpvar_5;
  vec4 tmpvar_7;
  tmpvar_7.xyzw = gl_MultiTexCoord0;
  xlt_v.texcoord = tmpvar_7;
  vec4 tmpvar_9;
  tmpvar_9.xyzw = gl_MultiTexCoord1;
  xlt_v.texcoord1 = tmpvar_9;
  vec4 tmpvar_11;
  tmpvar_11.xyzw = gl_Color;
  xlt_v.color = tmpvar_11;
  appdata_full v;
  v = xlt_v;
  v2f o;
  vec3 lightColor;
  int i;
  i = 0;
  vec3 lightDir;
  mat4 mat;
  mat = gl_ModelViewMatrixInverseTranspose;
  vec4 pos;
  pos = xlt_v.vertex;
  vec3 normal;
  normal = xlt_v.normal;
  vec4 tangent;
  tangent = xlt_v.tangent;
  float isBillboard;
  vec3 norb;
  vec3 tanb;
  float tmpvar_41;
  tmpvar_41 = abs (tangent.w);
  isBillboard = (1.000000 - tmpvar_41);
  vec4 tmpvar_43;
  tmpvar_43.xyz = normal;
  tmpvar_43.w = 0.000000;
  vec4 tmpvar_44;
  tmpvar_44 = normalize ((tmpvar_43 * mat));
  vec3 tmpvar_45;
  tmpvar_45.xyz = vec3(tmpvar_44);
  norb = tmpvar_45;
  vec4 tmpvar_47;
  tmpvar_47.x = normal.z;
  tmpvar_47.y = 0.000000;
  tmpvar_47.z = -(normal.x);
  tmpvar_47.w = 0.000000;
  vec4 tmpvar_48;
  tmpvar_48 = normalize ((tmpvar_47 * mat));
  vec3 tmpvar_49;
  tmpvar_49.xyz = vec3(tmpvar_48);
  tanb = tmpvar_49;
  pos = (pos + ((tangent * mat) * isBillboard));
  vec3 tmpvar_53;
  tmpvar_53 = mix (normal, norb, isBillboard.xxx);
  normal = tmpvar_53;
  vec4 tmpvar_55;
  tmpvar_55.xyz = tanb;
  tmpvar_55.w = -1.000000;
  vec4 tmpvar_57;
  tmpvar_57 = mix (tangent, tmpvar_55, isBillboard.xxxx);
  tangent = tmpvar_57;
  v.vertex = pos;
  v.normal = normal;
  v.tangent = tmpvar_57;
  o.pos = (gl_ModelViewProjectionMatrix * v.vertex);
  o.uv = v.texcoord.xy;
  lightColor = gl_LightModel.ambient.xyz;
  while (true) {
    if (!((i < 4))) {
      break;
    };
    lightDir.xyz = _TerrainTreeLightDirections[i];
    float tmpvar_63;
    tmpvar_63 = dot (lightDir.xyz, v.normal);
    float tmpvar_64;
    tmpvar_64 = max (0.000000, ((tmpvar_63 * 0.500000) + 0.500000));
    vec3 tmpvar_66;
    tmpvar_66.xyz = vec3((_TerrainTreeLightColors[i] * tmpvar_64));
    lightColor = (lightColor + tmpvar_66);
    i = (i + 1);
  };
  o.color = (lightColor * v.color.w);
  vec4 tmpvar_15;
  tmpvar_15.xyzw = o.pos;
  gl_Position = tmpvar_15;
  vec4 tmpvar_17;
  tmpvar_17.xy = o.uv;
  tmpvar_17.z = 0.000000;
  tmpvar_17.w = 0.000000;
  gl_TexCoord[0] = tmpvar_17;
  vec4 tmpvar_19;
  tmpvar_19.xyz = o.color;
  tmpvar_19.w = 0.000000;
  gl_TexCoord[1] = tmpvar_19;
}

