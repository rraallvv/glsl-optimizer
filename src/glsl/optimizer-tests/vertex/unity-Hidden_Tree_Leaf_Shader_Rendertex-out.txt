attribute vec4 TANGENT;
uniform vec3 _TerrainTreeLightDirections[4];
uniform vec4 _TerrainTreeLightColors[4];
void main ()
{
  vec4 tmpvar_3;
  tmpvar_3 = TANGENT.xyzw;
  vec3 tmpvar_5;
  tmpvar_5 = gl_Normal.xyz;
  vec4 tmpvar_11;
  tmpvar_11 = gl_Color.xyzw;
  vec3 tmpvar_90;
  int i;
  vec3 lightColor;
  i = 0;
  float tmpvar_42;
  tmpvar_42 = (1.0 - abs (tmpvar_3.w));
  vec4 tmpvar_43;
  tmpvar_43.xyz = tmpvar_5.xyz;
  tmpvar_43.w = 0.0;
  tmpvar_90 = mix (tmpvar_5, normalize ((tmpvar_43 * gl_ModelViewMatrixInverseTranspose)).xyz, vec3(tmpvar_42));
  vec4 tmpvar_59;
  tmpvar_59 = (gl_ModelViewProjectionMatrix * (gl_Vertex.xyzw + ((tmpvar_3 * gl_ModelViewMatrixInverseTranspose) * tmpvar_42)));
  vec2 tmpvar_60;
  tmpvar_60 = gl_MultiTexCoord0.xy;
  lightColor = gl_LightModel.ambient.xyz;
  while (true) {
    if ((i >= 4)) {
      break;
    };
    lightColor = (lightColor + (_TerrainTreeLightColors[i] * max (0.0, ((dot (_TerrainTreeLightDirections[i].xyz, tmpvar_90) * 0.500000) + 0.500000))).xyz);
    i = (i + 1);
  };
  gl_Position = tmpvar_59.xyzw;
  vec4 tmpvar_17;
  tmpvar_17.xy = tmpvar_60.xy;
  tmpvar_17.z = 0.0;
  tmpvar_17.w = 0.0;
  gl_TexCoord[0] = tmpvar_17;
  vec4 tmpvar_19;
  tmpvar_19.xyz = (lightColor * tmpvar_11.w).xyz;
  tmpvar_19.w = 0.0;
  gl_TexCoord[1] = tmpvar_19;
}

