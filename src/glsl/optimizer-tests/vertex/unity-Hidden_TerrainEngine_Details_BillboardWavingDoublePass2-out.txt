struct appdata_full {
  vec4 vertex;
  vec4 tangent;
  vec3 normal;
  vec4 texcoord;
  vec4 texcoord1;
  vec4 color;
};
struct v2f_surf {
  vec4 pos;
  vec2 hip_pack0;
  vec4 lop_color;
};
uniform vec4 _CameraPosition;
uniform vec3 _CameraRight;
uniform vec3 _CameraUp;
uniform vec4 _MainTex_ST;
uniform vec4 _WaveAndDistance;
uniform vec4 _WavingTint;
uniform vec4 unity_LightShadowBias;
attribute vec4 TANGENT;
void main ()
{
  appdata_full xlt_v;
  vec4 tmpvar_1;
  tmpvar_1.xyzw = gl_Vertex;
  xlt_v.vertex = tmpvar_1;
  vec4 tmpvar_3;
  tmpvar_3.xyzw = TANGENT;
  xlt_v.tangent = tmpvar_3;
  vec3 tmpvar_5;
  tmpvar_5.xyz = gl_Normal;
  xlt_v.normal = tmpvar_5;
  vec4 tmpvar_7;
  tmpvar_7.xyzw = gl_MultiTexCoord0;
  xlt_v.texcoord = tmpvar_7;
  vec4 tmpvar_9;
  tmpvar_9.xyzw = gl_MultiTexCoord1;
  xlt_v.texcoord1 = tmpvar_9;
  vec4 tmpvar_11;
  tmpvar_11.xyzw = gl_Color;
  xlt_v.color = tmpvar_11;
  v2f_surf o;
  appdata_full v_i0;
  v_i0 = xlt_v;
  vec4 pos;
  pos = xlt_v.vertex;
  vec2 offset;
  offset = xlt_v.tangent.xy;
  vec3 grasspos;
  grasspos = (pos.xyz - _CameraPosition.xyz);
  float tmpvar_125;
  tmpvar_125 = dot (grasspos, grasspos);
  if ((tmpvar_125 > _WaveAndDistance.w)) {
    offset = vec2 (0.000000, 0.000000);
  };
  pos.xyz = (pos.xyz + (offset.x * _CameraRight.xyz));
  pos.xyz = (pos.xyz + (offset.y * _CameraUp.xyz));
  v_i0.vertex = pos;
  vec4 vertex;
  vertex = v_i0.vertex;
  float waveAmount_i0;
  waveAmount_i0 = v_i0.tangent.y;
  vec3 color_i0;
  color_i0 = v_i0.color.xyz;
  vec4 outColor;
  vec4 _waveXmove;
  _waveXmove = vec4 (0.024000, 0.040000, -0.120000, 0.096000);
  vec4 _waveZmove;
  _waveZmove = vec4 (0.006000, 0.020000, -0.020000, 0.100000);
  vec4 waves;
  vec4 s;
  float lighting;
  vec3 waveMove;
  waveMove = vec3 (0.000000, 0.000000, 0.000000);
  waves = (((vertex.x * (vec4 (0.012000, 0.020000, 0.060000, 0.024000) * _WaveAndDistance.y)) + (vertex.z * (vec4 (0.006000, 0.020000, 0.020000, 0.050000) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4 (1.200000, 2.000000, 1.600000, 4.800000)));
  vec4 tmpvar_139;
  tmpvar_139 = fract (waves);
  waves = tmpvar_139;
  vec4 s_i0;
  vec4 c_i0;
  vec4 tmpvar_143;
  tmpvar_143 = ((tmpvar_139 * 6.408850) - 3.141590);
  vec4 tmpvar_144;
  tmpvar_144 = (tmpvar_143 * tmpvar_143);
  vec4 tmpvar_145;
  tmpvar_145 = (tmpvar_144 * tmpvar_144);
  vec4 tmpvar_148;
  tmpvar_148 = (tmpvar_144 * tmpvar_143);
  vec4 tmpvar_149;
  tmpvar_149 = (tmpvar_148 * tmpvar_144);
  vec4 tmpvar_151;
  tmpvar_151 = (((tmpvar_143 + (tmpvar_148 * -0.161616)) + (tmpvar_149 * 0.008333)) + ((tmpvar_149 * tmpvar_144) * -0.000198));
  s_i0 = tmpvar_151;
  c_i0 = ((((1.000000 + (tmpvar_144 * -0.500000)) + (tmpvar_145 * 0.041667)) + ((tmpvar_145 * tmpvar_144) * -0.001389)) + ((tmpvar_145 * tmpvar_144) * 0.000025));
  vec4 tmpvar_153;
  tmpvar_153 = (tmpvar_151 * tmpvar_151);
  s = (tmpvar_153 * tmpvar_153);
  float tmpvar_156;
  tmpvar_156 = dot (s, vec4 (0.674200, 0.674200, 0.269680, 0.134840));
  lighting = (tmpvar_156 * 0.700000);
  s = (s * waveAmount_i0);
  float tmpvar_159;
  tmpvar_159 = dot (s, _waveXmove);
  waveMove.x = tmpvar_159;
  float tmpvar_161;
  tmpvar_161 = dot (s, _waveZmove);
  waveMove.z = tmpvar_161;
  vertex.xz = (vertex.xz - (waveMove.xz * _WaveAndDistance.z));
  vec3 tmpvar_165;
  tmpvar_165 = mix (vec3 (0.500000, 0.500000, 0.500000), _WavingTint.xyz, vec3(lighting));
  outColor.xyz = ((color_i0 * tmpvar_165) * 2.000000);
  outColor.w = 1.000000;
  v_i0.vertex = vertex;
  v_i0.color = outColor;
  o.hip_pack0.xy = ((v_i0.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  o.lop_color = v_i0.color;
  o.pos = (gl_ModelViewProjectionMatrix * v_i0.vertex);
  o.pos.z = (o.pos.z + unity_LightShadowBias.x);
  if ((o.pos.z < -(o.pos.w))) {
    o.pos.z = -(o.pos.w);
  };
  vec4 tmpvar_15;
  tmpvar_15.xyzw = o.pos;
  gl_Position = tmpvar_15;
  vec4 tmpvar_17;
  tmpvar_17.xy = o.hip_pack0;
  tmpvar_17.z = 0.000000;
  tmpvar_17.w = 0.000000;
  gl_TexCoord[1] = tmpvar_17;
  vec4 tmpvar_19;
  tmpvar_19.xyzw = o.lop_color;
  gl_FrontColor = tmpvar_19;
}

