struct appdata_full {
  vec4 vertex;
  vec4 tangent;
  vec3 normal;
  vec4 texcoord;
  vec4 texcoord1;
  vec4 color;
};
attribute vec4 TANGENT;
uniform vec4 unity_LightShadowBias;
uniform vec4 _WavingTint;
uniform vec4 _WaveAndDistance;
uniform vec4 _MainTex_ST;
uniform vec3 _CameraUp;
uniform vec3 _CameraRight;
uniform vec4 _CameraPosition;
void main ()
{
  appdata_full xlt_v;
  xlt_v.vertex = gl_Vertex.xyzw;
  xlt_v.tangent = TANGENT.xyzw;
  xlt_v.normal = gl_Normal.xyz;
  xlt_v.texcoord = gl_MultiTexCoord0.xyzw;
  xlt_v.texcoord1 = gl_MultiTexCoord1.xyzw;
  xlt_v.color = gl_Color.xyzw;
  vec4 tmpvar_187;
  vec2 tmpvar_188;
  vec4 tmpvar_189;
  appdata_full v_i0;
  v_i0 = xlt_v;
  vec4 pos;
  pos = xlt_v.vertex;
  vec2 offset;
  offset = xlt_v.tangent.xy;
  vec3 tmpvar_124;
  tmpvar_124 = (pos.xyz - _CameraPosition.xyz);
  float tmpvar_125;
  tmpvar_125 = dot (tmpvar_124, tmpvar_124);
  if ((tmpvar_125 > _WaveAndDistance.w)) {
    offset = vec2(0.000000, 0.000000);
  };
  pos.xyz = (pos.xyz + (offset.x * _CameraRight.xyz)).xyz;
  pos.xyz = (pos.xyz + (offset.y * _CameraUp.xyz)).xyz;
  v_i0.vertex = pos;
  vec4 vertex;
  vertex = v_i0.vertex;
  vec4 outColor;
  vec3 waveMove;
  waveMove = vec3(0.000000, 0.000000, 0.000000);
  vec4 tmpvar_143;
  tmpvar_143 = ((fract ((((vertex.x * (vec4(0.012000, 0.020000, 0.060000, 0.024000) * _WaveAndDistance.y)) + (vertex.z * (vec4(0.006000, 0.020000, 0.020000, 0.050000) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.200000, 2.000000, 1.600000, 4.800000)))) * 6.408850) - 3.141590);
  vec4 tmpvar_144;
  tmpvar_144 = (tmpvar_143 * tmpvar_143);
  vec4 tmpvar_148;
  tmpvar_148 = (tmpvar_144 * tmpvar_143);
  vec4 tmpvar_149;
  tmpvar_149 = (tmpvar_148 * tmpvar_144);
  vec4 tmpvar_151;
  tmpvar_151 = (((tmpvar_143 + (tmpvar_148 * -0.161616)) + (tmpvar_149 * 0.008333)) + ((tmpvar_149 * tmpvar_144) * -0.000198));
  vec4 tmpvar_153;
  tmpvar_153 = (tmpvar_151 * tmpvar_151);
  vec4 tmpvar_154;
  tmpvar_154 = (tmpvar_153 * tmpvar_153);
  vec4 tmpvar_158;
  tmpvar_158 = (tmpvar_154 * v_i0.tangent.y);
  waveMove.x = dot (tmpvar_158, vec4(0.024000, 0.040000, -0.120000, 0.096000));
  waveMove.z = float(vec3(dot (tmpvar_158, vec4(0.006000, 0.020000, -0.020000, 0.100000))));
  vertex.xz = vec2((vertex.xz - (waveMove.xz * _WaveAndDistance.z)).xy);
  outColor.xyz = ((v_i0.color.xyz * mix (vec3(0.500000, 0.500000, 0.500000), _WavingTint.xyz, vec3((dot (tmpvar_154, vec4(0.674200, 0.674200, 0.269680, 0.134840)) * 0.700000)))) * 2.000000).xyz;
  outColor.w = float(vec4(1.000000, 1.000000, 1.000000, 1.000000));
  v_i0.vertex = vertex;
  v_i0.color = outColor;
  tmpvar_188 = ((v_i0.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw).xy;
  tmpvar_189 = v_i0.color;
  tmpvar_187 = (gl_ModelViewProjectionMatrix * v_i0.vertex);
  tmpvar_187.z = float(vec3((tmpvar_187.z + unity_LightShadowBias.x)));
  if ((tmpvar_187.z < -(tmpvar_187.w))) {
    tmpvar_187.z = float(vec3(-(tmpvar_187.w)));
  };
  gl_Position = tmpvar_187.xyzw;
  vec4 tmpvar_17;
  tmpvar_17.xy = vec2(tmpvar_188.xy);
  tmpvar_17.z = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  tmpvar_17.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_TexCoord[1] = tmpvar_17;
  gl_FrontColor = tmpvar_189.xyzw;
}

