struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
struct v2f_surf {
  vec4 pos;
  float fog;
  vec4 hip_pack0;
  vec3 lightDir;
};
varying vec4 xlv_FOG;
uniform sampler2D _MainTex;
uniform vec4 _LightColor0;
uniform float _Cutoff;
uniform vec4 _Color;
uniform sampler2D _BumpMap;
void main ()
{
  v2f_surf xlt_IN;
  xlt_IN.pos = vec4(0.000000, 0.000000, 0.000000, 0.000000);
  xlt_IN.fog = xlv_FOG.x;
  xlt_IN.hip_pack0 = gl_TexCoord[0].xyzw;
  xlt_IN.lightDir = gl_TexCoord[1].xyz;
  v2f_surf IN;
  IN = xlt_IN;
  vec4 c;
  SurfaceOutput o;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  SurfaceOutput o_i0;
  o_i0 = o;
  vec4 tmpvar_42;
  tmpvar_42 = (texture2D (_MainTex, xlt_IN.hip_pack0.xy) * _Color);
  o_i0.Albedo = tmpvar_42.xyz;
  o_i0.Alpha = tmpvar_42.w;
  vec4 normal;
  normal.xy = ((texture2D (_BumpMap, xlt_IN.hip_pack0.zw).wy * 2.000000) - 1.000000).xy;
  normal.z = float(vec3(sqrt (((1.000000 - (normal.x * normal.x)) - (normal.y * normal.y)))));
  o_i0.Normal = normal.xyz;
  o = o_i0;
  float x;
  x = (o_i0.Alpha - _Cutoff);
  if ((x < 0.000000)) {
    discard;
  };
  vec4 c_i0_i1;
  c_i0_i1.xyz = ((o.Albedo * _LightColor0.xyz) * (max (0.000000, dot (o.Normal, IN.lightDir)) * 2.000000)).xyz;
  c_i0_i1.w = float(vec4(o.Alpha));
  c = c_i0_i1;
  c.w = float(vec4(o.Alpha));
  gl_FragData[0] = c.xyzw;
}

