struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
struct Input {
  vec2 uv_MainTex;
};
struct v2f_surf {
  vec4 pos;
  vec3 vec;
  vec2 hip_pack0;
};
uniform vec4 _Color;
uniform float _Cutoff;
uniform vec4 _LightPositionRange;
uniform sampler2D _MainTex;
void main ()
{
  v2f_surf xlt_IN;
  xlt_IN.pos = vec4 (0.000000, 0.000000, 0.000000, 0.000000);
  xlt_IN.vec = gl_TexCoord[0].xyz;
  xlt_IN.hip_pack0 = gl_TexCoord[1].xy;
  v2f_surf IN;
  IN = xlt_IN;
  Input surfIN;
  SurfaceOutput o;
  surfIN.uv_MainTex = xlt_IN.hip_pack0.xy;
  o.Albedo = vec3 (0.000000, 0.000000, 0.000000);
  o.Emission = vec3 (0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  Input IN_i0;
  IN_i0 = surfIN;
  SurfaceOutput o_i0;
  o_i0 = o;
  vec4 tmpvar_28;
  tmpvar_28 = texture2D (_MainTex, IN_i0.uv_MainTex);
  vec4 tmpvar_29;
  tmpvar_29 = (tmpvar_28 * _Color);
  o_i0.Albedo = tmpvar_29.xyz;
  o_i0.Alpha = tmpvar_29.w;
  o = o_i0;
  float x;
  x = (o_i0.Alpha - _Cutoff);
  if ((x < 0.000000)) {
    discard;
  };
  float tmpvar_32;
  tmpvar_32 = length (IN.vec);
  vec4 enc;
  enc = (vec4 (1.000000, 255.000000, 65025.000000, 160580992.000000) * (tmpvar_32 * _LightPositionRange.w));
  vec4 tmpvar_38;
  tmpvar_38 = fract (enc);
  vec4 tmpvar_40;
  tmpvar_40 = (tmpvar_38 - (tmpvar_38.yzww * 0.003922));
  enc = tmpvar_40;
  gl_FragData[0] = tmpvar_40.xyzw;
}

