struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
struct Input {
  vec2 uv_MainTex;
  vec2 uv_Illum;
  vec2 uv_BumpMap;
};
struct v2f_surf {
  vec4 pos;
  float fog;
  vec4 hip_pack0;
  vec4 hip_screen;
};
uniform sampler2D _BumpMap;
uniform vec4 _Color;
uniform sampler2D _Illum;
uniform sampler2D _LightBuffer;
uniform sampler2D _MainTex;
uniform float _Shininess;
uniform vec4 _SpecColor;
uniform vec4 unity_Ambient;
varying vec4 xlv_FOG;
void main ()
{
  v2f_surf xlt_IN;
  xlt_IN.pos = vec4(0.000000, 0.000000, 0.000000, 0.000000);
  xlt_IN.fog = xlv_FOG.x;
  xlt_IN.hip_pack0 = gl_TexCoord[0].xyzw;
  xlt_IN.hip_screen = gl_TexCoord[1].xyzw;
  v2f_surf IN;
  IN = xlt_IN;
  Input surfIN;
  SurfaceOutput o;
  vec4 light;
  vec4 col;
  surfIN.uv_MainTex = xlt_IN.hip_pack0.xy;
  surfIN.uv_Illum = xlt_IN.hip_pack0.zw;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  Input IN_i0;
  IN_i0 = surfIN;
  SurfaceOutput o_i0;
  o_i0 = o;
  vec4 tex;
  vec4 c;
  vec4 tmpvar_44;
  tmpvar_44 = texture2D (_MainTex, IN_i0.uv_MainTex);
  tex = tmpvar_44;
  vec4 tmpvar_46;
  tmpvar_46 = (tmpvar_44 * _Color);
  c = tmpvar_46;
  o_i0.Albedo = tmpvar_46.xyz;
  vec4 tmpvar_48;
  tmpvar_48 = texture2D (_Illum, IN_i0.uv_Illum);
  o_i0.Emission = (c.xyz * tmpvar_48.w);
  o_i0.Gloss = tex.w;
  o_i0.Alpha = c.w;
  o_i0.Specular = _Shininess;
  vec4 tmpvar_53;
  tmpvar_53 = texture2D (_BumpMap, IN_i0.uv_BumpMap);
  vec4 normal;
  normal.xy = ((tmpvar_53.wy * 2.000000) - 1.000000).xy;
  float tmpvar_57;
  tmpvar_57 = sqrt (((1.000000 - (normal.x * normal.x)) - (normal.y * normal.y)));
  normal.z = float(vec3(tmpvar_57));
  o_i0.Normal = normal.xyz;
  o = o_i0;
  vec4 tmpvar_61;
  tmpvar_61 = texture2DProj (_LightBuffer, IN.hip_screen);
  light = tmpvar_61;
  vec4 tmpvar_63;
  tmpvar_63 = log2 (light);
  vec4 tmpvar_64;
  tmpvar_64 = -(tmpvar_63);
  light = tmpvar_64;
  light.xyz = (tmpvar_64.xyz + unity_Ambient.xyz).xyz;
  vec4 c_i0;
  float tmpvar_68;
  tmpvar_68 = (light.w * o.Gloss);
  c_i0.xyz = ((o.Albedo * light.xyz) + ((light.xyz * _SpecColor.xyz) * tmpvar_68)).xyz;
  c_i0.w = float(vec4((o.Alpha + (tmpvar_68 * _SpecColor.w))));
  col = c_i0;
  col.xyz = (c_i0.xyz + o.Emission).xyz;
  gl_FragData[0] = col.xyzw;
}

