struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
varying vec4 xlv_FOG;
uniform sampler2D unity_LightmapInd;
uniform sampler2D unity_Lightmap;
uniform sampler2D _MainTex;
uniform sampler2D _LightBuffer;
uniform sampler2D _Illum;
uniform vec4 _Color;
void main ()
{
  vec4 tmpvar_69;
  vec3 tmpvar_71;
  tmpvar_69 = gl_TexCoord[0].xyzw;
  tmpvar_71 = gl_TexCoord[2].xyz;
  vec4 col;
  vec4 light;
  SurfaceOutput o;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  SurfaceOutput o_i0;
  o_i0 = o;
  vec4 tmpvar_37;
  tmpvar_37 = (texture2D (_MainTex, tmpvar_69.xy) * _Color);
  o_i0.Albedo = tmpvar_37.xyz;
  o_i0.Emission = (tmpvar_37.xyz * texture2D (_Illum, tmpvar_69.zw).w);
  o_i0.Alpha = tmpvar_37.w;
  o = o_i0;
  vec4 tmpvar_45;
  tmpvar_45 = -(log2 (texture2DProj (_LightBuffer, gl_TexCoord[1].xyzw)));
  light = tmpvar_45;
  light.xyz = (tmpvar_45.xyz + mix ((2.000000 * texture2D (unity_LightmapInd, tmpvar_71.xy).xyz), (2.000000 * texture2D (unity_Lightmap, tmpvar_71.xy).xyz), vec3(clamp (tmpvar_71.z, 0.000000, 1.000000)))).xyz;
  vec4 c_i0;
  c_i0.xyz = (o_i0.Albedo * light.xyz).xyz;
  c_i0.w = float(vec4(o_i0.Alpha));
  col = c_i0;
  col.xyz = (c_i0.xyz + o_i0.Emission).xyz;
  gl_FragData[0] = col.xyzw;
}

