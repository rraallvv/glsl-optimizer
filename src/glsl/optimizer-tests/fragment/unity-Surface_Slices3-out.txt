struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
struct Input {
  vec2 uv_MainTex;
  vec3 worldPos;
};
struct v2f_surf {
  vec4 pos;
  vec3 _ShadowCoord0;
  vec3 _ShadowCoord1;
  vec3 _ShadowCoord2;
  vec3 _ShadowCoord3;
  vec2 _ShadowZFade;
  vec3 worldPos;
};
uniform vec4 _LightShadowData;
uniform vec4 _LightSplitsFar;
uniform vec4 _LightSplitsNear;
uniform sampler2D _MainTex;
uniform vec4 _ProjectionParams;
uniform sampler2D _ShadowMapTexture;
void main ()
{
  v2f_surf xlt_IN;
  xlt_IN.pos = vec4(0.000000, 0.000000, 0.000000, 0.000000);
  xlt_IN._ShadowCoord0 = gl_TexCoord[0].xyz;
  xlt_IN._ShadowCoord1 = gl_TexCoord[1].xyz;
  xlt_IN._ShadowCoord2 = gl_TexCoord[2].xyz;
  xlt_IN._ShadowCoord3 = gl_TexCoord[3].xyz;
  xlt_IN._ShadowZFade = gl_TexCoord[4].xy;
  xlt_IN.worldPos = gl_TexCoord[5].xyz;
  v2f_surf IN;
  IN = xlt_IN;
  Input surfIN;
  SurfaceOutput o;
  vec4 z;
  vec4 near;
  vec4 coord;
  float shadow;
  vec4 res;
  surfIN.worldPos = xlt_IN.worldPos;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  Input IN_i0;
  IN_i0 = surfIN;
  SurfaceOutput o_i0;
  o_i0 = o;
  float tmpvar_39;
  tmpvar_39 = fract (((IN_i0.worldPos.y + (IN_i0.worldPos.z * 0.100000)) * 5.000000));
  float x;
  x = (tmpvar_39 - 0.500000);
  if ((x < 0.000000)) {
    discard;
  };
  vec4 tmpvar_40;
  tmpvar_40 = texture2D (_MainTex, IN_i0.uv_MainTex);
  o_i0.Albedo = tmpvar_40.xyz;
  o = o_i0;
  z = IN._ShadowZFade.xxxx;
  bvec4 tmpvar_44;
  tmpvar_44 = greaterThanEqual (z, _LightSplitsNear);
  near = vec4(tmpvar_44).xyzw;
  bvec4 tmpvar_47;
  tmpvar_47 = lessThan (z, _LightSplitsFar);
  vec4 tmpvar_50;
  tmpvar_50 = (near * vec4(tmpvar_47).xyzw);
  vec4 tmpvar_51;
  tmpvar_51.xyz = vec3(((((IN._ShadowCoord0 * tmpvar_50.x) + (IN._ShadowCoord1 * tmpvar_50.y)) + (IN._ShadowCoord2 * tmpvar_50.z)) + (IN._ShadowCoord3 * tmpvar_50.w)).xyzx);
  tmpvar_51.w = float(vec4(1.000000, 1.000000, 1.000000, 1.000000));
  coord = tmpvar_51;
  vec4 tmpvar_53;
  tmpvar_53 = texture2D (_ShadowMapTexture, coord.xy);
  float tmpvar_54;
  if ((tmpvar_53.x < coord.z)) {
    tmpvar_54 = _LightShadowData.x;
  } else {
    tmpvar_54 = 1.000000;
  };
  shadow = tmpvar_54;
  float tmpvar_58;
  tmpvar_58 = clamp (IN._ShadowZFade.y, 0.000000, 1.000000);
  float tmpvar_61;
  tmpvar_61 = clamp ((shadow + tmpvar_58), 0.000000, 1.000000);
  res.x = tmpvar_61;
  res.y = float(vec2(1.000000, 1.000000));
  vec2 enc;
  enc = (vec2(1.000000, 255.000000) * (1.000000 - (z * _ProjectionParams.w)).x);
  vec2 tmpvar_70;
  tmpvar_70 = fract (enc);
  enc = tmpvar_70;
  enc.x = (tmpvar_70.x - (tmpvar_70.y * 0.003922));
  res.zw = vec2(enc.xxxy);
  gl_FragData[0] = res.xyzw;
}

