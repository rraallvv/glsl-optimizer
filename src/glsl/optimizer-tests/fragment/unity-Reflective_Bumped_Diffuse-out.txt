struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
varying vec4 xlv_FOG;
uniform vec4 _ReflectColor;
uniform sampler2D _MainTex;
uniform sampler2D _LightTexture0;
uniform vec4 _LightColor0;
uniform samplerCube _Cube;
uniform vec4 _Color;
uniform sampler2D _BumpMap;
void main ()
{
  vec4 tmpvar_80;
  tmpvar_80 = gl_TexCoord[0].xyzw;
  vec4 c;
  SurfaceOutput o;
  vec3 tmpvar_90;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  SurfaceOutput o_i0;
  o_i0 = o;
  vec4 tmpvar_49;
  tmpvar_49 = texture2D (_MainTex, tmpvar_80.xy);
  o_i0.Albedo = (tmpvar_49 * _Color).xyz;
  vec4 normal;
  normal.xy = ((texture2D (_BumpMap, tmpvar_80.zw).wy * 2.000000) - 1.000000).xy;
  normal.z = float(vec3(sqrt (((1.000000 - (normal.x * normal.x)) - (normal.y * normal.y)))));
  o_i0.Normal = normal.xyz;
  vec4 tmpvar_64;
  tmpvar_64 = (textureCube (_Cube, tmpvar_90) * tmpvar_49.w);
  o_i0.Emission = (tmpvar_64.xyz * _ReflectColor.xyz);
  o_i0.Alpha = (tmpvar_64.w * _ReflectColor.w);
  o = o_i0;
  vec4 c_i0_i1;
  c_i0_i1.xyz = ((o_i0.Albedo * _LightColor0.xyz) * ((max (0.000000, dot (o_i0.Normal, gl_TexCoord[1].xyz)) * texture2D (_LightTexture0, gl_TexCoord[2].xy).w) * 2.000000)).xyz;
  c_i0_i1.w = float(vec4(o_i0.Alpha));
  c = c_i0_i1;
  c.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_FragData[0] = c.xyzw;
}

