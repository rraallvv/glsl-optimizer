struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
struct Input {
  vec2 uv_MainTex;
  vec2 uv_Illum;
};
struct v2f_surf {
  vec4 pos;
  float fog;
  vec2 hip_pack0;
  vec3 normal;
  vec3 lightDir;
  vec3 viewDir;
  vec4 _LightCoord;
};
varying vec4 xlv_FOG;
uniform vec4 _SpecColor;
uniform float _Shininess;
uniform sampler2D _MainTex;
uniform sampler2D _LightTextureB0;
uniform sampler2D _LightTexture0;
uniform vec4 _LightColor0;
uniform sampler2D _Illum;
uniform vec4 _Color;
void main ()
{
  v2f_surf xlt_IN;
  xlt_IN.pos = vec4(0.000000, 0.000000, 0.000000, 0.000000);
  xlt_IN.fog = xlv_FOG.x;
  xlt_IN.hip_pack0 = gl_TexCoord[0].xy;
  xlt_IN.normal = gl_TexCoord[1].xyz;
  xlt_IN.lightDir = gl_TexCoord[2].xyz;
  xlt_IN.viewDir = gl_TexCoord[3].xyz;
  xlt_IN._LightCoord = gl_TexCoord[4].xyzw;
  v2f_surf IN;
  IN = xlt_IN;
  vec4 c;
  vec3 lightDir;
  SurfaceOutput o;
  Input surfIN;
  surfIN.uv_MainTex = xlt_IN.hip_pack0.xy;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  o.Normal = xlt_IN.normal;
  Input IN_i0;
  IN_i0 = surfIN;
  SurfaceOutput o_i0;
  o_i0 = o;
  vec4 c_i0;
  vec4 tex;
  vec4 tmpvar_54;
  tmpvar_54 = texture2D (_MainTex, surfIN.uv_MainTex);
  tex = tmpvar_54;
  vec4 tmpvar_56;
  tmpvar_56 = (tmpvar_54 * _Color);
  c_i0 = tmpvar_56;
  o_i0.Albedo = tmpvar_56.xyz;
  vec4 tmpvar_58;
  tmpvar_58 = texture2D (_Illum, IN_i0.uv_Illum);
  o_i0.Emission = (c_i0.xyz * tmpvar_58.w);
  o_i0.Gloss = tex.w;
  o_i0.Alpha = c_i0.w;
  o_i0.Specular = _Shininess;
  o = o_i0;
  vec3 tmpvar_63;
  tmpvar_63 = IN.lightDir;
  lightDir = tmpvar_63;
  vec3 tmpvar_64;
  tmpvar_64 = normalize (tmpvar_63);
  lightDir = tmpvar_64;
  vec3 tmpvar_67;
  tmpvar_67 = normalize (IN.viewDir.xyz);
  float tmpvar_68;
  vec4 LightCoord;
  LightCoord = IN._LightCoord;
  vec4 tmpvar_70;
  tmpvar_70 = texture2D (_LightTexture0, ((LightCoord.xy / LightCoord.w) + 0.500000));
  tmpvar_68 = tmpvar_70.w;
  vec3 LightCoord_i0;
  LightCoord_i0 = IN._LightCoord.xyz;
  float tmpvar_73;
  tmpvar_73 = dot (LightCoord_i0, LightCoord_i0);
  vec4 tmpvar_76;
  tmpvar_76 = texture2D (_LightTextureB0, vec2(tmpvar_73));
  SurfaceOutput s;
  s = o;
  vec3 lightDir_i0;
  lightDir_i0 = lightDir;
  float atten;
  atten = ((float((IN._LightCoord.z > 0.000000)) * tmpvar_68) * tmpvar_76.w);
  vec4 c_i0_i1;
  float diff;
  vec3 h;
  vec3 tmpvar_79;
  tmpvar_79 = normalize ((lightDir + tmpvar_67));
  h = tmpvar_79;
  float tmpvar_81;
  tmpvar_81 = dot (s.Normal, lightDir_i0);
  float tmpvar_82;
  tmpvar_82 = max (0.000000, tmpvar_81);
  diff = tmpvar_82;
  float tmpvar_84;
  tmpvar_84 = dot (s.Normal, h);
  float tmpvar_85;
  tmpvar_85 = max (0.000000, tmpvar_84);
  float tmpvar_87;
  tmpvar_87 = pow (tmpvar_85, (s.Specular * 128.000000));
  float tmpvar_88;
  tmpvar_88 = (tmpvar_87 * s.Gloss);
  c_i0_i1.xyz = ((((s.Albedo * _LightColor0.xyz) * diff) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_88)) * (atten * 2.000000)).xyz;
  c_i0_i1.w = float(vec4((s.Alpha + (((_LightColor0.w * _SpecColor.w) * tmpvar_88) * atten))));
  c = c_i0_i1;
  c.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_FragData[0] = c.xyzw;
}

