struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
uniform float _Shininess;
uniform vec4 _ReflectColor;
uniform sampler2D _MainTex;
uniform samplerCube _Cube;
uniform vec4 _Color;
uniform sampler2D _BumpMap;
void main ()
{
  vec4 res;
  vec3 viewN;
  SurfaceOutput o;
  vec2 tmpvar_84;
  vec3 tmpvar_86;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  SurfaceOutput o_i0;
  o_i0 = o;
  vec4 tmpvar_45;
  tmpvar_45 = texture2D (_MainTex, tmpvar_84);
  o_i0.Albedo = (tmpvar_45 * _Color).xyz;
  o_i0.Gloss = tmpvar_45.w;
  o_i0.Specular = _Shininess;
  vec4 normal;
  normal.xy = ((texture2D (_BumpMap, gl_TexCoord[0].xy).wy * 2.000000) - 1.000000).xy;
  normal.z = float(vec3(sqrt (((1.000000 - (normal.x * normal.x)) - (normal.y * normal.y)))));
  o_i0.Normal = normal.xyz;
  vec4 tmpvar_62;
  tmpvar_62 = (textureCube (_Cube, tmpvar_86) * tmpvar_45.w);
  o_i0.Emission = (tmpvar_62.xyz * _ReflectColor.xyz);
  o_i0.Alpha = (tmpvar_62.w * _ReflectColor.w);
  o = o_i0;
  viewN.x = dot (gl_TexCoord[1].xyz, o_i0.Normal);
  viewN.y = float(vec2(dot (gl_TexCoord[2].xyz, o_i0.Normal)));
  viewN.z = float(vec3(dot (gl_TexCoord[3].xyz, o_i0.Normal)));
  o.Normal = viewN;
  res.xyz = ((o.Normal * vec3(0.500000, 0.500000, -0.500000)) + 0.500000).xyz;
  res.w = float(vec4(o.Specular));
  gl_FragData[0] = res.xyzw;
}

