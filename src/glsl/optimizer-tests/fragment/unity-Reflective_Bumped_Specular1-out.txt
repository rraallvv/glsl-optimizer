struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
struct Input {
  vec2 uv_MainTex;
  vec2 uv_BumpMap;
  vec3 worldRefl;
};
struct v2f_surf {
  vec4 pos;
  vec2 hip_pack0;
  vec3 TtoV0;
  vec3 TtoV1;
  vec3 TtoV2;
};
uniform sampler2D _BumpMap;
uniform vec4 _Color;
uniform samplerCube _Cube;
uniform sampler2D _MainTex;
uniform vec4 _ReflectColor;
uniform float _Shininess;
void main ()
{
  v2f_surf xlt_IN;
  xlt_IN.pos = vec4 (0.000000, 0.000000, 0.000000, 0.000000);
  vec2 tmpvar_2;
  tmpvar_2.xy = vec2(gl_TexCoord[0]);
  xlt_IN.hip_pack0 = tmpvar_2;
  vec3 tmpvar_4;
  tmpvar_4.xyz = vec3(gl_TexCoord[1]);
  xlt_IN.TtoV0 = tmpvar_4;
  vec3 tmpvar_6;
  tmpvar_6.xyz = vec3(gl_TexCoord[2]);
  xlt_IN.TtoV1 = tmpvar_6;
  vec3 tmpvar_8;
  tmpvar_8.xyz = vec3(gl_TexCoord[3]);
  xlt_IN.TtoV2 = tmpvar_8;
  v2f_surf IN;
  IN = xlt_IN;
  Input surfIN;
  SurfaceOutput o;
  vec3 viewN;
  vec4 res;
  surfIN.uv_BumpMap = xlt_IN.hip_pack0.xy;
  o.Albedo = vec3 (0.000000, 0.000000, 0.000000);
  o.Emission = vec3 (0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  Input IN_i0;
  IN_i0 = surfIN;
  SurfaceOutput o_i0;
  o_i0 = o;
  vec4 tex;
  vec4 tmpvar_45;
  tmpvar_45 = texture2D (_MainTex, IN_i0.uv_MainTex);
  tex = tmpvar_45;
  o_i0.Albedo = (tmpvar_45 * _Color).xyz;
  o_i0.Gloss = tmpvar_45.w;
  o_i0.Specular = _Shininess;
  vec4 tmpvar_51;
  tmpvar_51 = texture2D (_BumpMap, IN_i0.uv_BumpMap);
  vec4 normal;
  normal.xy = ((tmpvar_51.wy * 2.000000) - 1.000000);
  float tmpvar_55;
  tmpvar_55 = sqrt (((1.000000 - (normal.x * normal.x)) - (normal.y * normal.y)));
  normal.z = tmpvar_55;
  vec3 tmpvar_57;
  tmpvar_57.xyz = vec3(normal);
  o_i0.Normal = tmpvar_57;
  vec4 tmpvar_60;
  tmpvar_60 = textureCube (_Cube, IN_i0.worldRefl);
  vec4 tmpvar_62;
  tmpvar_62 = (tmpvar_60 * tex.w);
  o_i0.Emission = (tmpvar_62.xyz * _ReflectColor.xyz);
  o_i0.Alpha = (tmpvar_62.w * _ReflectColor.w);
  o = o_i0;
  float tmpvar_65;
  tmpvar_65 = dot (IN.TtoV0, o.Normal);
  viewN.x = tmpvar_65;
  float tmpvar_67;
  tmpvar_67 = dot (IN.TtoV1, o.Normal);
  viewN.y = tmpvar_67;
  float tmpvar_69;
  tmpvar_69 = dot (IN.TtoV2, o.Normal);
  viewN.z = tmpvar_69;
  o.Normal = viewN;
  res.xyz = ((o.Normal * vec3 (0.500000, 0.500000, -0.500000)) + 0.500000);
  res.w = o.Specular;
  vec4 tmpvar_12;
  tmpvar_12.xyzw = res;
  gl_FragData[0] = tmpvar_12;
}

