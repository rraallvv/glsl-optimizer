struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
struct Input {
  vec3 worldRefl;
};
struct v2f_surf {
  vec4 pos;
  vec3 normal;
};
uniform samplerCube _Cube;
void surf (
  in Input IN,
  inout SurfaceOutput o
);

void surf (
  in Input IN,
  inout SurfaceOutput o
)
{
  vec4 tmpvar_1;
  tmpvar_1 = textureCube (_Cube, IN.worldRefl);
  vec3 tmpvar_2;
  tmpvar_2 = tmpvar_1.xyz;
  o.Albedo = tmpvar_2;
}

vec4 frag_surf (
  in v2f_surf IN
);

vec4 frag_surf (
  in v2f_surf IN
)
{
  vec4 res;
  Input surfIN;
  SurfaceOutput o;
  vec3 tmpvar_1;
  tmpvar_1 = vec3(0.000000, 0.000000, 0.000000);
  o.Albedo = tmpvar_1;
  vec3 tmpvar_2;
  tmpvar_2 = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = tmpvar_2;
  float tmpvar_3;
  tmpvar_3 = 0.000000;
  o.Specular = tmpvar_3;
  float tmpvar_4;
  tmpvar_4 = 0.000000;
  o.Alpha = tmpvar_4;
  float tmpvar_5;
  tmpvar_5 = 0.000000;
  o.Gloss = tmpvar_5;
  vec3 tmpvar_6;
  tmpvar_6 = IN.normal;
  o.Normal = tmpvar_6;
  surf (surfIN, o);
  vec3 tmpvar_7;
  tmpvar_7 = ((o.Normal * vec3(0.500000, 0.500000, -0.500000)) + 0.500000);
  res.xyz = tmpvar_7.xyz;
  float tmpvar_8;
  tmpvar_8 = o.Specular;
  res.w = float(vec4(tmpvar_8));
  return res;
}

void main ()
{
  v2f_surf xlt_IN;
  vec4 xl_retval;
  vec4 tmpvar_1;
  tmpvar_1 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
  xlt_IN.pos = tmpvar_1;
  vec3 tmpvar_2;
  tmpvar_2 = gl_TexCoord[0].xyz;
  vec3 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  xlt_IN.normal = tmpvar_3;
  vec4 tmpvar_4;
  tmpvar_4 = frag_surf (xlt_IN);
  vec4 tmpvar_5;
  tmpvar_5 = tmpvar_4;
  xl_retval = tmpvar_5;
  vec4 tmpvar_6;
  tmpvar_6 = xl_retval.xyzw;
  vec4 tmpvar_7;
  tmpvar_7 = tmpvar_6;
  gl_FragData[0] = tmpvar_7;
}

