#extension GL_ARB_shader_texture_lod : enable
varying vec2 xlv_TEXCOORD0;
uniform vec4 _MainTex_TexelSize;
uniform sampler2D _MainTex;
void main ()
{
  vec2 rcpFrame;
  rcpFrame = _MainTex_TexelSize.xy;
  bool tmpvar_1;
  tmpvar_1 = bool(1);
  vec3 tmpvar_2;
  int i;
  bool doneP;
  bool doneN;
  float lumaEndP;
  float lumaEndN;
  vec2 offNP;
  vec2 posP;
  vec2 posN;
  float gradientN;
  float lengthSign;
  float lumaS;
  float lumaN;
  doneN = bool(0);
  doneP = bool(0);
  i = 0;
  vec4 tmpvar_3;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.xy = (xlv_TEXCOORD0 + (vec2(0.0, -1.0) * rcpFrame));
  vec3 tmpvar_4;
  tmpvar_4 = texture2DLod (_MainTex, tmpvar_3.xy, 0.0).xyz;
  vec4 tmpvar_5;
  tmpvar_5.zw = vec2(0.0, 0.0);
  tmpvar_5.xy = (xlv_TEXCOORD0 + (vec2(-1.0, 0.0) * rcpFrame));
  vec3 tmpvar_6;
  tmpvar_6 = texture2DLod (_MainTex, tmpvar_5.xy, 0.0).xyz;
  vec4 tmpvar_7;
  tmpvar_7.zw = vec2(0.0, 0.0);
  tmpvar_7.xy = xlv_TEXCOORD0;
  vec3 tmpvar_8;
  tmpvar_8 = texture2DLod (_MainTex, tmpvar_7.xy, 0.0).xyz;
  vec4 tmpvar_9;
  tmpvar_9.zw = vec2(0.0, 0.0);
  tmpvar_9.xy = (xlv_TEXCOORD0 + (vec2(1.0, 0.0) * rcpFrame));
  vec3 tmpvar_10;
  tmpvar_10 = texture2DLod (_MainTex, tmpvar_9.xy, 0.0).xyz;
  vec4 tmpvar_11;
  tmpvar_11.zw = vec2(0.0, 0.0);
  tmpvar_11.xy = (xlv_TEXCOORD0 + (vec2(0.0, 1.0) * rcpFrame));
  vec3 tmpvar_12;
  tmpvar_12 = texture2DLod (_MainTex, tmpvar_11.xy, 0.0).xyz;
  float tmpvar_13;
  tmpvar_13 = ((tmpvar_4.y * 1.96321) + tmpvar_4.x);
  lumaN = tmpvar_13;
  float tmpvar_14;
  tmpvar_14 = ((tmpvar_6.y * 1.96321) + tmpvar_6.x);
  float tmpvar_15;
  tmpvar_15 = ((tmpvar_8.y * 1.96321) + tmpvar_8.x);
  float tmpvar_16;
  tmpvar_16 = ((tmpvar_10.y * 1.96321) + tmpvar_10.x);
  float tmpvar_17;
  tmpvar_17 = ((tmpvar_12.y * 1.96321) + tmpvar_12.x);
  lumaS = tmpvar_17;
  float tmpvar_18;
  tmpvar_18 = max (tmpvar_15, max (max (tmpvar_13, tmpvar_14), max (tmpvar_17, tmpvar_16)));
  float tmpvar_19;
  tmpvar_19 = (tmpvar_18 - min (tmpvar_15, min (min (tmpvar_13, tmpvar_14), min (tmpvar_17, tmpvar_16))));
  float tmpvar_20;
  tmpvar_20 = max (0.0416667, (tmpvar_18 * 0.125));
  if ((tmpvar_19 < tmpvar_20)) {
    tmpvar_2 = tmpvar_8;
    tmpvar_1 = bool(0);
  } else {
    float tmpvar_21;
    tmpvar_21 = min (0.75, (max (0.0, ((abs ((((((tmpvar_13 + tmpvar_14) + tmpvar_16) + tmpvar_17) * 0.25) - tmpvar_15)) / tmpvar_19) - 0.25)) * 1.33333));
    vec4 tmpvar_22;
    tmpvar_22.zw = vec2(0.0, 0.0);
    tmpvar_22.xy = (xlv_TEXCOORD0 + (vec2(-1.0, -1.0) * rcpFrame));
    vec3 tmpvar_23;
    tmpvar_23 = texture2DLod (_MainTex, tmpvar_22.xy, 0.0).xyz;
    vec4 tmpvar_24;
    tmpvar_24.zw = vec2(0.0, 0.0);
    tmpvar_24.xy = (xlv_TEXCOORD0 + (vec2(1.0, -1.0) * rcpFrame));
    vec3 tmpvar_25;
    tmpvar_25 = texture2DLod (_MainTex, tmpvar_24.xy, 0.0).xyz;
    vec4 tmpvar_26;
    tmpvar_26.zw = vec2(0.0, 0.0);
    tmpvar_26.xy = (xlv_TEXCOORD0 + (vec2(-1.0, 1.0) * rcpFrame));
    vec3 tmpvar_27;
    tmpvar_27 = texture2DLod (_MainTex, tmpvar_26.xy, 0.0).xyz;
    vec4 tmpvar_28;
    tmpvar_28.zw = vec2(0.0, 0.0);
    tmpvar_28.xy = (xlv_TEXCOORD0 + rcpFrame);
    vec3 tmpvar_29;
    tmpvar_29 = texture2DLod (_MainTex, tmpvar_28.xy, 0.0).xyz;
    vec3 tmpvar_30;
    tmpvar_30 = ((((((tmpvar_4 + tmpvar_6) + tmpvar_8) + tmpvar_10) + tmpvar_12) + (((tmpvar_23 + tmpvar_25) + tmpvar_27) + tmpvar_29)) * vec3(0.111111, 0.111111, 0.111111));
    float tmpvar_31;
    tmpvar_31 = ((tmpvar_23.y * 1.96321) + tmpvar_23.x);
    float tmpvar_32;
    tmpvar_32 = ((tmpvar_25.y * 1.96321) + tmpvar_25.x);
    float tmpvar_33;
    tmpvar_33 = ((tmpvar_27.y * 1.96321) + tmpvar_27.x);
    float tmpvar_34;
    tmpvar_34 = ((tmpvar_29.y * 1.96321) + tmpvar_29.x);
    bool tmpvar_35;
    tmpvar_35 = (((abs ((((0.25 * tmpvar_31) + (-(0.5) * tmpvar_14)) + (0.25 * tmpvar_33))) + abs ((((0.5 * tmpvar_13) + (-(1.0) * tmpvar_15)) + (0.5 * tmpvar_17)))) + abs ((((0.25 * tmpvar_32) + (-(0.5) * tmpvar_16)) + (0.25 * tmpvar_34)))) >= ((abs ((((0.25 * tmpvar_31) + (-(0.5) * tmpvar_13)) + (0.25 * tmpvar_32))) + abs ((((0.5 * tmpvar_14) + (-(1.0) * tmpvar_15)) + (0.5 * tmpvar_16)))) + abs ((((0.25 * tmpvar_33) + (-(0.5) * tmpvar_17)) + (0.25 * tmpvar_34)))));
    float tmpvar_36;
    if (tmpvar_35) {
      tmpvar_36 = -(rcpFrame.y);
    } else {
      tmpvar_36 = -(rcpFrame.x);
    };
    if (tmpvar_1) {
      lengthSign = tmpvar_36;
      if (!(tmpvar_35)) {
        lumaN = tmpvar_14;
      };
      if (tmpvar_1) {
        if (!(tmpvar_35)) {
          lumaS = tmpvar_16;
        };
        if (tmpvar_1) {
          float tmpvar_37;
          tmpvar_37 = abs ((lumaN - tmpvar_15));
          gradientN = tmpvar_37;
          float tmpvar_38;
          tmpvar_38 = abs ((lumaS - tmpvar_15));
          lumaN = ((lumaN + tmpvar_15) * 0.5);
          float tmpvar_39;
          tmpvar_39 = ((lumaS + tmpvar_15) * 0.5);
          lumaS = tmpvar_39;
          bool tmpvar_40;
          tmpvar_40 = (tmpvar_37 >= tmpvar_38);
          if (!(tmpvar_40)) {
            lumaN = tmpvar_39;
          };
          if (tmpvar_1) {
            if (!(tmpvar_40)) {
              gradientN = tmpvar_38;
            };
            if (tmpvar_1) {
              if (!(tmpvar_40)) {
                lengthSign = (tmpvar_36 * -1.0);
              };
              if (tmpvar_1) {
                float tmpvar_41;
                if (tmpvar_35) {
                  tmpvar_41 = 0.0;
                } else {
                  tmpvar_41 = (lengthSign * 0.5);
                };
                if (tmpvar_1) {
                  posN.x = (xlv_TEXCOORD0.x + tmpvar_41);
                  float tmpvar_42;
                  if (tmpvar_35) {
                    tmpvar_42 = (lengthSign * 0.5);
                  } else {
                    tmpvar_42 = 0.0;
                  };
                  if (tmpvar_1) {
                    posN.y = (xlv_TEXCOORD0.y + tmpvar_42);
                    gradientN = (gradientN * 0.25);
                    posP = posN;
                    vec2 tmpvar_43;
                    if (tmpvar_35) {
                      vec2 tmpvar_44;
                      tmpvar_44.y = 0.0;
                      tmpvar_44.x = rcpFrame.x;
                      tmpvar_43 = tmpvar_44;
                    } else {
                      vec2 tmpvar_45;
                      tmpvar_45.x = 0.0;
                      tmpvar_45.y = rcpFrame.y;
                      tmpvar_43 = tmpvar_45;
                    };
                    if (tmpvar_1) {
                      offNP = tmpvar_43;
                      lumaEndN = lumaN;
                      lumaEndP = lumaN;
                      posN = (posN + (tmpvar_43 * vec2(-1.0, -1.0)));
                      posP = (posP + tmpvar_43);
                      while (true) {
                        if ((i >= 16)) {
                          break;
                        };
                        if (!(doneN)) {
                          vec4 tmpvar_46;
                          tmpvar_46.zw = vec2(0.0, 0.0);
                          tmpvar_46.xy = posN;
                          vec3 rgb_i0_i1_i2_i3_i4_i5_i6_i7_i8;
                          rgb_i0_i1_i2_i3_i4_i5_i6_i7_i8 = texture2DLod (_MainTex, tmpvar_46.xy, 0.0).xyz;
                          lumaEndN = ((rgb_i0_i1_i2_i3_i4_i5_i6_i7_i8.y * 1.96321) + rgb_i0_i1_i2_i3_i4_i5_i6_i7_i8.x);
                        };
                        if (!(doneP)) {
                          vec4 tmpvar_47;
                          tmpvar_47.zw = vec2(0.0, 0.0);
                          tmpvar_47.xy = posP;
                          vec3 rgb_i0_i1_i2_i3_i4_i5_i6_i7_i8;
                          rgb_i0_i1_i2_i3_i4_i5_i6_i7_i8 = texture2DLod (_MainTex, tmpvar_47.xy, 0.0).xyz;
                          lumaEndP = ((rgb_i0_i1_i2_i3_i4_i5_i6_i7_i8.y * 1.96321) + rgb_i0_i1_i2_i3_i4_i5_i6_i7_i8.x);
                        };
                        bool tmpvar_48;
                        if (doneN) {
                          tmpvar_48 = bool(1);
                        } else {
                          tmpvar_48 = (abs ((lumaEndN - lumaN)) >= gradientN);
                        };
                        doneN = tmpvar_48;
                        bool tmpvar_49;
                        if (doneP) {
                          tmpvar_49 = bool(1);
                        } else {
                          tmpvar_49 = (abs ((lumaEndP - lumaN)) >= gradientN);
                        };
                        doneP = tmpvar_49;
                        bool tmpvar_50;
                        if (tmpvar_48) {
                          tmpvar_50 = tmpvar_49;
                        } else {
                          tmpvar_50 = bool(0);
                        };
                        if (tmpvar_50) {
                          break;
                        };
                        if (!(tmpvar_48)) {
                          posN = (posN - offNP);
                        };
                        if (!(tmpvar_49)) {
                          posP = (posP + offNP);
                        };
                        i = (i + 1);
                      };
                      float tmpvar_51;
                      if (tmpvar_35) {
                        tmpvar_51 = (xlv_TEXCOORD0.x - posN.x);
                      } else {
                        tmpvar_51 = (xlv_TEXCOORD0.y - posN.y);
                      };
                      if (tmpvar_1) {
                        float tmpvar_52;
                        if (tmpvar_35) {
                          tmpvar_52 = (posP.x - xlv_TEXCOORD0.x);
                        } else {
                          tmpvar_52 = (posP.y - xlv_TEXCOORD0.y);
                        };
                        if (tmpvar_1) {
                          bool tmpvar_53;
                          tmpvar_53 = (tmpvar_51 < tmpvar_52);
                          float tmpvar_54;
                          if (tmpvar_53) {
                            tmpvar_54 = lumaEndN;
                          } else {
                            tmpvar_54 = lumaEndP;
                          };
                          if (tmpvar_1) {
                            lumaEndN = tmpvar_54;
                            if ((((tmpvar_15 - lumaN) < 0.0) == ((tmpvar_54 - lumaN) < 0.0))) {
                              lengthSign = 0.0;
                            };
                            if (tmpvar_1) {
                              float tmpvar_55;
                              tmpvar_55 = (tmpvar_52 + tmpvar_51);
                              float tmpvar_56;
                              if (tmpvar_53) {
                                tmpvar_56 = tmpvar_51;
                              } else {
                                tmpvar_56 = tmpvar_52;
                              };
                              if (tmpvar_1) {
                                float tmpvar_57;
                                tmpvar_57 = ((0.5 + (tmpvar_56 * (-1.0 / tmpvar_55))) * lengthSign);
                                float tmpvar_58;
                                if (tmpvar_35) {
                                  tmpvar_58 = 0.0;
                                } else {
                                  tmpvar_58 = tmpvar_57;
                                };
                                if (tmpvar_1) {
                                  float tmpvar_59;
                                  if (tmpvar_35) {
                                    tmpvar_59 = tmpvar_57;
                                  } else {
                                    tmpvar_59 = 0.0;
                                  };
                                  if (tmpvar_1) {
                                    vec2 tmpvar_60;
                                    tmpvar_60.x = (xlv_TEXCOORD0.x + tmpvar_58);
                                    tmpvar_60.y = (xlv_TEXCOORD0.y + tmpvar_59);
                                    vec4 tmpvar_61;
                                    tmpvar_61.zw = vec2(0.0, 0.0);
                                    tmpvar_61.xy = tmpvar_60;
                                    vec3 tmpvar_62;
                                    tmpvar_62 = texture2DLod (_MainTex, tmpvar_61.xy, 0.0).xyz;
                                    vec3 tmpvar_63;
                                    tmpvar_63.x = -(tmpvar_21);
                                    tmpvar_63.y = -(tmpvar_21);
                                    tmpvar_63.z = -(tmpvar_21);
                                    vec3 tmpvar_64;
                                    tmpvar_64.x = tmpvar_21;
                                    tmpvar_64.y = tmpvar_21;
                                    tmpvar_64.z = tmpvar_21;
                                    tmpvar_2 = ((tmpvar_63 * tmpvar_62) + ((tmpvar_30 * tmpvar_64) + tmpvar_62));
                                    tmpvar_1 = bool(0);
                                  };
                                };
                              };
                            };
                          };
                        };
                      };
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
  vec4 tmpvar_65;
  tmpvar_65.w = 0.0;
  tmpvar_65.xyz = tmpvar_2;
  gl_FragData[0] = tmpvar_65;
}

