struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
varying vec4 xlv_FOG;
uniform sampler2D unity_LightmapInd;
uniform sampler2D unity_Lightmap;
uniform vec4 _SpecColor;
uniform float _Shininess;
uniform sampler2D _MainTex;
uniform sampler2D _LightBuffer;
uniform sampler2D _Illum;
uniform vec4 _Color;
void main ()
{
  vec4 tmpvar_75;
  vec3 tmpvar_77;
  tmpvar_75 = gl_TexCoord[0].xyzw;
  tmpvar_77 = gl_TexCoord[2].xyz;
  vec4 col;
  vec4 light;
  SurfaceOutput o;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  SurfaceOutput o_i0;
  o_i0 = o;
  vec4 tmpvar_38;
  tmpvar_38 = texture2D (_MainTex, tmpvar_75.xy);
  vec4 tmpvar_40;
  tmpvar_40 = (tmpvar_38 * _Color);
  o_i0.Albedo = tmpvar_40.xyz;
  o_i0.Emission = (tmpvar_40.xyz * texture2D (_Illum, tmpvar_75.zw).w);
  o_i0.Gloss = tmpvar_38.w;
  o_i0.Alpha = tmpvar_40.w;
  o_i0.Specular = _Shininess;
  o = o_i0;
  vec4 tmpvar_50;
  tmpvar_50 = -(log2 (texture2DProj (_LightBuffer, gl_TexCoord[1].xyzw)));
  light = tmpvar_50;
  light.xyz = (tmpvar_50.xyz + mix ((2.000000 * texture2D (unity_LightmapInd, tmpvar_77.xy).xyz), (2.000000 * texture2D (unity_Lightmap, tmpvar_77.xy).xyz), vec3(clamp (tmpvar_77.z, 0.000000, 1.000000)))).xyz;
  vec4 c_i0;
  float tmpvar_68;
  tmpvar_68 = (light.w * o_i0.Gloss);
  c_i0.xyz = ((o_i0.Albedo * light.xyz) + ((light.xyz * _SpecColor.xyz) * tmpvar_68)).xyz;
  c_i0.w = float(vec4((o_i0.Alpha + (tmpvar_68 * _SpecColor.w))));
  col = c_i0;
  col.xyz = (c_i0.xyz + o_i0.Emission).xyz;
  gl_FragData[0] = col.xyzw;
}

