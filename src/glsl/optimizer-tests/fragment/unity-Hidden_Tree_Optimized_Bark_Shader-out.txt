struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
varying vec4 xlv_FOG;
uniform sampler2D _TranslucencyMap;
uniform sampler2D _MainTex;
uniform sampler2D _LightTextureB0;
uniform samplerCube _LightTexture0;
uniform vec4 _LightColor0;
uniform sampler2D _BumpSpecMap;
void main ()
{
  vec4 tmpvar_105;
  vec3 tmpvar_108;
  tmpvar_105 = gl_Color.xyzw;
  tmpvar_108 = gl_TexCoord[3].xyz;
  vec4 c;
  SurfaceOutput o;
  vec2 tmpvar_116;
  tmpvar_116 = gl_TexCoord[0].xy;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  SurfaceOutput o_i0;
  o_i0 = o;
  o_i0.Albedo = (texture2D (_MainTex, tmpvar_116).xyz * tmpvar_105.xyz);
  o_i0.Gloss = texture2D (_TranslucencyMap, tmpvar_116).w;
  o_i0.Alpha = tmpvar_105.w;
  vec4 tmpvar_66;
  tmpvar_66 = texture2D (_BumpSpecMap, tmpvar_116);
  o_i0.Specular = tmpvar_66.x;
  vec4 normal;
  normal.xy = ((tmpvar_66.wy * 2.000000) - 1.000000).xy;
  normal.z = float(vec3(sqrt (((1.000000 - (normal.x * normal.x)) - (normal.y * normal.y)))));
  o_i0.Normal = normal.xyz;
  o = o_i0;
  vec3 tmpvar_77;
  tmpvar_77 = normalize (gl_TexCoord[1].xyz);
  float atten;
  atten = (texture2D (_LightTextureB0, vec2(dot (tmpvar_108, tmpvar_108))).w * textureCube (_LightTexture0, tmpvar_108).w);
  vec4 c_i0_i1;
  float tmpvar_97;
  tmpvar_97 = (pow (max (0.000000, dot (o_i0.Normal, normalize ((tmpvar_77 + normalize (gl_TexCoord[2].xyz))))), (o_i0.Specular * 128.000000)) * o_i0.Gloss);
  c_i0_i1.xyz = ((((o_i0.Albedo * _LightColor0.xyz) * max (0.000000, dot (o_i0.Normal, tmpvar_77))) + (_LightColor0.xyz * tmpvar_97)) * (atten * 2.000000)).xyz;
  c_i0_i1.w = float(vec4((((_LightColor0.w * tmpvar_97) * atten) * o_i0.Alpha)));
  c = c_i0_i1;
  c.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_FragData[0] = c.xyzw;
}

