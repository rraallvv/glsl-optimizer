struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
struct Input {
  vec2 uv_MainTex;
  vec3 viewDir;
};
struct v2f_surf {
  vec4 pos;
  float fog;
  vec2 hip_pack0;
  vec3 viewDir;
  vec4 hip_screen;
  vec3 normal;
};
uniform sampler2D _LightBuffer;
uniform sampler2D _MainTex;
uniform vec4 _RimColor;
uniform float _RimPower;
uniform vec4 unity_Ambient;
varying vec4 xlv_FOG;
void main ()
{
  v2f_surf xlt_IN;
  xlt_IN.pos = vec4(0.000000, 0.000000, 0.000000, 0.000000);
  xlt_IN.fog = xlv_FOG.x;
  xlt_IN.hip_pack0 = gl_TexCoord[0].xy;
  xlt_IN.viewDir = gl_TexCoord[1].xyz;
  xlt_IN.hip_screen = gl_TexCoord[2].xyzw;
  xlt_IN.normal = gl_TexCoord[3].xyz;
  v2f_surf IN;
  IN = xlt_IN;
  Input surfIN;
  SurfaceOutput o;
  vec4 light;
  vec4 col;
  surfIN.uv_MainTex = xlt_IN.hip_pack0.xy;
  surfIN.viewDir = xlt_IN.viewDir;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  o.Normal = xlt_IN.normal;
  Input IN_i0;
  IN_i0 = surfIN;
  SurfaceOutput o_i0;
  o_i0 = o;
  vec4 tmpvar_39;
  tmpvar_39 = texture2D (_MainTex, IN_i0.uv_MainTex);
  o_i0.Albedo = tmpvar_39.xyz;
  vec3 tmpvar_41;
  tmpvar_41 = normalize (IN_i0.viewDir);
  float tmpvar_42;
  tmpvar_42 = dot (tmpvar_41, o_i0.Normal);
  float tmpvar_45;
  tmpvar_45 = clamp (tmpvar_42, 0.000000, 1.000000);
  float tmpvar_47;
  tmpvar_47 = pow ((1.000000 - tmpvar_45), _RimPower);
  o_i0.Emission = (_RimColor.xyz * tmpvar_47);
  o = o_i0;
  vec4 tmpvar_49;
  tmpvar_49 = texture2DProj (_LightBuffer, IN.hip_screen);
  light = tmpvar_49;
  vec4 tmpvar_51;
  tmpvar_51 = log2 (light);
  vec4 tmpvar_52;
  tmpvar_52 = -(tmpvar_51);
  light = tmpvar_52;
  light.xyz = (tmpvar_52.xyz + unity_Ambient.xyz).xyz;
  vec4 c;
  c.xyz = (o.Albedo * light.xyz).xyz;
  c.w = float(vec4(o.Alpha));
  col = c;
  col.xyz = (c.xyz + o.Emission).xyz;
  gl_FragData[0] = col.xyzw;
}

