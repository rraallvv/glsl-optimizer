struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
struct Input {
  vec2 uv_MainTex;
  vec2 uv_Illum;
};
struct v2f_surf {
  vec4 pos;
  vec3 normal;
};
uniform float _Shininess;
uniform sampler2D _MainTex;
uniform sampler2D _Illum;
uniform vec4 _Color;
void main ()
{
  v2f_surf xlt_IN;
  xlt_IN.pos = vec4(0.000000, 0.000000, 0.000000, 0.000000);
  xlt_IN.normal = gl_TexCoord[0].xyz;
  vec4 res;
  Input surfIN;
  SurfaceOutput o;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  o.Normal = xlt_IN.normal;
  Input IN_i0;
  IN_i0 = surfIN;
  SurfaceOutput o_i0;
  o_i0 = o;
  vec4 c;
  vec4 tex;
  vec4 tmpvar_24;
  tmpvar_24 = texture2D (_MainTex, IN_i0.uv_MainTex);
  tex = tmpvar_24;
  vec4 tmpvar_26;
  tmpvar_26 = (tmpvar_24 * _Color);
  c = tmpvar_26;
  o_i0.Albedo = tmpvar_26.xyz;
  vec4 tmpvar_28;
  tmpvar_28 = texture2D (_Illum, IN_i0.uv_Illum);
  o_i0.Emission = (c.xyz * tmpvar_28.w);
  o_i0.Gloss = tex.w;
  o_i0.Alpha = c.w;
  o_i0.Specular = _Shininess;
  o = o_i0;
  res.xyz = ((o_i0.Normal * vec3(0.500000, 0.500000, -0.500000)) + 0.500000).xyz;
  res.w = float(vec4(o_i0.Specular));
  gl_FragData[0] = res.xyzw;
}

