struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
struct Input {
  vec2 uv_MainTex;
  vec4 color;
};
struct v2f_surf {
  vec4 pos;
  float fog;
  vec2 hip_pack0;
  vec4 lop_color;
  vec3 lightDir;
  vec3 viewDir;
};
uniform sampler2D _BumpMap;
uniform vec4 _Color;
uniform sampler2D _GlossMap;
uniform vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform float _Shininess;
varying vec4 xlv_FOG;
void main ()
{
  v2f_surf xlt_IN;
  xlt_IN.pos = vec4 (0.000000, 0.000000, 0.000000, 0.000000);
  xlt_IN.fog = xlv_FOG.x;
  vec2 tmpvar_3;
  tmpvar_3.xy = vec2(gl_TexCoord[0]);
  xlt_IN.hip_pack0 = tmpvar_3;
  vec4 tmpvar_5;
  tmpvar_5.xyzw = gl_Color;
  xlt_IN.lop_color = tmpvar_5;
  vec3 tmpvar_7;
  tmpvar_7.xyz = vec3(gl_TexCoord[1]);
  xlt_IN.lightDir = tmpvar_7;
  vec3 tmpvar_9;
  tmpvar_9.xyz = vec3(gl_TexCoord[2]);
  xlt_IN.viewDir = tmpvar_9;
  v2f_surf IN;
  IN = xlt_IN;
  Input surfIN;
  SurfaceOutput o;
  vec3 lightDir;
  vec4 c;
  surfIN.uv_MainTex = xlt_IN.hip_pack0.xy;
  surfIN.color = xlt_IN.lop_color;
  o.Albedo = vec3 (0.000000, 0.000000, 0.000000);
  o.Emission = vec3 (0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  Input IN_i0;
  IN_i0 = surfIN;
  SurfaceOutput o_i0;
  o_i0 = o;
  vec4 tmpvar_55;
  tmpvar_55 = texture2D (_MainTex, IN_i0.uv_MainTex);
  o_i0.Albedo = (tmpvar_55.xyz * IN_i0.color.xyz);
  vec4 tmpvar_58;
  tmpvar_58 = texture2D (_GlossMap, IN_i0.uv_MainTex);
  o_i0.Gloss = tmpvar_58.w;
  o_i0.Alpha = _Color.w;
  o_i0.Specular = _Shininess;
  vec4 tmpvar_62;
  tmpvar_62 = texture2D (_BumpMap, IN_i0.uv_MainTex);
  vec4 normal;
  normal.xy = ((tmpvar_62.wy * 2.000000) - 1.000000);
  float tmpvar_66;
  tmpvar_66 = sqrt (((1.000000 - (normal.x * normal.x)) - (normal.y * normal.y)));
  normal.z = tmpvar_66;
  vec3 tmpvar_68;
  tmpvar_68.xyz = vec3(normal);
  o_i0.Normal = tmpvar_68;
  o = o_i0;
  lightDir = IN.lightDir;
  vec3 tmpvar_71;
  tmpvar_71.xyz = IN.viewDir;
  vec3 tmpvar_72;
  tmpvar_72 = normalize (tmpvar_71);
  SurfaceOutput s;
  s = o;
  vec3 lightDir_i0;
  lightDir_i0 = lightDir;
  vec3 h;
  float diff;
  vec4 c_i0_i1;
  vec3 tmpvar_75;
  tmpvar_75 = normalize ((lightDir_i0 + tmpvar_72));
  h = tmpvar_75;
  float tmpvar_77;
  tmpvar_77 = dot (s.Normal, lightDir_i0);
  float tmpvar_78;
  tmpvar_78 = max (0.000000, tmpvar_77);
  diff = tmpvar_78;
  float tmpvar_80;
  tmpvar_80 = dot (s.Normal, h);
  float tmpvar_81;
  tmpvar_81 = max (0.000000, tmpvar_80);
  float tmpvar_83;
  tmpvar_83 = pow (tmpvar_81, (s.Specular * 128.000000));
  float tmpvar_84;
  tmpvar_84 = (tmpvar_83 * s.Gloss);
  c_i0_i1.xyz = ((((s.Albedo * _LightColor0.xyz) * diff) + (_LightColor0.xyz * tmpvar_84)) * 2.000000);
  c_i0_i1.w = ((_LightColor0.w * tmpvar_84) * s.Alpha);
  c = c_i0_i1;
  c.w = 0.000000;
  vec4 tmpvar_13;
  tmpvar_13.xyzw = c;
  gl_FragData[0] = tmpvar_13;
}

