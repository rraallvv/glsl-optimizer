struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
varying vec4 xlv_FOG;
uniform float _Shininess;
uniform sampler2D _MainTex;
uniform vec4 _LightColor0;
uniform sampler2D _GlossMap;
uniform vec4 _Color;
uniform sampler2D _BumpMap;
void main ()
{
  vec3 tmpvar_93;
  tmpvar_93 = gl_TexCoord[1].xyz;
  vec4 c;
  SurfaceOutput o;
  vec2 tmpvar_101;
  tmpvar_101 = gl_TexCoord[0].xy;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  SurfaceOutput o_i0;
  o_i0 = o;
  o_i0.Albedo = (texture2D (_MainTex, tmpvar_101).xyz * gl_Color.xyz);
  o_i0.Gloss = texture2D (_GlossMap, tmpvar_101).w;
  o_i0.Alpha = _Color.w;
  o_i0.Specular = _Shininess;
  vec4 normal;
  normal.xy = ((texture2D (_BumpMap, tmpvar_101).wy * 2.000000) - 1.000000).xy;
  normal.z = float(vec3(sqrt (((1.000000 - (normal.x * normal.x)) - (normal.y * normal.y)))));
  o_i0.Normal = normal.xyz;
  o = o_i0;
  vec4 c_i0_i1;
  float tmpvar_84;
  tmpvar_84 = (pow (max (0.000000, dot (o_i0.Normal, normalize ((tmpvar_93 + normalize (gl_TexCoord[2].xyz))))), (o_i0.Specular * 128.000000)) * o_i0.Gloss);
  c_i0_i1.xyz = ((((o_i0.Albedo * _LightColor0.xyz) * max (0.000000, dot (o_i0.Normal, tmpvar_93))) + (_LightColor0.xyz * tmpvar_84)) * 2.000000).xyz;
  c_i0_i1.w = float(vec4(((_LightColor0.w * tmpvar_84) * o_i0.Alpha)));
  c = c_i0_i1;
  c.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_FragData[0] = c.xyzw;
}

