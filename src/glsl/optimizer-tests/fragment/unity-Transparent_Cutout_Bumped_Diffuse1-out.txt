struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
struct Input {
  vec2 uv_MainTex;
  vec2 uv_BumpMap;
};
struct v2f_surf {
  vec4 pos;
  float fog;
  vec2 hip_pack0;
  vec4 hip_screen;
};
varying vec4 xlv_FOG;
uniform vec4 unity_Ambient;
uniform sampler2D _MainTex;
uniform sampler2D _LightBuffer;
uniform float _Cutoff;
uniform vec4 _Color;
uniform sampler2D _BumpMap;
void main ()
{
  v2f_surf xlt_IN;
  xlt_IN.pos = vec4(0.000000, 0.000000, 0.000000, 0.000000);
  xlt_IN.fog = xlv_FOG.x;
  xlt_IN.hip_pack0 = gl_TexCoord[0].xy;
  xlt_IN.hip_screen = gl_TexCoord[1].xyzw;
  v2f_surf IN;
  IN = xlt_IN;
  vec4 light;
  SurfaceOutput o;
  Input surfIN;
  surfIN.uv_MainTex = xlt_IN.hip_pack0.xy;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  Input IN_i0;
  IN_i0 = surfIN;
  SurfaceOutput o_i0;
  o_i0 = o;
  vec4 tmpvar_37;
  tmpvar_37 = texture2D (_MainTex, surfIN.uv_MainTex);
  vec4 tmpvar_38;
  tmpvar_38 = (tmpvar_37 * _Color);
  o_i0.Albedo = tmpvar_38.xyz;
  o_i0.Alpha = tmpvar_38.w;
  vec4 tmpvar_41;
  tmpvar_41 = texture2D (_BumpMap, IN_i0.uv_BumpMap);
  vec4 normal;
  normal.xy = ((tmpvar_41.wy * 2.000000) - 1.000000).xy;
  float tmpvar_45;
  tmpvar_45 = sqrt (((1.000000 - (normal.x * normal.x)) - (normal.y * normal.y)));
  normal.z = float(vec3(tmpvar_45));
  o_i0.Normal = normal.xyz;
  o = o_i0;
  float x;
  x = (o_i0.Alpha - _Cutoff);
  if ((x < 0.000000)) {
    discard;
  };
  vec4 tmpvar_49;
  tmpvar_49 = texture2DProj (_LightBuffer, IN.hip_screen);
  light = tmpvar_49;
  vec4 tmpvar_51;
  tmpvar_51 = log2 (tmpvar_49);
  vec4 tmpvar_52;
  tmpvar_52 = -(tmpvar_51);
  light = tmpvar_52;
  light.xyz = (tmpvar_52.xyz + unity_Ambient.xyz).xyz;
  vec4 c_i0;
  c_i0.xyz = (o.Albedo * light.xyz).xyz;
  c_i0.w = float(vec4(o.Alpha));
  gl_FragData[0] = c_i0.xyzw;
}

