struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
struct Input {
  vec2 uv_MainTex;
  vec2 uv_BumpMap;
  vec3 worldRefl;
  vec3 TtoW0;
  vec3 TtoW1;
  vec3 TtoW2;
};
struct v2f_surf {
  vec4 pos;
  float fog;
  vec4 hip_pack0;
  vec4 hip_screen;
  vec4 TtoW0;
  vec4 TtoW1;
  vec4 TtoW2;
  vec3 hip_lmapFade;
};
uniform sampler2D _BumpMap;
uniform vec4 _Color;
uniform samplerCube _Cube;
uniform sampler2D _LightBuffer;
uniform sampler2D _MainTex;
uniform vec4 _ReflectColor;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
varying vec4 xlv_FOG;
void main ()
{
  v2f_surf xlt_IN;
  xlt_IN.pos = vec4(0.000000, 0.000000, 0.000000, 0.000000);
  xlt_IN.fog = xlv_FOG.x;
  xlt_IN.hip_pack0 = gl_TexCoord[0].xyzw;
  xlt_IN.hip_screen = gl_TexCoord[1].xyzw;
  xlt_IN.TtoW0 = gl_TexCoord[2].xyzw;
  xlt_IN.TtoW1 = gl_TexCoord[3].xyzw;
  xlt_IN.TtoW2 = gl_TexCoord[4].xyzw;
  xlt_IN.hip_lmapFade = gl_TexCoord[5].xyz;
  v2f_surf IN;
  IN = xlt_IN;
  Input surfIN;
  SurfaceOutput o;
  vec4 light;
  vec3 lmFull;
  vec3 lmIndirect;
  vec4 col;
  surfIN.uv_MainTex = xlt_IN.hip_pack0.xy;
  surfIN.uv_BumpMap = xlt_IN.hip_pack0.zw;
  vec3 tmpvar_56;
  tmpvar_56.x = float(xlt_IN.TtoW0.www);
  tmpvar_56.y = float(xlt_IN.TtoW1.www);
  tmpvar_56.z = float(xlt_IN.TtoW2.www);
  surfIN.worldRefl = tmpvar_56;
  surfIN.TtoW0 = xlt_IN.TtoW0.xyz;
  surfIN.TtoW1 = xlt_IN.TtoW1.xyz;
  surfIN.TtoW2 = xlt_IN.TtoW2.xyz;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  Input IN_i0;
  IN_i0 = surfIN;
  SurfaceOutput o_i0;
  o_i0 = o;
  vec4 tex;
  vec4 tmpvar_66;
  tmpvar_66 = texture2D (_MainTex, IN_i0.uv_MainTex);
  tex = tmpvar_66;
  o_i0.Albedo = (tmpvar_66 * _Color).xyz;
  vec4 tmpvar_70;
  tmpvar_70 = texture2D (_BumpMap, IN_i0.uv_BumpMap);
  vec4 normal;
  normal.xy = ((tmpvar_70.wy * 2.000000) - 1.000000).xy;
  float tmpvar_74;
  tmpvar_74 = sqrt (((1.000000 - (normal.x * normal.x)) - (normal.y * normal.y)));
  normal.z = float(vec3(tmpvar_74));
  o_i0.Normal = normal.xyz;
  float tmpvar_78;
  tmpvar_78 = dot (IN_i0.TtoW0, o_i0.Normal);
  float tmpvar_79;
  tmpvar_79 = dot (IN_i0.TtoW1, o_i0.Normal);
  float tmpvar_80;
  tmpvar_80 = dot (IN_i0.TtoW2, o_i0.Normal);
  vec3 tmpvar_81;
  tmpvar_81.x = float(vec3(tmpvar_78));
  tmpvar_81.y = float(vec3(tmpvar_79));
  tmpvar_81.z = float(vec3(tmpvar_80));
  vec3 tmpvar_82;
  tmpvar_82 = reflect (IN_i0.worldRefl, tmpvar_81);
  vec4 tmpvar_84;
  tmpvar_84 = textureCube (_Cube, tmpvar_82);
  vec4 tmpvar_86;
  tmpvar_86 = (tmpvar_84 * tex.w);
  o_i0.Emission = (tmpvar_86.xyz * _ReflectColor.xyz);
  o_i0.Alpha = (tmpvar_86.w * _ReflectColor.w);
  o = o_i0;
  vec4 tmpvar_89;
  tmpvar_89 = texture2DProj (_LightBuffer, IN.hip_screen);
  light = tmpvar_89;
  vec4 tmpvar_91;
  tmpvar_91 = log2 (light);
  light = -(tmpvar_91);
  vec4 tmpvar_93;
  tmpvar_93 = texture2D (unity_Lightmap, IN.hip_lmapFade.xy);
  lmFull = (2.000000 * tmpvar_93.xyz);
  vec4 tmpvar_97;
  tmpvar_97 = texture2D (unity_LightmapInd, IN.hip_lmapFade.xy);
  lmIndirect = (2.000000 * tmpvar_97.xyz);
  float tmpvar_103;
  tmpvar_103 = clamp (IN.hip_lmapFade.z, 0.000000, 1.000000);
  vec3 tmpvar_105;
  tmpvar_105 = mix (lmIndirect, lmFull, vec3(tmpvar_103));
  light.xyz = (light.xyz + tmpvar_105).xyz;
  vec4 c_i0;
  c_i0.xyz = (o.Albedo * light.xyz).xyz;
  c_i0.w = float(vec4(o.Alpha));
  col = c_i0;
  col.xyz = (c_i0.xyz + o.Emission).xyz;
  gl_FragData[0] = col.xyzw;
}

