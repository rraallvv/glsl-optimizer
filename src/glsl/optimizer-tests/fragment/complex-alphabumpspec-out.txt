struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
struct Input {
  vec2 uv_MainTex;
  vec2 uv_BumpMap;
};
struct v2f_surf {
  vec4 pos;
  float fog;
  vec4 hip_pack0;
  vec3 viewDir;
  vec3 lightDir;
  vec3 vlight;
};
uniform sampler2D _BumpMap;
uniform vec4 _Color;
uniform vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform float _Shininess;
uniform vec4 _SpecColor;
in vec4 xlv_FOG;
void main ()
{
  v2f_surf xlt_IN;
  xlt_IN .pos  = vec4 (0.000000, 0.000000, 0.000000, 0.000000) ;
  xlt_IN .fog  = xlv_FOG .x;
  vec4 tmpvar_3;
  tmpvar_3 .xyzw = gl_TexCoord [0] ;
  xlt_IN .hip_pack0  = tmpvar_3 ;
  vec3 tmpvar_5;
  tmpvar_5 .xyz = vec3(gl_TexCoord [1] );
  xlt_IN .viewDir  = tmpvar_5 ;
  vec3 tmpvar_7;
  tmpvar_7 .xyz = vec3(gl_TexCoord [2] );
  xlt_IN .lightDir  = tmpvar_7 ;
  vec3 tmpvar_9;
  tmpvar_9 .xyz = vec3(gl_TexCoord [3] );
  xlt_IN .vlight  = tmpvar_9 ;
  v2f_surf IN;
  IN  = xlt_IN ;
  Input surfIN;
  SurfaceOutput o;
  vec4 c;
  surfIN .uv_MainTex  = xlt_IN .hip_pack0 .xy;
  surfIN .uv_BumpMap  = xlt_IN .hip_pack0 .zw;
  o .Albedo  = vec3 (0.000000, 0.000000, 0.000000) ;
  o .Emission  = vec3 (0.000000, 0.000000, 0.000000) ;
  o .Specular  = 0.000000;
  o .Alpha  = 0.000000;
  o .Gloss  = 0.000000;
  Input IN;
  IN  = surfIN ;
  SurfaceOutput o;
  o  = o ;
  vec4 tmpvar_55;
  tmpvar_55  = texture2D (_MainTex , IN .uv_MainTex ) ;
  o .Albedo  = tmpvar_55 .xyz * _Color .xyz ;
  o .Gloss  = tmpvar_55 .w;
  o .Alpha  = tmpvar_55 .w * _Color .w ;
  o .Specular  = _Shininess ;
  vec4 tmpvar_61;
  tmpvar_61  = texture2D (_BumpMap , IN .uv_BumpMap ) ;
  vec4 normal;
  normal .xy = tmpvar_61 .wy * 2.000000  - 1.000000 ;
  float tmpvar_65;
  tmpvar_65  = sqrt (1.000000 - normal .x * normal .x   - normal .y * normal .y  ) ;
  normal .z = tmpvar_65 ;
  vec3 tmpvar_67;
  tmpvar_67 .xyz = vec3(normal );
  o .Normal  = tmpvar_67 ;
  o  = o ;
  vec3 tmpvar_69;
  tmpvar_69 .xyz = IN .viewDir ;
  vec3 tmpvar_70;
  tmpvar_70  = normalize (tmpvar_69 ) ;
  SurfaceOutput s;
  s  = o ;
  vec3 lightDir;
  lightDir  = IN .lightDir ;
  vec3 h;
  float diff;
  vec4 c;
  vec3 tmpvar_73;
  tmpvar_73  = normalize (lightDir  + tmpvar_70  ) ;
  h  = tmpvar_73 ;
  float tmpvar_75;
  tmpvar_75  = dot (s .Normal , lightDir ) ;
  float tmpvar_76;
  tmpvar_76  = max (0.000000, tmpvar_75 ) ;
  diff  = tmpvar_76 ;
  float tmpvar_78;
  tmpvar_78  = dot (s .Normal , h ) ;
  float tmpvar_79;
  tmpvar_79  = max (0.000000, tmpvar_78 ) ;
  float tmpvar_81;
  tmpvar_81  = pow (tmpvar_79 , s .Specular  * 128.000000 ) ;
  float tmpvar_82;
  tmpvar_82  = tmpvar_81  * s .Gloss  ;
  c .xyz = s .Albedo  * _LightColor0 .xyz  * diff   + _LightColor0 .xyz * _SpecColor .xyz  * tmpvar_82    * 2.000000 ;
  c .w = s .Alpha  + _LightColor0 .w * _SpecColor .w  * tmpvar_82   ;
  c  = c ;
  c .xyz = c .xyz + o .Albedo  * IN .vlight   ;
  c .w = o .Alpha ;
  vec4 tmpvar_13;
  tmpvar_13 .xyzw = c ;
  gl_FragData [0]  = tmpvar_13 ;
}

