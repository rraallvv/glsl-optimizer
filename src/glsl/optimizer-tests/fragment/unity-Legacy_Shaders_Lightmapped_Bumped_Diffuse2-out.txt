struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
varying vec4 xlv_FOG;
uniform vec4 unity_Ambient;
uniform sampler2D _MainTex;
uniform sampler2D _LightMap;
uniform sampler2D _LightBuffer;
uniform vec4 _Color;
uniform sampler2D _BumpMap;
void main ()
{
  vec4 tmpvar_69;
  tmpvar_69 = gl_TexCoord[0].xyzw;
  vec4 col;
  vec4 light;
  SurfaceOutput o;
  vec2 tmpvar_76;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  SurfaceOutput o_i0;
  o_i0 = o;
  o_i0.Albedo = (texture2D (_MainTex, tmpvar_69.xy).xyz * _Color.xyz);
  vec4 tmpvar_44;
  tmpvar_44 = texture2D (_LightMap, tmpvar_69.zw);
  o_i0.Emission = (tmpvar_44.xyz * o_i0.Albedo.xyz);
  o_i0.Alpha = (tmpvar_44.w * _Color.w);
  vec4 normal;
  normal.xy = ((texture2D (_BumpMap, tmpvar_76).wy * 2.000000) - 1.000000).xy;
  normal.z = float(vec3(sqrt (((1.000000 - (normal.x * normal.x)) - (normal.y * normal.y)))));
  o_i0.Normal = normal.xyz;
  o = o_i0;
  vec4 tmpvar_59;
  tmpvar_59 = -(log2 (texture2DProj (_LightBuffer, gl_TexCoord[1].xyzw)));
  light = tmpvar_59;
  light.xyz = (tmpvar_59.xyz + unity_Ambient.xyz).xyz;
  vec4 c;
  c.xyz = (o_i0.Albedo * light.xyz).xyz;
  c.w = float(vec4(o_i0.Alpha));
  col = c;
  col.xyz = (c.xyz + o_i0.Emission).xyz;
  gl_FragData[0] = col.xyzw;
}

