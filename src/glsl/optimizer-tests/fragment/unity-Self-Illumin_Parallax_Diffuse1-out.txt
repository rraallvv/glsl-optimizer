struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
struct Input {
  vec2 uv_MainTex;
  vec2 uv_BumpMap;
  vec2 uv_Illum;
  vec3 viewDir;
};
struct v2f_surf {
  vec4 pos;
  float fog;
  vec4 hip_pack0;
  vec3 viewDir;
  vec3 lightDir;
  vec2 _LightCoord;
};
varying vec4 xlv_FOG;
uniform sampler2D _ParallaxMap;
uniform float _Parallax;
uniform sampler2D _MainTex;
uniform sampler2D _LightTexture0;
uniform vec4 _LightColor0;
uniform sampler2D _Illum;
uniform vec4 _Color;
uniform sampler2D _BumpMap;
void main ()
{
  v2f_surf xlt_IN;
  xlt_IN.pos = vec4(0.000000, 0.000000, 0.000000, 0.000000);
  xlt_IN.fog = xlv_FOG.x;
  xlt_IN.hip_pack0 = gl_TexCoord[0].xyzw;
  xlt_IN.viewDir = gl_TexCoord[1].xyz;
  xlt_IN.lightDir = gl_TexCoord[2].xyz;
  xlt_IN._LightCoord = gl_TexCoord[3].xy;
  v2f_surf IN;
  IN = xlt_IN;
  vec4 c;
  vec3 lightDir;
  SurfaceOutput o;
  Input surfIN;
  surfIN.uv_MainTex = xlt_IN.hip_pack0.xy;
  surfIN.uv_BumpMap = xlt_IN.hip_pack0.zw;
  surfIN.viewDir = xlt_IN.viewDir;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  Input IN_i0;
  IN_i0 = surfIN;
  SurfaceOutput o_i0;
  o_i0 = o;
  vec4 c_i0;
  vec4 tmpvar_65;
  tmpvar_65 = texture2D (_ParallaxMap, IN_i0.uv_BumpMap);
  vec2 __retval_i0;
  float h_i0;
  vec3 v;
  h_i0 = ((tmpvar_65.w * _Parallax) - (_Parallax / 2.000000));
  vec3 tmpvar_70;
  tmpvar_70 = normalize (IN_i0.viewDir);
  v = tmpvar_70;
  v.z = float(vec3((tmpvar_70.z + 0.420000)));
  __retval_i0 = (h_i0 * (v.xy / v.z));
  IN_i0.uv_MainTex = (IN_i0.uv_MainTex + __retval_i0);
  IN_i0.uv_BumpMap = (IN_i0.uv_BumpMap + __retval_i0);
  IN_i0.uv_Illum = (IN_i0.uv_Illum + __retval_i0);
  vec4 tmpvar_77;
  tmpvar_77 = texture2D (_MainTex, IN_i0.uv_MainTex);
  vec4 tmpvar_78;
  tmpvar_78 = (tmpvar_77 * _Color);
  c_i0 = tmpvar_78;
  o_i0.Albedo = tmpvar_78.xyz;
  vec4 tmpvar_80;
  tmpvar_80 = texture2D (_Illum, IN_i0.uv_Illum);
  o_i0.Emission = (c_i0.xyz * tmpvar_80.w);
  o_i0.Alpha = c_i0.w;
  vec4 tmpvar_83;
  tmpvar_83 = texture2D (_BumpMap, IN_i0.uv_BumpMap);
  vec4 normal;
  normal.xy = ((tmpvar_83.wy * 2.000000) - 1.000000).xy;
  float tmpvar_87;
  tmpvar_87 = sqrt (((1.000000 - (normal.x * normal.x)) - (normal.y * normal.y)));
  normal.z = float(vec3(tmpvar_87));
  o_i0.Normal = normal.xyz;
  o = o_i0;
  lightDir = IN.lightDir;
  vec4 tmpvar_92;
  tmpvar_92 = texture2D (_LightTexture0, IN._LightCoord);
  SurfaceOutput s;
  s = o;
  float atten;
  atten = tmpvar_92.w;
  vec4 c_i0_i1;
  float tmpvar_95;
  tmpvar_95 = dot (s.Normal, lightDir);
  float tmpvar_96;
  tmpvar_96 = max (0.000000, tmpvar_95);
  c_i0_i1.xyz = ((s.Albedo * _LightColor0.xyz) * ((tmpvar_96 * atten) * 2.000000)).xyz;
  c_i0_i1.w = float(vec4(s.Alpha));
  c = c_i0_i1;
  c.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_FragData[0] = c.xyzw;
}

