struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
varying vec4 xlv_FOG;
uniform vec4 _SpecColor;
uniform float _Shininess;
uniform vec4 _ReflectColor;
uniform sampler2D _MainTex;
uniform sampler2D _LightTextureB0;
uniform sampler2D _LightTexture0;
uniform vec4 _LightColor0;
uniform samplerCube _Cube;
uniform vec4 _Color;
void main ()
{
  vec4 tmpvar_103;
  tmpvar_103 = gl_TexCoord[4].xyzw;
  vec4 c;
  SurfaceOutput o;
  vec3 tmpvar_112;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  o.Normal = gl_TexCoord[1].xyz;
  SurfaceOutput o_i0;
  o_i0 = o;
  vec4 tmpvar_56;
  tmpvar_56 = texture2D (_MainTex, gl_TexCoord[0].xy);
  o_i0.Albedo = (tmpvar_56 * _Color).xyz;
  o_i0.Gloss = tmpvar_56.w;
  o_i0.Specular = _Shininess;
  vec4 tmpvar_64;
  tmpvar_64 = (textureCube (_Cube, tmpvar_112) * tmpvar_56.w);
  o_i0.Emission = (tmpvar_64.xyz * _ReflectColor.xyz);
  o_i0.Alpha = (tmpvar_64.w * _ReflectColor.w);
  o = o_i0;
  vec3 tmpvar_68;
  tmpvar_68 = normalize (gl_TexCoord[2].xyz);
  vec3 LightCoord_i0;
  LightCoord_i0 = tmpvar_103.xyz;
  float atten;
  atten = ((float((tmpvar_103.z > 0.000000)) * texture2D (_LightTexture0, ((tmpvar_103.xy / tmpvar_103.w) + 0.500000)).w) * texture2D (_LightTextureB0, vec2(dot (LightCoord_i0, LightCoord_i0))).w);
  vec4 c_i0_i1;
  float tmpvar_92;
  tmpvar_92 = (pow (max (0.000000, dot (o_i0.Normal, normalize ((tmpvar_68 + normalize (gl_TexCoord[3].xyz))))), (o_i0.Specular * 128.000000)) * o_i0.Gloss);
  c_i0_i1.xyz = ((((o_i0.Albedo * _LightColor0.xyz) * max (0.000000, dot (o_i0.Normal, tmpvar_68))) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_92)) * (atten * 2.000000)).xyz;
  c_i0_i1.w = float(vec4((o_i0.Alpha + (((_LightColor0.w * _SpecColor.w) * tmpvar_92) * atten))));
  c = c_i0_i1;
  c.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_FragData[0] = c.xyzw;
}

