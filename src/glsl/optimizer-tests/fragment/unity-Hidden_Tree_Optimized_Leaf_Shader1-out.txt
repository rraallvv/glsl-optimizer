struct LeafSurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  vec3 Translucency;
  float Specular;
  float Gloss;
  float Alpha;
};
struct Input {
  vec2 uv_MainTex;
  vec4 color;
};
struct v2f_surf {
  vec4 pos;
  float fog;
  vec2 hip_pack0;
  vec4 lop_color;
  vec3 lightDir;
  vec3 viewDir;
  vec3 _LightCoord;
};
varying vec4 xlv_FOG;
uniform sampler2D _TranslucencyMap;
uniform sampler2D _MainTex;
uniform sampler2D _LightTextureB0;
uniform samplerCube _LightTexture0;
uniform vec4 _LightColor0;
uniform float _Cutoff;
uniform sampler2D _BumpSpecMap;
void main ()
{
  v2f_surf xlt_IN;
  xlt_IN.pos = vec4(0.000000, 0.000000, 0.000000, 0.000000);
  xlt_IN.fog = xlv_FOG.x;
  xlt_IN.hip_pack0 = gl_TexCoord[0].xy;
  xlt_IN.lop_color = gl_Color.xyzw;
  xlt_IN.lightDir = gl_TexCoord[1].xyz;
  xlt_IN.viewDir = gl_TexCoord[2].xyz;
  xlt_IN._LightCoord = gl_TexCoord[3].xyz;
  v2f_surf IN;
  IN = xlt_IN;
  vec4 c;
  vec3 lightDir;
  LeafSurfaceOutput o;
  Input surfIN;
  surfIN.uv_MainTex = xlt_IN.hip_pack0.xy;
  surfIN.color = xlt_IN.lop_color;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  Input IN_i0;
  IN_i0 = surfIN;
  LeafSurfaceOutput o_i0;
  o_i0 = o;
  vec4 c_i0;
  vec4 tmpvar_71;
  tmpvar_71 = texture2D (_MainTex, surfIN.uv_MainTex);
  c_i0 = tmpvar_71;
  o_i0.Albedo = (tmpvar_71.xyz * IN_i0.color.xyz);
  vec4 tmpvar_74;
  tmpvar_74 = texture2D (_TranslucencyMap, IN_i0.uv_MainTex);
  o_i0.Translucency = tmpvar_74.xyz;
  o_i0.Gloss = tmpvar_74.w;
  o_i0.Alpha = (c_i0.w * IN_i0.color.w);
  vec4 tmpvar_79;
  tmpvar_79 = texture2D (_BumpSpecMap, IN_i0.uv_MainTex);
  o_i0.Specular = tmpvar_79.x;
  vec4 normal;
  normal.xy = ((tmpvar_79.wy * 2.000000) - 1.000000).xy;
  float tmpvar_85;
  tmpvar_85 = sqrt (((1.000000 - (normal.x * normal.x)) - (normal.y * normal.y)));
  normal.z = float(vec3(tmpvar_85));
  o_i0.Normal = normal.xyz;
  o = o_i0;
  float x;
  x = (o_i0.Alpha - _Cutoff);
  if ((x < 0.000000)) {
    discard;
  };
  vec3 tmpvar_89;
  tmpvar_89 = IN.lightDir;
  lightDir = tmpvar_89;
  vec3 tmpvar_90;
  tmpvar_90 = normalize (tmpvar_89);
  lightDir = tmpvar_90;
  vec3 tmpvar_93;
  tmpvar_93 = normalize (IN.viewDir.xyz);
  float tmpvar_94;
  tmpvar_94 = dot (IN._LightCoord, IN._LightCoord);
  vec4 tmpvar_97;
  tmpvar_97 = texture2D (_LightTextureB0, vec2(tmpvar_94));
  vec4 tmpvar_98;
  tmpvar_98 = textureCube (_LightTexture0, IN._LightCoord);
  LeafSurfaceOutput s;
  s = o;
  vec3 lightDir_i0;
  lightDir_i0 = lightDir;
  float atten;
  atten = (tmpvar_97.w * tmpvar_98.w);
  vec4 c_i0_i1;
  vec3 col;
  vec3 translucencyColor;
  float trans;
  float spec;
  float diff;
  vec3 h;
  vec3 tmpvar_101;
  tmpvar_101 = normalize ((lightDir + tmpvar_93));
  h = tmpvar_101;
  float tmpvar_103;
  tmpvar_103 = dot (s.Normal, lightDir_i0);
  diff = tmpvar_103;
  float tmpvar_105;
  tmpvar_105 = dot (s.Normal, h);
  float tmpvar_106;
  tmpvar_106 = max (0.000000, tmpvar_105);
  float tmpvar_108;
  tmpvar_108 = pow (tmpvar_106, (s.Specular * 128.000000));
  spec = (tmpvar_108 * s.Gloss);
  float tmpvar_110;
  tmpvar_110 = max (0.000000, -(diff));
  trans = tmpvar_110;
  translucencyColor = ((s.Translucency * tmpvar_110) * 2.000000);
  float tmpvar_113;
  tmpvar_113 = max (0.000000, ((diff * 0.500000) + 0.500000));
  diff = tmpvar_113;
  col = (s.Albedo * (tmpvar_113 + translucencyColor));
  float tmpvar_116;
  tmpvar_116 = ceil (trans);
  float tmpvar_119;
  tmpvar_119 = clamp (tmpvar_116, 0.000000, 1.000000);
  vec3 tmpvar_121;
  tmpvar_121 = ((col + (spec * (1.000000 - tmpvar_119))) * _LightColor0.xyz);
  col = tmpvar_121;
  c_i0_i1.xyz = (tmpvar_121 * (atten * 2.000000)).xyz;
  c = c_i0_i1;
  c.w = float(vec4(o.Alpha));
  gl_FragData[0] = c.xyzw;
}

