varying vec4 xlv_FOG;
uniform sampler2D _TranslucencyMap;
uniform sampler2D _MainTex;
uniform sampler2D _LightTextureB0;
uniform samplerCube _LightTexture0;
uniform vec4 _LightColor0;
uniform float _Cutoff;
uniform sampler2D _BumpSpecMap;
void main ()
{
  vec4 tmpvar_5;
  tmpvar_5 = gl_Color.xyzw;
  vec3 tmpvar_7;
  tmpvar_7 = gl_TexCoord[1].xyz;
  vec3 tmpvar_9;
  tmpvar_9 = gl_TexCoord[2].xyz;
  vec3 tmpvar_11;
  tmpvar_11 = gl_TexCoord[3].xyz;
  vec4 c;
  vec2 tmpvar_65;
  tmpvar_65 = gl_TexCoord[0].xy;
  vec4 tmpvar_71;
  tmpvar_71 = texture2D (_MainTex, tmpvar_65);
  vec3 tmpvar_73;
  tmpvar_73 = (tmpvar_71.xyz * tmpvar_5.xyz);
  vec4 tmpvar_74;
  tmpvar_74 = texture2D (_TranslucencyMap, tmpvar_65);
  vec3 tmpvar_76;
  tmpvar_76 = tmpvar_74.xyz;
  float tmpvar_77;
  tmpvar_77 = tmpvar_74.w;
  float tmpvar_78;
  tmpvar_78 = (tmpvar_71.w * tmpvar_5.w);
  vec4 tmpvar_79;
  tmpvar_79 = texture2D (_BumpSpecMap, tmpvar_65);
  float tmpvar_81;
  tmpvar_81 = tmpvar_79.x;
  vec4 normal;
  normal.xy = ((tmpvar_79.wy * 2.0) - 1.0);
  normal.z = (vec3(sqrt (((1.0 - (normal.x * normal.x)) - (normal.y * normal.y))))).z;
  vec3 tmpvar_87;
  tmpvar_87 = normal.xyz;
  float x;
  x = (tmpvar_78 - _Cutoff);
  if ((x < 0.0)) {
    discard;
  };
  vec3 tmpvar_90;
  tmpvar_90 = normalize (tmpvar_7);
  vec4 c_i0_i1;
  float tmpvar_103;
  tmpvar_103 = dot (tmpvar_87, tmpvar_90);
  float tmpvar_110;
  tmpvar_110 = max (0.0, -(tmpvar_103));
  c_i0_i1.xyz = ((((tmpvar_73 * (max (0.0, ((tmpvar_103 * 0.5) + 0.5)) + ((tmpvar_76 * tmpvar_110) * 2.0))) + ((pow (max (0.0, dot (tmpvar_87, normalize ((tmpvar_90 + normalize (tmpvar_9.xyz))))), (tmpvar_81 * 128.0)) * tmpvar_77) * (1.0 - clamp (ceil (tmpvar_110), 0.0, 1.0)))) * _LightColor0.xyz) * ((texture2D (_LightTextureB0, vec2(dot (tmpvar_11, tmpvar_11))).w * textureCube (_LightTexture0, tmpvar_11).w) * 2.0)).xyz;
  c = c_i0_i1;
  c.w = (vec4(tmpvar_78)).w;
  gl_FragData[0] = c.xyzw;
}

