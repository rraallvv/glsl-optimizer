struct LeafSurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  vec3 Translucency;
  float Specular;
  float Gloss;
  float Alpha;
};
struct v2f_surf {
  vec4 pos;
  float fog;
  vec2 hip_pack0;
  vec4 lop_color;
  vec3 lightDir;
  vec3 viewDir;
};
varying vec4 xlv_FOG;
uniform sampler2D _TranslucencyMap;
uniform sampler2D _MainTex;
uniform vec4 _LightColor0;
uniform float _Cutoff;
uniform sampler2D _BumpSpecMap;
void main ()
{
  v2f_surf xlt_IN;
  xlt_IN.pos = vec4(0.000000, 0.000000, 0.000000, 0.000000);
  xlt_IN.fog = xlv_FOG.x;
  xlt_IN.hip_pack0 = gl_TexCoord[0].xy;
  xlt_IN.lop_color = gl_Color.xyzw;
  xlt_IN.lightDir = gl_TexCoord[1].xyz;
  xlt_IN.viewDir = gl_TexCoord[2].xyz;
  v2f_surf IN;
  IN = xlt_IN;
  vec4 c;
  LeafSurfaceOutput o;
  vec2 tmpvar_116;
  vec4 tmpvar_117;
  tmpvar_116 = xlt_IN.hip_pack0.xy;
  tmpvar_117 = xlt_IN.lop_color;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  LeafSurfaceOutput o_i0;
  o_i0 = o;
  vec4 tmpvar_69;
  tmpvar_69 = texture2D (_MainTex, tmpvar_116);
  o_i0.Albedo = (tmpvar_69.xyz * tmpvar_117.xyz);
  vec4 tmpvar_72;
  tmpvar_72 = texture2D (_TranslucencyMap, tmpvar_116);
  o_i0.Translucency = tmpvar_72.xyz;
  o_i0.Gloss = tmpvar_72.w;
  o_i0.Alpha = (tmpvar_69.w * tmpvar_117.w);
  vec4 tmpvar_77;
  tmpvar_77 = texture2D (_BumpSpecMap, tmpvar_116);
  o_i0.Specular = tmpvar_77.x;
  vec4 normal;
  normal.xy = ((tmpvar_77.wy * 2.000000) - 1.000000).xy;
  normal.z = float(vec3(sqrt (((1.000000 - (normal.x * normal.x)) - (normal.y * normal.y)))));
  o_i0.Normal = normal.xyz;
  o = o_i0;
  float x;
  x = (o_i0.Alpha - _Cutoff);
  if ((x < 0.000000)) {
    discard;
  };
  vec3 tmpvar_87;
  tmpvar_87 = IN.lightDir;
  vec4 c_i0_i1;
  float tmpvar_94;
  tmpvar_94 = dot (o.Normal, tmpvar_87);
  float tmpvar_101;
  tmpvar_101 = max (0.000000, -(tmpvar_94));
  c_i0_i1.xyz = ((((o.Albedo * (max (0.000000, ((tmpvar_94 * 0.500000) + 0.500000)) + ((o.Translucency * tmpvar_101) * 2.000000))) + ((pow (max (0.000000, dot (o.Normal, normalize ((tmpvar_87 + normalize (IN.viewDir.xyz))))), (o.Specular * 128.000000)) * o.Gloss) * (1.000000 - clamp (ceil (tmpvar_101), 0.000000, 1.000000)))) * _LightColor0.xyz) * 2.000000).xyz;
  c = c_i0_i1;
  c.w = float(vec4(o.Alpha));
  gl_FragData[0] = c.xyzw;
}

