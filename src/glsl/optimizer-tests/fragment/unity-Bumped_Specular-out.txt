struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
struct Input {
  vec2 uv_MainTex;
  vec2 uv_BumpMap;
};
struct v2f_surf {
  vec4 pos;
  float fog;
  vec4 hip_pack0;
  vec3 viewDir;
  vec3 lightDir;
  vec3 vlight;
  vec4 _ShadowCoord;
};
uniform sampler2D _BumpMap;
uniform vec4 _Color;
uniform vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _ShadowMapTexture;
uniform float _Shininess;
uniform vec4 _SpecColor;
varying vec4 xlv_FOG;
void main ()
{
  v2f_surf xlt_IN;
  xlt_IN.pos = vec4 (0.000000, 0.000000, 0.000000, 0.000000);
  xlt_IN.fog = xlv_FOG.x;
  vec4 tmpvar_3;
  tmpvar_3.xyzw = gl_TexCoord[0];
  xlt_IN.hip_pack0 = tmpvar_3;
  vec3 tmpvar_5;
  tmpvar_5.xyz = vec3(gl_TexCoord[1]);
  xlt_IN.viewDir = tmpvar_5;
  vec3 tmpvar_7;
  tmpvar_7.xyz = vec3(gl_TexCoord[2]);
  xlt_IN.lightDir = tmpvar_7;
  vec3 tmpvar_9;
  tmpvar_9.xyz = vec3(gl_TexCoord[3]);
  xlt_IN.vlight = tmpvar_9;
  vec4 tmpvar_11;
  tmpvar_11.xyzw = gl_TexCoord[4];
  xlt_IN._ShadowCoord = tmpvar_11;
  v2f_surf IN;
  IN = xlt_IN;
  Input surfIN;
  SurfaceOutput o;
  float atten;
  vec4 c;
  surfIN.uv_MainTex = xlt_IN.hip_pack0.xy;
  surfIN.uv_BumpMap = xlt_IN.hip_pack0.zw;
  o.Albedo = vec3 (0.000000, 0.000000, 0.000000);
  o.Emission = vec3 (0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  Input IN_i0;
  IN_i0 = surfIN;
  SurfaceOutput o_i0;
  o_i0 = o;
  vec4 tmpvar_59;
  tmpvar_59 = texture2D (_MainTex, IN_i0.uv_MainTex);
  o_i0.Albedo = (tmpvar_59.xyz * _Color.xyz);
  o_i0.Gloss = tmpvar_59.w;
  o_i0.Alpha = (tmpvar_59.w * _Color.w);
  o_i0.Specular = _Shininess;
  vec4 tmpvar_65;
  tmpvar_65 = texture2D (_BumpMap, IN_i0.uv_BumpMap);
  vec4 normal;
  normal.xy = ((tmpvar_65.wy * 2.000000) - 1.000000);
  float tmpvar_69;
  tmpvar_69 = sqrt (((1.000000 - (normal.x * normal.x)) - (normal.y * normal.y)));
  normal.z = tmpvar_69;
  vec3 tmpvar_71;
  tmpvar_71.xyz = vec3(normal);
  o_i0.Normal = tmpvar_71;
  o = o_i0;
  vec4 tmpvar_75;
  tmpvar_75 = texture2DProj (_ShadowMapTexture, IN._ShadowCoord);
  atten = tmpvar_75.x;
  vec3 tmpvar_78;
  tmpvar_78.xyz = IN.viewDir;
  vec3 tmpvar_79;
  tmpvar_79 = normalize (tmpvar_78);
  SurfaceOutput s;
  s = o;
  vec3 lightDir;
  lightDir = IN.lightDir;
  float atten_i0;
  atten_i0 = atten;
  vec3 h;
  float diff;
  vec4 c_i0;
  vec3 tmpvar_82;
  tmpvar_82 = normalize ((lightDir + tmpvar_79));
  h = tmpvar_82;
  float tmpvar_84;
  tmpvar_84 = dot (s.Normal, lightDir);
  float tmpvar_85;
  tmpvar_85 = max (0.000000, tmpvar_84);
  diff = tmpvar_85;
  float tmpvar_87;
  tmpvar_87 = dot (s.Normal, h);
  float tmpvar_88;
  tmpvar_88 = max (0.000000, tmpvar_87);
  float tmpvar_90;
  tmpvar_90 = pow (tmpvar_88, (s.Specular * 128.000000));
  float tmpvar_91;
  tmpvar_91 = (tmpvar_90 * s.Gloss);
  c_i0.xyz = ((((s.Albedo * _LightColor0.xyz) * diff) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_91)) * (atten_i0 * 2.000000));
  c_i0.w = (s.Alpha + (((_LightColor0.w * _SpecColor.w) * tmpvar_91) * atten_i0));
  c = c_i0;
  c.xyz = (c_i0.xyz + (o.Albedo * IN.vlight));
  vec4 tmpvar_15;
  tmpvar_15.xyzw = c;
  gl_FragData[0] = tmpvar_15;
}

