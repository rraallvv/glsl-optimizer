struct v2f_img {
  vec4 pos;
  vec2 uv;
};
uniform sampler2D _CameraDepthNormalsTexture;
uniform sampler2D _MainTex;
vec3 DecodeViewNormalStereo (
  in vec4 enc4
);

vec3 DecodeViewNormalStereo (
  in vec4 enc4
)
{
  float kScale;
  float tmpvar_1;
  tmpvar_1 = 1.777700;
  kScale = tmpvar_1;
  vec3 nn;
  float g;
  vec3 n;
  vec3 tmpvar_2;
  tmpvar_2.x = float(vec3((2.000000 * kScale)));
  tmpvar_2.y = float(vec3((2.000000 * kScale)));
  tmpvar_2.z = float(vec3(0.000000));
  vec3 tmpvar_3;
  tmpvar_3.x = float(vec3(-(kScale)));
  tmpvar_3.y = float(vec3(-(kScale)));
  tmpvar_3.z = float(vec3(1.000000));
  vec3 tmpvar_4;
  tmpvar_4 = ((enc4.xyz * tmpvar_2) + tmpvar_3);
  nn = tmpvar_4;
  float tmpvar_5;
  tmpvar_5 = dot (nn.xyz, nn.xyz);
  float tmpvar_6;
  tmpvar_6 = (2.000000 / tmpvar_5);
  g = tmpvar_6;
  vec2 tmpvar_7;
  tmpvar_7 = (g * nn.xy);
  n.xy = tmpvar_7.xy;
  float tmpvar_8;
  tmpvar_8 = (g - 1.000000);
  n.z = float(vec3(tmpvar_8));
  return n;
}

float DecodeFloatRG (
  in vec2 enc
);

float DecodeFloatRG (
  in vec2 enc
)
{
  vec2 kDecodeDot;
  vec2 tmpvar_1;
  tmpvar_1 = vec2 (1.000000, 0.003922);
  kDecodeDot = tmpvar_1;
  float tmpvar_2;
  tmpvar_2 = dot (enc, kDecodeDot);
  return tmpvar_2;
}

void DecodeDepthNormal (
  in vec4 enc,
  out float depth,
  out vec3 normal
);

void DecodeDepthNormal (
  in vec4 enc,
  out float depth,
  out vec3 normal
)
{
  float tmpvar_1;
  tmpvar_1 = DecodeFloatRG (enc.zw);
  float tmpvar_2;
  tmpvar_2 = tmpvar_1;
  depth = tmpvar_2;
  vec3 tmpvar_3;
  tmpvar_3 = DecodeViewNormalStereo (enc);
  vec3 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  normal = tmpvar_4;
}

vec4 frag (
  in v2f_img i
);

vec4 frag (
  in v2f_img i
)
{
  vec4 tex;
  vec4 depth;
  float z;
  vec3 n;
  vec4 col;
  vec4 tmpvar_1;
  tmpvar_1 = texture2D (_MainTex, i.uv);
  vec4 tmpvar_2;
  tmpvar_2 = tmpvar_1;
  tex = tmpvar_2;
  vec4 tmpvar_3;
  tmpvar_3 = texture2D (_CameraDepthNormalsTexture, i.uv);
  vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  depth = tmpvar_4;
  DecodeDepthNormal (depth, z, n);
  float tmpvar_5;
  tmpvar_5 = z;
  col.x = tmpvar_5;
  float tmpvar_6;
  tmpvar_6 = ((n.x * 0.500000) + 0.500000);
  col.y = float(vec2(tmpvar_6));
  float tmpvar_7;
  tmpvar_7 = ((n.y * 0.500000) + 0.500000);
  col.z = float(vec3(tmpvar_7));
  float tmpvar_8;
  tmpvar_8 = tex.w;
  col.w = float(vec4(tmpvar_8));
  return col;
}

void main ()
{
  vec4 xl_retval;
  v2f_img xlt_i;
  vec4 tmpvar_1;
  tmpvar_1 = vec4 (0.000000, 0.000000, 0.000000, 0.000000);
  xlt_i.pos = tmpvar_1;
  vec2 tmpvar_2;
  tmpvar_2 = gl_TexCoord[0].xy;
  vec2 tmpvar_3;
  tmpvar_3 = tmpvar_2;
  xlt_i.uv = tmpvar_3;
  vec4 tmpvar_4;
  tmpvar_4 = frag (xlt_i);
  vec4 tmpvar_5;
  tmpvar_5 = tmpvar_4;
  xl_retval = tmpvar_5;
  vec4 tmpvar_6;
  tmpvar_6 = xl_retval.xyzw;
  vec4 tmpvar_7;
  tmpvar_7 = tmpvar_6;
  gl_FragData[0] = tmpvar_7;
}

