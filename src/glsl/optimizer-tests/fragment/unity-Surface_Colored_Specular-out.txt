struct MySurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  vec3 GlossColor;
  float Alpha;
};
varying vec4 xlv_FOG;
uniform sampler2D _SpecMap;
uniform sampler2D _MainTex;
uniform sampler2D _LightTextureB0;
uniform sampler2D _LightTexture0;
uniform vec4 _LightColor0;
void main ()
{
  vec4 tmpvar_91;
  vec4 tmpvar_95;
  tmpvar_91 = gl_TexCoord[0].xyzw;
  tmpvar_95 = gl_TexCoord[4].xyzw;
  vec4 c;
  MySurfaceOutput o;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Normal = gl_TexCoord[1].xyz;
  MySurfaceOutput o_i0;
  o_i0 = o;
  o_i0.Albedo = (texture2D (_MainTex, tmpvar_91.xy).xyz * 0.300000);
  o_i0.GlossColor = texture2D (_SpecMap, tmpvar_91.zw).xyz;
  o_i0.Specular = 0.250000;
  o = o_i0;
  vec3 tmpvar_59;
  tmpvar_59 = normalize (gl_TexCoord[2].xyz);
  vec3 LightCoord_i0;
  LightCoord_i0 = tmpvar_95.xyz;
  vec4 c_i0;
  c_i0.xyz = ((((o_i0.Albedo * _LightColor0.xyz) * max (0.000000, dot (o_i0.Normal, tmpvar_59))) + (_LightColor0.xyz * (pow (max (0.000000, dot (o_i0.Normal, normalize ((tmpvar_59 + normalize (gl_TexCoord[3].xyz))))), 32.000000) * o_i0.GlossColor))) * (((float((tmpvar_95.z > 0.000000)) * texture2D (_LightTexture0, ((tmpvar_95.xy / tmpvar_95.w) + 0.500000)).w) * texture2D (_LightTextureB0, vec2(dot (LightCoord_i0, LightCoord_i0))).w) * 2.000000)).xyz;
  c_i0.w = float(vec4(o_i0.Alpha));
  c = c_i0;
  c.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_FragData[0] = c.xyzw;
}

