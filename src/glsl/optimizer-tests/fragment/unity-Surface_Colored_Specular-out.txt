struct MySurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  vec3 GlossColor;
  float Alpha;
};
struct Input {
  vec2 uv_MainTex;
  vec2 uv_SpecMap;
};
struct v2f_surf {
  vec4 pos;
  float fog;
  vec4 hip_pack0;
  vec3 normal;
  vec3 lightDir;
  vec3 viewDir;
  vec4 _LightCoord;
};
uniform vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _SpecMap;
varying vec4 xlv_FOG;
void main ()
{
  v2f_surf xlt_IN;
  xlt_IN.pos = vec4 (0.000000, 0.000000, 0.000000, 0.000000);
  xlt_IN.fog = xlv_FOG.x;
  vec4 tmpvar_3;
  tmpvar_3.xyzw = gl_TexCoord[0];
  xlt_IN.hip_pack0 = tmpvar_3;
  vec3 tmpvar_5;
  tmpvar_5.xyz = vec3(gl_TexCoord[1]);
  xlt_IN.normal = tmpvar_5;
  vec3 tmpvar_7;
  tmpvar_7.xyz = vec3(gl_TexCoord[2]);
  xlt_IN.lightDir = tmpvar_7;
  vec3 tmpvar_9;
  tmpvar_9.xyz = vec3(gl_TexCoord[3]);
  xlt_IN.viewDir = tmpvar_9;
  vec4 tmpvar_11;
  tmpvar_11.xyzw = gl_TexCoord[4];
  xlt_IN._LightCoord = tmpvar_11;
  v2f_surf IN;
  IN = xlt_IN;
  Input surfIN;
  MySurfaceOutput o;
  vec3 lightDir;
  vec4 c;
  surfIN.uv_MainTex = xlt_IN.hip_pack0.xy;
  surfIN.uv_SpecMap = xlt_IN.hip_pack0.zw;
  o.Albedo = vec3 (0.000000, 0.000000, 0.000000);
  o.Emission = vec3 (0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Normal = xlt_IN.normal;
  Input IN_i0;
  IN_i0 = surfIN;
  MySurfaceOutput o_i0;
  o_i0 = o;
  vec4 tmpvar_52;
  tmpvar_52 = texture2D (_MainTex, IN_i0.uv_MainTex);
  o_i0.Albedo = (tmpvar_52.xyz * 0.300000);
  vec4 tmpvar_54;
  tmpvar_54 = texture2D (_SpecMap, IN_i0.uv_SpecMap);
  o_i0.GlossColor = tmpvar_54.xyz;
  o_i0.Specular = 0.250000;
  o = o_i0;
  lightDir = IN.lightDir;
  vec3 tmpvar_59;
  tmpvar_59 = normalize (lightDir);
  lightDir = tmpvar_59;
  vec3 tmpvar_61;
  tmpvar_61.xyz = IN.viewDir;
  vec3 tmpvar_62;
  tmpvar_62 = normalize (tmpvar_61);
  float tmpvar_63;
  vec4 LightCoord;
  LightCoord = IN._LightCoord;
  vec4 tmpvar_65;
  tmpvar_65 = texture2D (_LightTexture0, ((LightCoord.xy / LightCoord.w) + 0.500000));
  tmpvar_63 = tmpvar_65.w;
  vec3 LightCoord_i0;
  LightCoord_i0 = IN._LightCoord.xyz;
  float tmpvar_68;
  tmpvar_68 = dot (LightCoord_i0, LightCoord_i0);
  vec2 tmpvar_70;
  tmpvar_70.xy = vec2(tmpvar_68);
  vec4 tmpvar_71;
  tmpvar_71 = texture2D (_LightTextureB0, tmpvar_70);
  MySurfaceOutput s;
  s = o;
  vec3 lightDir_i0;
  lightDir_i0 = lightDir;
  float atten;
  atten = (((float)((IN._LightCoord.z > 0.000000)) * tmpvar_63) * tmpvar_71.w);
  vec3 h;
  float diff;
  vec4 c_i0;
  vec3 tmpvar_74;
  tmpvar_74 = normalize ((lightDir_i0 + tmpvar_62));
  h = tmpvar_74;
  float tmpvar_76;
  tmpvar_76 = dot (s.Normal, lightDir_i0);
  float tmpvar_77;
  tmpvar_77 = max (0.000000, tmpvar_76);
  diff = tmpvar_77;
  float tmpvar_79;
  tmpvar_79 = dot (s.Normal, h);
  float tmpvar_80;
  tmpvar_80 = max (0.000000, tmpvar_79);
  float tmpvar_82;
  tmpvar_82 = pow (tmpvar_80, 32.000000);
  c_i0.xyz = ((((s.Albedo * _LightColor0.xyz) * diff) + (_LightColor0.xyz * (tmpvar_82 * s.GlossColor))) * (atten * 2.000000));
  c_i0.w = s.Alpha;
  c = c_i0;
  c.w = 0.000000;
  vec4 tmpvar_15;
  tmpvar_15.xyzw = c;
  gl_FragData[0] = tmpvar_15;
}

