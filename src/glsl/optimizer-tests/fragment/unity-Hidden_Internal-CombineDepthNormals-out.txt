struct v2f {
  vec4 pos;
  vec2 uv;
};
uniform sampler2D _CameraDepthTexture;
uniform sampler2D _CameraNormalsTexture;
uniform vec4 _ZBufferParams;
void main ()
{
  v2f xlt_i;
  xlt_i.pos = vec4(0.000000, 0.000000, 0.000000, 0.000000);
  xlt_i.uv = gl_TexCoord[0].xy;
  v2f i;
  i = xlt_i;
  float d;
  vec4 n;
  vec4 tmpvar_39;
  tmpvar_39 = texture2D (_CameraDepthTexture, i.uv);
  d = tmpvar_39.x;
  vec4 tmpvar_41;
  tmpvar_41 = texture2D (_CameraNormalsTexture, i.uv);
  n = tmpvar_41;
  float __retval_i0;
  __retval_i0 = 1.0/(((_ZBufferParams.x * d) + _ZBufferParams.y));
  d = __retval_i0;
  n.xyz = ((tmpvar_41.xyz * 2.000000) - 1.000000).xyz;
  n.z = float(vec3(-(n.z)));
  vec4 tmpvar_48;
  if ((__retval_i0 < 0.999985)) {
    vec3 normal;
    normal = n.xyz;
    vec4 enc;
    enc.xy = ((((normal.xy / (normal.z + 1.000000)) / 1.777700) * 0.500000) + 0.500000).xy;
    vec2 enc_i0_i1;
    enc_i0_i1 = (vec2(1.000000, 255.000000) * d);
    vec2 tmpvar_63;
    tmpvar_63 = fract (enc_i0_i1);
    enc_i0_i1 = tmpvar_63;
    enc_i0_i1.x = (tmpvar_63.x - (tmpvar_63.y * 0.003922));
    enc.zw = vec2(enc_i0_i1.xy);
    tmpvar_48 = enc;
  } else {
    tmpvar_48 = vec4(0.500000, 0.500000, 1.000000, 1.000000);
  };
  gl_FragData[0] = tmpvar_48.xyzw;
}

