struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
struct Input {
  vec2 uv_MainTex;
  vec2 uv_BumpMap;
  vec3 worldRefl;
  vec3 viewDir;
  vec3 TtoW0;
  vec3 TtoW1;
  vec3 TtoW2;
};
varying vec4 xlv_FOG;
uniform vec4 unity_Ambient;
uniform vec4 _ReflectColor;
uniform sampler2D _ParallaxMap;
uniform float _Parallax;
uniform sampler2D _MainTex;
uniform sampler2D _LightBuffer;
uniform samplerCube _Cube;
uniform vec4 _Color;
uniform sampler2D _BumpMap;
void main ()
{
  vec4 tmpvar_126;
  vec4 tmpvar_129;
  vec4 tmpvar_130;
  vec4 tmpvar_131;
  tmpvar_126 = gl_TexCoord[0].xyzw;
  tmpvar_129 = gl_TexCoord[3].xyzw;
  tmpvar_130 = gl_TexCoord[4].xyzw;
  tmpvar_131 = gl_TexCoord[5].xyzw;
  vec4 col;
  vec4 light;
  SurfaceOutput o;
  Input surfIN;
  surfIN.uv_MainTex = tmpvar_126.xy;
  surfIN.uv_BumpMap = tmpvar_126.zw;
  vec3 tmpvar_68;
  tmpvar_68.x = float(tmpvar_129.w);
  tmpvar_68.y = float(tmpvar_130.w);
  tmpvar_68.z = float(tmpvar_131.w);
  surfIN.worldRefl = tmpvar_68;
  surfIN.TtoW0 = tmpvar_129.xyz;
  surfIN.TtoW1 = tmpvar_130.xyz;
  surfIN.TtoW2 = tmpvar_131.xyz;
  surfIN.viewDir = gl_TexCoord[1].xyz;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  Input IN_i0;
  IN_i0 = surfIN;
  SurfaceOutput o_i0;
  o_i0 = o;
  vec2 _ret_val_i0;
  vec3 v;
  vec3 tmpvar_84;
  tmpvar_84 = normalize (surfIN.viewDir);
  v = tmpvar_84;
  v.z = float(vec3((tmpvar_84.z + 0.420000)));
  _ret_val_i0 = (((texture2D (_ParallaxMap, surfIN.uv_BumpMap).w * _Parallax) - (_Parallax / 2.000000)) * (v.xy / v.z));
  IN_i0.uv_MainTex = (surfIN.uv_MainTex + _ret_val_i0);
  IN_i0.uv_BumpMap = (IN_i0.uv_BumpMap + _ret_val_i0);
  vec4 tmpvar_90;
  tmpvar_90 = texture2D (_MainTex, IN_i0.uv_MainTex);
  o_i0.Albedo = (tmpvar_90 * _Color).xyz;
  vec4 normal;
  normal.xy = ((texture2D (_BumpMap, IN_i0.uv_BumpMap).wy * 2.000000) - 1.000000).xy;
  normal.z = float(vec3(sqrt (((1.000000 - (normal.x * normal.x)) - (normal.y * normal.y)))));
  o_i0.Normal = normal.xyz;
  vec3 tmpvar_105;
  tmpvar_105.x = float(vec3(dot (IN_i0.TtoW0, o_i0.Normal)));
  tmpvar_105.y = float(vec3(dot (IN_i0.TtoW1, o_i0.Normal)));
  tmpvar_105.z = float(vec3(dot (IN_i0.TtoW2, o_i0.Normal)));
  vec4 tmpvar_110;
  tmpvar_110 = (textureCube (_Cube, reflect (IN_i0.worldRefl, tmpvar_105)) * tmpvar_90.w);
  o_i0.Emission = (tmpvar_110.xyz * _ReflectColor.xyz);
  o_i0.Alpha = (tmpvar_110.w * _ReflectColor.w);
  o = o_i0;
  vec4 tmpvar_116;
  tmpvar_116 = -(log2 (texture2DProj (_LightBuffer, gl_TexCoord[2].xyzw)));
  light = tmpvar_116;
  light.xyz = (tmpvar_116.xyz + unity_Ambient.xyz).xyz;
  vec4 c_i0;
  c_i0.xyz = (o_i0.Albedo * light.xyz).xyz;
  c_i0.w = float(vec4(o_i0.Alpha));
  col = c_i0;
  col.xyz = (c_i0.xyz + o_i0.Emission).xyz;
  gl_FragData[0] = col.xyzw;
}

