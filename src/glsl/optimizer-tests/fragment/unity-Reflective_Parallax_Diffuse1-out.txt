struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
struct Input {
  vec2 uv_MainTex;
  vec2 uv_BumpMap;
  vec3 worldRefl;
  vec3 viewDir;
  vec3 TtoW0;
  vec3 TtoW1;
  vec3 TtoW2;
};
struct v2f_surf {
  vec4 pos;
  float fog;
  vec4 hip_pack0;
  vec3 viewDir;
  vec4 hip_screen;
  vec4 TtoW0;
  vec4 TtoW1;
  vec4 TtoW2;
};
varying vec4 xlv_FOG;
uniform vec4 unity_Ambient;
uniform vec4 _ReflectColor;
uniform sampler2D _ParallaxMap;
uniform float _Parallax;
uniform sampler2D _MainTex;
uniform sampler2D _LightBuffer;
uniform samplerCube _Cube;
uniform vec4 _Color;
uniform sampler2D _BumpMap;
void main ()
{
  v2f_surf xlt_IN;
  xlt_IN.pos = vec4(0.000000, 0.000000, 0.000000, 0.000000);
  xlt_IN.fog = xlv_FOG.x;
  xlt_IN.hip_pack0 = gl_TexCoord[0].xyzw;
  xlt_IN.viewDir = gl_TexCoord[1].xyz;
  xlt_IN.hip_screen = gl_TexCoord[2].xyzw;
  xlt_IN.TtoW0 = gl_TexCoord[3].xyzw;
  xlt_IN.TtoW1 = gl_TexCoord[4].xyzw;
  xlt_IN.TtoW2 = gl_TexCoord[5].xyzw;
  v2f_surf IN;
  IN = xlt_IN;
  vec4 col;
  vec4 light;
  SurfaceOutput o;
  Input surfIN;
  surfIN.uv_MainTex = xlt_IN.hip_pack0.xy;
  surfIN.uv_BumpMap = xlt_IN.hip_pack0.zw;
  vec3 tmpvar_68;
  tmpvar_68.x = float(xlt_IN.TtoW0.w);
  tmpvar_68.y = float(xlt_IN.TtoW1.w);
  tmpvar_68.z = float(xlt_IN.TtoW2.w);
  surfIN.worldRefl = tmpvar_68;
  surfIN.TtoW0 = xlt_IN.TtoW0.xyz;
  surfIN.TtoW1 = xlt_IN.TtoW1.xyz;
  surfIN.TtoW2 = xlt_IN.TtoW2.xyz;
  surfIN.viewDir = xlt_IN.viewDir;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  Input IN_i0;
  IN_i0 = surfIN;
  SurfaceOutput o_i0;
  o_i0 = o;
  vec4 tex;
  vec4 tmpvar_79;
  tmpvar_79 = texture2D (_ParallaxMap, IN_i0.uv_BumpMap);
  vec2 __retval_i0_i0;
  float h_i0;
  vec3 v;
  h_i0 = ((tmpvar_79.w * _Parallax) - (_Parallax / 2.000000));
  vec3 tmpvar_84;
  tmpvar_84 = normalize (IN_i0.viewDir);
  v = tmpvar_84;
  v.z = float(vec3((tmpvar_84.z + 0.420000)));
  __retval_i0_i0 = (h_i0 * (v.xy / v.z));
  IN_i0.uv_MainTex = (IN_i0.uv_MainTex + __retval_i0_i0);
  IN_i0.uv_BumpMap = (IN_i0.uv_BumpMap + __retval_i0_i0);
  vec4 tmpvar_90;
  tmpvar_90 = texture2D (_MainTex, IN_i0.uv_MainTex);
  tex = tmpvar_90;
  o_i0.Albedo = (tmpvar_90 * _Color).xyz;
  vec4 tmpvar_94;
  tmpvar_94 = texture2D (_BumpMap, IN_i0.uv_BumpMap);
  vec4 normal;
  normal.xy = ((tmpvar_94.wy * 2.000000) - 1.000000).xy;
  float tmpvar_98;
  tmpvar_98 = sqrt (((1.000000 - (normal.x * normal.x)) - (normal.y * normal.y)));
  normal.z = float(vec3(tmpvar_98));
  o_i0.Normal = normal.xyz;
  float tmpvar_102;
  tmpvar_102 = dot (IN_i0.TtoW0, o_i0.Normal);
  float tmpvar_103;
  tmpvar_103 = dot (IN_i0.TtoW1, o_i0.Normal);
  float tmpvar_104;
  tmpvar_104 = dot (IN_i0.TtoW2, o_i0.Normal);
  vec3 tmpvar_105;
  tmpvar_105.x = float(vec3(tmpvar_102));
  tmpvar_105.y = float(vec3(tmpvar_103));
  tmpvar_105.z = float(vec3(tmpvar_104));
  vec3 tmpvar_106;
  tmpvar_106 = reflect (IN_i0.worldRefl, tmpvar_105);
  vec4 tmpvar_108;
  tmpvar_108 = textureCube (_Cube, tmpvar_106);
  vec4 tmpvar_110;
  tmpvar_110 = (tmpvar_108 * tex.w);
  o_i0.Emission = (tmpvar_110.xyz * _ReflectColor.xyz);
  o_i0.Alpha = (tmpvar_110.w * _ReflectColor.w);
  o = o_i0;
  vec4 tmpvar_113;
  tmpvar_113 = texture2DProj (_LightBuffer, IN.hip_screen);
  light = tmpvar_113;
  vec4 tmpvar_115;
  tmpvar_115 = log2 (light);
  vec4 tmpvar_116;
  tmpvar_116 = -(tmpvar_115);
  light = tmpvar_116;
  light.xyz = (tmpvar_116.xyz + unity_Ambient.xyz).xyz;
  vec4 c_i0;
  c_i0.xyz = (o.Albedo * light.xyz).xyz;
  c_i0.w = float(vec4(o.Alpha));
  col = c_i0;
  col.xyz = (c_i0.xyz + o.Emission).xyz;
  gl_FragData[0] = col.xyzw;
}

