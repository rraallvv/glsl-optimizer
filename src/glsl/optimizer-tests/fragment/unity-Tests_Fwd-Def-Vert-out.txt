struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
struct v2f_surf {
  vec4 pos;
  float fog;
  vec3 normal;
  vec3 lightDir;
  vec3 _LightCoord;
};
uniform vec4 _LightColor0;
uniform sampler2D _LightTexture0;
varying vec4 xlv_FOG;
void main ()
{
  v2f_surf xlt_IN;
  xlt_IN.pos = vec4(0.000000, 0.000000, 0.000000, 0.000000);
  xlt_IN.fog = xlv_FOG.x;
  xlt_IN.normal = gl_TexCoord[0].xyz;
  xlt_IN.lightDir = gl_TexCoord[1].xyz;
  xlt_IN._LightCoord = gl_TexCoord[2].xyz;
  v2f_surf IN;
  IN = xlt_IN;
  SurfaceOutput o;
  vec3 lightDir;
  vec4 c;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  o.Normal = xlt_IN.normal;
  SurfaceOutput o_i0;
  o_i0 = o;
  o_i0.Emission = vec3(0.000000, 1.000000, 0.000000);
  o = o_i0;
  lightDir = xlt_IN.lightDir;
  vec3 tmpvar_29;
  tmpvar_29 = normalize (lightDir);
  lightDir = tmpvar_29;
  float tmpvar_31;
  tmpvar_31 = dot (IN._LightCoord, IN._LightCoord);
  vec4 tmpvar_34;
  tmpvar_34 = texture2D (_LightTexture0, vec2(tmpvar_31));
  SurfaceOutput s;
  s = o;
  float atten;
  atten = tmpvar_34.w;
  vec4 c_i0;
  float tmpvar_37;
  tmpvar_37 = dot (s.Normal, lightDir);
  float tmpvar_38;
  tmpvar_38 = max (0.000000, tmpvar_37);
  c_i0.xyz = ((s.Albedo * _LightColor0.xyz) * ((tmpvar_38 * atten) * 2.000000)).xyz;
  c_i0.w = float(vec4(s.Alpha));
  c = c_i0;
  c.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_FragData[0] = c.xyzw;
}

