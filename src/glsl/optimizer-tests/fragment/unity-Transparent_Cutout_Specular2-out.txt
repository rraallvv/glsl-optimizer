varying vec4 xlv_FOG;
uniform sampler2D unity_LightmapInd;
uniform sampler2D unity_Lightmap;
uniform vec4 _SpecColor;
uniform float _Shininess;
uniform sampler2D _MainTex;
uniform sampler2D _LightBuffer;
uniform float _Cutoff;
uniform vec4 _Color;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1 = gl_TexCoord[1].xyzw;
  vec3 tmpvar_2;
  tmpvar_2 = gl_TexCoord[2].xyz;
  vec4 light;
  vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, gl_TexCoord[0].xy);
  vec3 tmpvar_4;
  tmpvar_4 = (tmpvar_3.xyz * _Color.xyz);
  float tmpvar_5;
  tmpvar_5 = tmpvar_3.w;
  float tmpvar_6;
  tmpvar_6 = (tmpvar_3.w * _Color.w);
  float x;
  x = (tmpvar_6 - _Cutoff);
  if ((x < 0.0)) {
    discard;
  };
  vec4 tmpvar_7;
  tmpvar_7 = -(log2 (texture2DProj (_LightBuffer, tmpvar_1)));
  light = tmpvar_7;
  light.xyz = (tmpvar_7.xyz + mix ((2.0 * texture2D (unity_LightmapInd, tmpvar_2.xy).xyz), (2.0 * texture2D (unity_Lightmap, tmpvar_2.xy).xyz), vec3(clamp (tmpvar_2.z, 0.0, 1.0)))).xyz;
  vec4 c;
  float tmpvar_8;
  tmpvar_8 = (light.w * tmpvar_5);
  c.xyz = ((tmpvar_4 * light.xyz) + ((light.xyz * _SpecColor.xyz) * tmpvar_8)).xyz;
  c.w = (vec4((tmpvar_6 + (tmpvar_8 * _SpecColor.w)))).w;
  gl_FragData[0] = c.xyzw;
}

