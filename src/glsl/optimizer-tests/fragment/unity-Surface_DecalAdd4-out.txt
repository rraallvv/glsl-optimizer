struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
varying vec4 xlv_FOG;
uniform sampler2D unity_Lightmap;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _Decal;
void main ()
{
  vec4 c;
  SurfaceOutput o;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  SurfaceOutput o_i0;
  o_i0 = o;
  o_i0.Albedo = (texture2D (_Decal, gl_TexCoord[0].xy).xyz * 0.500000);
  o = o_i0;
  c.xyz = (o_i0.Albedo * min ((2.000000 * texture2D (unity_Lightmap, gl_TexCoord[2].xy).xyz), vec3((texture2DProj (_ShadowMapTexture, gl_TexCoord[3].xyzw).x * 2.000000)))).xyz;
  c.w = float(vec4(o_i0.Alpha));
  gl_FragData[0] = c.xyzw;
}

