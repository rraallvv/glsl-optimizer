struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
varying vec4 xlv_FOG;
uniform sampler2D _MainTex;
uniform sampler2D _LightTextureB0;
uniform sampler2D _LightTexture0;
uniform vec4 _LightColor0;
uniform sampler2D _Illum;
uniform vec4 _Color;
uniform sampler2D _BumpMap;
void main ()
{
  vec4 tmpvar_91;
  vec4 tmpvar_93;
  tmpvar_91 = gl_TexCoord[0].xyzw;
  tmpvar_93 = gl_TexCoord[2].xyzw;
  vec4 c;
  SurfaceOutput o;
  vec2 tmpvar_100;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  SurfaceOutput o_i0;
  o_i0 = o;
  vec4 tmpvar_55;
  tmpvar_55 = (texture2D (_MainTex, tmpvar_91.xy) * _Color);
  o_i0.Albedo = tmpvar_55.xyz;
  o_i0.Emission = (tmpvar_55.xyz * texture2D (_Illum, tmpvar_100).w);
  o_i0.Alpha = tmpvar_55.w;
  vec4 normal;
  normal.xy = ((texture2D (_BumpMap, tmpvar_91.zw).wy * 2.000000) - 1.000000).xy;
  normal.z = float(vec3(sqrt (((1.000000 - (normal.x * normal.x)) - (normal.y * normal.y)))));
  o_i0.Normal = normal.xyz;
  o = o_i0;
  vec3 LightCoord_i0;
  LightCoord_i0 = tmpvar_93.xyz;
  vec4 c_i0_i1;
  c_i0_i1.xyz = ((o_i0.Albedo * _LightColor0.xyz) * ((max (0.000000, dot (o_i0.Normal, normalize (gl_TexCoord[1].xyz))) * ((float((tmpvar_93.z > 0.000000)) * texture2D (_LightTexture0, ((tmpvar_93.xy / tmpvar_93.w) + 0.500000)).w) * texture2D (_LightTextureB0, vec2(dot (LightCoord_i0, LightCoord_i0))).w)) * 2.000000)).xyz;
  c_i0_i1.w = float(vec4(o_i0.Alpha));
  c = c_i0_i1;
  c.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_FragData[0] = c.xyzw;
}

