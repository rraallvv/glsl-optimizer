varying vec4 xlv_FOG;
uniform vec4 _ReflectColor;
uniform sampler2D _ParallaxMap;
uniform float _Parallax;
uniform sampler2D _MainTex;
uniform sampler2D _LightTextureB0;
uniform sampler2D _LightTexture0;
uniform vec4 _LightColor0;
uniform samplerCube _Cube;
uniform vec4 _Color;
uniform sampler2D _BumpMap;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1 = gl_TexCoord[0].xyzw;
  vec4 tmpvar_2;
  tmpvar_2 = gl_TexCoord[3].xyzw;
  vec4 c;
  vec3 tmpvar_3;
  vec2 tmpvar_4;
  tmpvar_4 = tmpvar_1.zw;
  vec2 _ret_val_i0;
  vec3 v;
  vec3 tmpvar_5;
  tmpvar_5 = normalize (gl_TexCoord[1].xyz);
  v = tmpvar_5;
  v.z = (vec3((tmpvar_5.z + 0.42))).z;
  _ret_val_i0 = (((texture2D (_ParallaxMap, tmpvar_4).w * _Parallax) - (_Parallax / 2.0)) * (v.xy / v.z));
  vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, (tmpvar_1.xy + _ret_val_i0));
  vec4 normal;
  normal.xy = ((texture2D (_BumpMap, (tmpvar_4 + _ret_val_i0)).wy * 2.0) - 1.0);
  normal.z = (vec3(sqrt (((1.0 - (normal.x * normal.x)) - (normal.y * normal.y))))).z;
  vec3 LightCoord_i0;
  LightCoord_i0 = tmpvar_2.xyz;
  vec4 c_i0_i1;
  c_i0_i1.xyz = (((tmpvar_6 * _Color).xyz * _LightColor0.xyz) * ((max (0.0, dot (normal.xyz, normalize (gl_TexCoord[2].xyz))) * ((float((tmpvar_2.z > 0.0)) * texture2D (_LightTexture0, ((tmpvar_2.xy / tmpvar_2.w) + 0.5)).w) * texture2D (_LightTextureB0, vec2(dot (LightCoord_i0, LightCoord_i0))).w)) * 2.0)).xyz;
  c_i0_i1.w = (vec4(((textureCube (_Cube, tmpvar_3) * tmpvar_6.w).w * _ReflectColor.w))).w;
  c = c_i0_i1;
  c.w = 0.0;
  gl_FragData[0] = c.xyzw;
}

