varying vec4 xlv_FOG;
uniform sampler2D _MainTex;
uniform sampler2D _LightTextureB0;
uniform sampler2D _LightTexture0;
uniform vec4 _LightColor0;
uniform float _Cutoff;
void main ()
{
  vec3 tmpvar_80;
  vec4 tmpvar_81;
  tmpvar_80 = gl_TexCoord[2].xyz;
  tmpvar_81 = gl_TexCoord[3].xyzw;
  vec4 c;
  vec3 tmpvar_82;
  vec3 tmpvar_83;
  float tmpvar_87;
  vec4 tmpvar_44;
  tmpvar_44 = (texture2D (_MainTex, gl_TexCoord[0].xy) * gl_Color.xyzw);
  float tmpvar_46;
  tmpvar_46 = tmpvar_44.w;
  tmpvar_82 = tmpvar_44.xyz;
  tmpvar_83 = gl_TexCoord[1].xyz;
  tmpvar_87 = tmpvar_46;
  float x;
  x = (tmpvar_46 - _Cutoff);
  if ((x < 0.000000)) {
    discard;
  };
  vec3 LightCoord_i0;
  LightCoord_i0 = tmpvar_81.xyz;
  vec4 c_i0_i1;
  c_i0_i1.xyz = ((tmpvar_82 * _LightColor0.xyz) * ((max (0.000000, dot (tmpvar_83, normalize (tmpvar_80))) * ((float((tmpvar_81.z > 0.000000)) * texture2D (_LightTexture0, ((tmpvar_81.xy / tmpvar_81.w) + 0.500000)).w) * texture2D (_LightTextureB0, vec2(dot (LightCoord_i0, LightCoord_i0))).w)) * 2.000000)).xyz;
  c_i0_i1.w = float(vec4(tmpvar_87));
  c = c_i0_i1;
  c.w = float(vec4(tmpvar_87));
  gl_FragData[0] = c.xyzw;
}

