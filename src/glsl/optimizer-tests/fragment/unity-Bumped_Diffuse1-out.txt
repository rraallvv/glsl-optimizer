struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
varying vec4 xlv_FOG;
uniform vec4 unity_Ambient;
uniform sampler2D _MainTex;
uniform sampler2D _LightBuffer;
uniform vec4 _Color;
uniform sampler2D _BumpMap;
void main ()
{
  vec4 light;
  SurfaceOutput o;
  vec2 tmpvar_68;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  SurfaceOutput o_i0;
  o_i0 = o;
  vec4 tmpvar_38;
  tmpvar_38 = (texture2D (_MainTex, gl_TexCoord[0].xy) * _Color);
  o_i0.Albedo = tmpvar_38.xyz;
  o_i0.Alpha = tmpvar_38.w;
  vec4 normal;
  normal.xy = ((texture2D (_BumpMap, tmpvar_68).wy * 2.000000) - 1.000000).xy;
  normal.z = float(vec3(sqrt (((1.000000 - (normal.x * normal.x)) - (normal.y * normal.y)))));
  o_i0.Normal = normal.xyz;
  o = o_i0;
  vec4 tmpvar_52;
  tmpvar_52 = -(log2 (texture2DProj (_LightBuffer, gl_TexCoord[1].xyzw)));
  light = tmpvar_52;
  light.xyz = (tmpvar_52.xyz + unity_Ambient.xyz).xyz;
  vec4 c_i0;
  c_i0.xyz = (o_i0.Albedo * light.xyz).xyz;
  c_i0.w = float(vec4(o_i0.Alpha));
  gl_FragData[0] = c_i0.xyzw;
}

