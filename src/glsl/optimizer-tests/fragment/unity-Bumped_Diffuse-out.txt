struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
struct Input {
  vec2 uv_MainTex;
  vec2 uv_BumpMap;
};
struct v2f_surf {
  vec4 pos;
  vec2 hip_pack0;
  vec3 TtoV0;
  vec3 TtoV1;
  vec3 TtoV2;
};
uniform sampler2D _BumpMap;
uniform vec4 _Color;
uniform sampler2D _MainTex;
void main ()
{
  v2f_surf xlt_IN;
  xlt_IN.pos = vec4(0.000000, 0.000000, 0.000000, 0.000000);
  xlt_IN.hip_pack0 = gl_TexCoord[0].xy;
  xlt_IN.TtoV0 = gl_TexCoord[1].xyz;
  xlt_IN.TtoV1 = gl_TexCoord[2].xyz;
  xlt_IN.TtoV2 = gl_TexCoord[3].xyz;
  v2f_surf IN;
  IN = xlt_IN;
  Input surfIN;
  SurfaceOutput o;
  vec3 viewN;
  vec4 res;
  surfIN.uv_BumpMap = xlt_IN.hip_pack0.xy;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  Input IN_i0;
  IN_i0 = surfIN;
  SurfaceOutput o_i0;
  o_i0 = o;
  vec4 tmpvar_37;
  tmpvar_37 = texture2D (_MainTex, IN_i0.uv_MainTex);
  vec4 tmpvar_38;
  tmpvar_38 = (tmpvar_37 * _Color);
  o_i0.Albedo = tmpvar_38.xyz;
  o_i0.Alpha = tmpvar_38.w;
  vec4 tmpvar_41;
  tmpvar_41 = texture2D (_BumpMap, IN_i0.uv_BumpMap);
  vec4 normal;
  normal.xy = ((tmpvar_41.wy * 2.000000) - 1.000000).xy;
  float tmpvar_45;
  tmpvar_45 = sqrt (((1.000000 - (normal.x * normal.x)) - (normal.y * normal.y)));
  normal.z = float(vec3(tmpvar_45));
  o_i0.Normal = normal.xyz;
  o = o_i0;
  float tmpvar_49;
  tmpvar_49 = dot (IN.TtoV0, o.Normal);
  viewN.x = tmpvar_49;
  float tmpvar_51;
  tmpvar_51 = dot (IN.TtoV1, o.Normal);
  viewN.y = float(vec2(tmpvar_51));
  float tmpvar_53;
  tmpvar_53 = dot (IN.TtoV2, o.Normal);
  viewN.z = float(vec3(tmpvar_53));
  o.Normal = viewN;
  res.xyz = ((o.Normal * vec3(0.500000, 0.500000, -0.500000)) + 0.500000).xyz;
  res.w = float(vec4(o.Specular));
  gl_FragData[0] = res.xyzw;
}

