struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
struct Input {
  vec2 uv_MainTex;
  vec2 uv_BumpMap;
  vec2 uv_Illum;
  vec3 viewDir;
};
struct v2f_surf {
  vec4 pos;
  float fog;
  vec4 hip_pack0;
  vec3 viewDir;
  vec3 lightDir;
  vec3 _LightCoord;
};
uniform sampler2D _BumpMap;
uniform vec4 _Color;
uniform sampler2D _Illum;
uniform vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform sampler2D _MainTex;
uniform float _Parallax;
uniform sampler2D _ParallaxMap;
uniform float _Shininess;
uniform vec4 _SpecColor;
varying vec4 xlv_FOG;
void main ()
{
  v2f_surf xlt_IN;
  xlt_IN.pos = vec4 (0.000000, 0.000000, 0.000000, 0.000000);
  xlt_IN.fog = xlv_FOG.x;
  vec4 tmpvar_3;
  tmpvar_3.xyzw = gl_TexCoord[0];
  xlt_IN.hip_pack0 = tmpvar_3;
  vec3 tmpvar_5;
  tmpvar_5.xyz = vec3(gl_TexCoord[1]);
  xlt_IN.viewDir = tmpvar_5;
  vec3 tmpvar_7;
  tmpvar_7.xyz = vec3(gl_TexCoord[2]);
  xlt_IN.lightDir = tmpvar_7;
  vec3 tmpvar_9;
  tmpvar_9.xyz = vec3(gl_TexCoord[3]);
  xlt_IN._LightCoord = tmpvar_9;
  v2f_surf IN;
  IN = xlt_IN;
  Input surfIN;
  SurfaceOutput o;
  vec3 lightDir;
  vec4 c;
  surfIN.uv_MainTex = xlt_IN.hip_pack0.xy;
  surfIN.uv_BumpMap = xlt_IN.hip_pack0.zw;
  surfIN.viewDir = xlt_IN.viewDir;
  o.Albedo = vec3 (0.000000, 0.000000, 0.000000);
  o.Emission = vec3 (0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  Input IN_i0;
  IN_i0 = surfIN;
  SurfaceOutput o_i0;
  o_i0 = o;
  vec4 c_i0;
  vec4 tmpvar_75;
  tmpvar_75 = texture2D (_ParallaxMap, IN_i0.uv_BumpMap);
  vec2 __retval_i0_i0;
  float h_i0;
  vec3 v;
  h_i0 = ((tmpvar_75.w * _Parallax) - (_Parallax / 2.000000));
  vec3 tmpvar_80;
  tmpvar_80 = normalize (IN_i0.viewDir);
  v = tmpvar_80;
  v.z = (tmpvar_80.z + 0.420000);
  __retval_i0_i0 = (h_i0 * (v.xy / v.z));
  IN_i0.uv_MainTex = (IN_i0.uv_MainTex + __retval_i0_i0);
  IN_i0.uv_BumpMap = (IN_i0.uv_BumpMap + __retval_i0_i0);
  IN_i0.uv_Illum = (IN_i0.uv_Illum + __retval_i0_i0);
  vec4 tmpvar_87;
  tmpvar_87 = texture2D (_MainTex, IN_i0.uv_MainTex);
  vec4 tmpvar_89;
  tmpvar_89 = (tmpvar_87 * _Color);
  c_i0 = tmpvar_89;
  o_i0.Albedo = tmpvar_89.xyz;
  o_i0.Gloss = tmpvar_87.w;
  vec4 tmpvar_92;
  tmpvar_92 = texture2D (_Illum, IN_i0.uv_Illum);
  o_i0.Emission = (c_i0.xyz * tmpvar_92.w);
  o_i0.Specular = _Shininess;
  o_i0.Alpha = c_i0.w;
  vec4 tmpvar_96;
  tmpvar_96 = texture2D (_BumpMap, IN_i0.uv_BumpMap);
  vec4 normal;
  normal.xy = ((tmpvar_96.wy * 2.000000) - 1.000000);
  float tmpvar_100;
  tmpvar_100 = sqrt (((1.000000 - (normal.x * normal.x)) - (normal.y * normal.y)));
  normal.z = tmpvar_100;
  vec3 tmpvar_102;
  tmpvar_102.xyz = vec3(normal);
  o_i0.Normal = tmpvar_102;
  o = o_i0;
  lightDir = IN.lightDir;
  vec3 tmpvar_105;
  tmpvar_105 = normalize (lightDir);
  lightDir = tmpvar_105;
  vec3 tmpvar_107;
  tmpvar_107.xyz = IN.viewDir;
  vec3 tmpvar_108;
  tmpvar_108 = normalize (tmpvar_107);
  float tmpvar_109;
  tmpvar_109 = dot (IN._LightCoord, IN._LightCoord);
  vec2 tmpvar_111;
  tmpvar_111.xy = vec2(tmpvar_109);
  vec4 tmpvar_112;
  tmpvar_112 = texture2D (_LightTexture0, tmpvar_111);
  SurfaceOutput s;
  s = o;
  vec3 lightDir_i0;
  lightDir_i0 = lightDir;
  float atten;
  atten = tmpvar_112.w;
  vec3 h_i0_i1;
  float diff;
  vec4 c_i0_i1;
  vec3 tmpvar_115;
  tmpvar_115 = normalize ((lightDir_i0 + tmpvar_108));
  h_i0_i1 = tmpvar_115;
  float tmpvar_117;
  tmpvar_117 = dot (s.Normal, lightDir_i0);
  float tmpvar_118;
  tmpvar_118 = max (0.000000, tmpvar_117);
  diff = tmpvar_118;
  float tmpvar_120;
  tmpvar_120 = dot (s.Normal, h_i0_i1);
  float tmpvar_121;
  tmpvar_121 = max (0.000000, tmpvar_120);
  float tmpvar_123;
  tmpvar_123 = pow (tmpvar_121, (s.Specular * 128.000000));
  float tmpvar_124;
  tmpvar_124 = (tmpvar_123 * s.Gloss);
  c_i0_i1.xyz = ((((s.Albedo * _LightColor0.xyz) * diff) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_124)) * (atten * 2.000000));
  c_i0_i1.w = (s.Alpha + (((_LightColor0.w * _SpecColor.w) * tmpvar_124) * atten));
  c = c_i0_i1;
  c.w = 0.000000;
  vec4 tmpvar_13;
  tmpvar_13.xyzw = c;
  gl_FragData[0] = tmpvar_13;
}

