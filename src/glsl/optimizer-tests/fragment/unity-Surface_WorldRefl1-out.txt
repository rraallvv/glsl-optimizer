struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
uniform samplerCube _Cube;
void main ()
{
  vec4 res;
  vec3 tmpvar_25;
  SurfaceOutput o;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  o.Normal = gl_TexCoord[0].xyz;
  SurfaceOutput o_i0;
  o_i0 = o;
  o_i0.Albedo = textureCube (_Cube, tmpvar_25).xyz;
  o = o_i0;
  res.xyz = ((o_i0.Normal * vec3(0.500000, 0.500000, -0.500000)) + 0.500000).xyz;
  res.w = float(vec4(o_i0.Specular));
  gl_FragData[0] = res.xyzw;
}

