struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
varying vec4 xlv_FOG;
uniform vec4 unity_Ambient;
uniform sampler2D _LightBuffer;
void main ()
{
  vec4 col;
  vec4 light;
  SurfaceOutput o;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  SurfaceOutput o_i0;
  o_i0 = o;
  o_i0.Emission = vec3(1.000000, 1.000000, 0.000000);
  o = o_i0;
  vec4 tmpvar_20;
  tmpvar_20 = texture2DProj (_LightBuffer, gl_TexCoord[0].xyzw);
  light = tmpvar_20;
  vec4 tmpvar_22;
  tmpvar_22 = log2 (tmpvar_20);
  vec4 tmpvar_23;
  tmpvar_23 = -(tmpvar_22);
  light = tmpvar_23;
  light.xyz = (tmpvar_23.xyz + unity_Ambient.xyz).xyz;
  vec4 c;
  c.xyz = (o.Albedo * light.xyz).xyz;
  c.w = float(vec4(o.Alpha));
  col = c;
  col.xyz = (c.xyz + o.Emission).xyz;
  gl_FragData[0] = col.xyzw;
}

