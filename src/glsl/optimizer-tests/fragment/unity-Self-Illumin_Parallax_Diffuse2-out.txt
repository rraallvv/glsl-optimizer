struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
struct Input {
  vec2 uv_MainTex;
  vec2 uv_BumpMap;
  vec2 uv_Illum;
  vec3 viewDir;
};
struct v2f_surf {
  vec4 pos;
  float fog;
  vec4 hip_pack0;
  vec2 hip_pack1;
  vec3 viewDir;
  vec4 hip_screen;
};
uniform sampler2D _BumpMap;
uniform vec4 _Color;
uniform sampler2D _Illum;
uniform sampler2D _LightBuffer;
uniform sampler2D _MainTex;
uniform float _Parallax;
uniform sampler2D _ParallaxMap;
uniform vec4 unity_Ambient;
varying vec4 xlv_FOG;
void main ()
{
  v2f_surf xlt_IN;
  xlt_IN.pos = vec4 (0.000000, 0.000000, 0.000000, 0.000000);
  xlt_IN.fog = xlv_FOG.x;
  vec4 tmpvar_3;
  tmpvar_3.xyzw = gl_TexCoord[0];
  xlt_IN.hip_pack0 = tmpvar_3;
  vec2 tmpvar_5;
  tmpvar_5.xy = vec2(gl_TexCoord[1]);
  xlt_IN.hip_pack1 = tmpvar_5;
  vec3 tmpvar_7;
  tmpvar_7.xyz = vec3(gl_TexCoord[2]);
  xlt_IN.viewDir = tmpvar_7;
  vec4 tmpvar_9;
  tmpvar_9.xyzw = gl_TexCoord[3];
  xlt_IN.hip_screen = tmpvar_9;
  v2f_surf IN;
  IN = xlt_IN;
  Input surfIN;
  SurfaceOutput o;
  vec4 light;
  vec4 col;
  surfIN.uv_MainTex = xlt_IN.hip_pack0.xy;
  surfIN.uv_BumpMap = xlt_IN.hip_pack0.zw;
  surfIN.uv_Illum = xlt_IN.hip_pack1.xy;
  surfIN.viewDir = xlt_IN.viewDir;
  o.Albedo = vec3 (0.000000, 0.000000, 0.000000);
  o.Emission = vec3 (0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  Input IN_i0;
  IN_i0 = surfIN;
  SurfaceOutput o_i0;
  o_i0 = o;
  vec4 c;
  vec4 tmpvar_63;
  tmpvar_63 = texture2D (_ParallaxMap, IN_i0.uv_BumpMap);
  vec2 __retval_i0_i0;
  float h_i0;
  vec3 v;
  h_i0 = ((tmpvar_63.w * _Parallax) - (_Parallax / 2.000000));
  vec3 tmpvar_68;
  tmpvar_68 = normalize (IN_i0.viewDir);
  v = tmpvar_68;
  v.z = (tmpvar_68.z + 0.420000);
  __retval_i0_i0 = (h_i0 * (v.xy / v.z));
  IN_i0.uv_MainTex = (IN_i0.uv_MainTex + __retval_i0_i0);
  IN_i0.uv_BumpMap = (IN_i0.uv_BumpMap + __retval_i0_i0);
  IN_i0.uv_Illum = (IN_i0.uv_Illum + __retval_i0_i0);
  vec4 tmpvar_75;
  tmpvar_75 = texture2D (_MainTex, IN_i0.uv_MainTex);
  vec4 tmpvar_76;
  tmpvar_76 = (tmpvar_75 * _Color);
  c = tmpvar_76;
  o_i0.Albedo = tmpvar_76.xyz;
  vec4 tmpvar_78;
  tmpvar_78 = texture2D (_Illum, IN_i0.uv_Illum);
  o_i0.Emission = (c.xyz * tmpvar_78.w);
  o_i0.Alpha = c.w;
  vec4 tmpvar_81;
  tmpvar_81 = texture2D (_BumpMap, IN_i0.uv_BumpMap);
  vec4 normal;
  normal.xy = ((tmpvar_81.wy * 2.000000) - 1.000000);
  float tmpvar_85;
  tmpvar_85 = sqrt (((1.000000 - (normal.x * normal.x)) - (normal.y * normal.y)));
  normal.z = tmpvar_85;
  vec3 tmpvar_87;
  tmpvar_87.xyz = vec3(normal);
  o_i0.Normal = tmpvar_87;
  o = o_i0;
  vec4 tmpvar_89;
  tmpvar_89 = texture2DProj (_LightBuffer, IN.hip_screen);
  light = tmpvar_89;
  vec4 tmpvar_91;
  tmpvar_91 = log2 (light);
  vec4 tmpvar_92;
  tmpvar_92 = -(tmpvar_91);
  light = tmpvar_92;
  light.xyz = (tmpvar_92.xyz + unity_Ambient.xyz);
  vec4 c_i0;
  c_i0.xyz = (o.Albedo * light.xyz);
  c_i0.w = o.Alpha;
  col = c_i0;
  col.xyz = (c_i0.xyz + o.Emission);
  vec4 tmpvar_13;
  tmpvar_13.xyzw = col;
  gl_FragData[0] = tmpvar_13;
}

