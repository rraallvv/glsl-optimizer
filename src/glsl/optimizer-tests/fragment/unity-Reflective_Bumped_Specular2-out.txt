struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
varying vec4 xlv_FOG;
uniform vec4 unity_Ambient;
uniform vec4 _SpecColor;
uniform float _Shininess;
uniform vec4 _ReflectColor;
uniform sampler2D _MainTex;
uniform sampler2D _LightBuffer;
uniform samplerCube _Cube;
uniform vec4 _Color;
uniform sampler2D _BumpMap;
void main ()
{
  vec4 tmpvar_102;
  vec4 tmpvar_104;
  vec4 tmpvar_105;
  vec4 tmpvar_106;
  tmpvar_102 = gl_TexCoord[0].xyzw;
  tmpvar_104 = gl_TexCoord[2].xyzw;
  tmpvar_105 = gl_TexCoord[3].xyzw;
  tmpvar_106 = gl_TexCoord[4].xyzw;
  vec4 col;
  vec4 light;
  SurfaceOutput o;
  vec3 tmpvar_53;
  tmpvar_53.x = float(tmpvar_104.w);
  tmpvar_53.y = float(tmpvar_105.w);
  tmpvar_53.z = float(tmpvar_106.w);
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  SurfaceOutput o_i0;
  o_i0 = o;
  vec4 tmpvar_63;
  tmpvar_63 = texture2D (_MainTex, tmpvar_102.xy);
  o_i0.Albedo = (tmpvar_63 * _Color).xyz;
  o_i0.Gloss = tmpvar_63.w;
  o_i0.Specular = _Shininess;
  vec4 normal;
  normal.xy = ((texture2D (_BumpMap, tmpvar_102.zw).wy * 2.000000) - 1.000000).xy;
  normal.z = float(vec3(sqrt (((1.000000 - (normal.x * normal.x)) - (normal.y * normal.y)))));
  o_i0.Normal = normal.xyz;
  vec3 tmpvar_80;
  tmpvar_80.x = float(vec3(dot (tmpvar_104.xyz, o_i0.Normal)));
  tmpvar_80.y = float(vec3(dot (tmpvar_105.xyz, o_i0.Normal)));
  tmpvar_80.z = float(vec3(dot (tmpvar_106.xyz, o_i0.Normal)));
  vec4 tmpvar_85;
  tmpvar_85 = (textureCube (_Cube, reflect (tmpvar_53, tmpvar_80)) * tmpvar_63.w);
  o_i0.Emission = (tmpvar_85.xyz * _ReflectColor.xyz);
  o_i0.Alpha = (tmpvar_85.w * _ReflectColor.w);
  o = o_i0;
  vec4 tmpvar_91;
  tmpvar_91 = -(log2 (texture2DProj (_LightBuffer, gl_TexCoord[1].xyzw)));
  light = tmpvar_91;
  light.xyz = (tmpvar_91.xyz + unity_Ambient.xyz).xyz;
  vec4 c_i0;
  float tmpvar_95;
  tmpvar_95 = (light.w * o_i0.Gloss);
  c_i0.xyz = ((o_i0.Albedo * light.xyz) + ((light.xyz * _SpecColor.xyz) * tmpvar_95)).xyz;
  c_i0.w = float(vec4((o_i0.Alpha + (tmpvar_95 * _SpecColor.w))));
  col = c_i0;
  col.xyz = (c_i0.xyz + o_i0.Emission).xyz;
  gl_FragData[0] = col.xyzw;
}

