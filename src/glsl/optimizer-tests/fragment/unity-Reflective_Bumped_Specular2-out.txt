struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
struct Input {
  vec2 uv_MainTex;
  vec2 uv_BumpMap;
  vec3 worldRefl;
  vec3 TtoW0;
  vec3 TtoW1;
  vec3 TtoW2;
};
struct v2f_surf {
  vec4 pos;
  float fog;
  vec4 hip_pack0;
  vec4 hip_screen;
  vec4 TtoW0;
  vec4 TtoW1;
  vec4 TtoW2;
};
uniform sampler2D _BumpMap;
uniform vec4 _Color;
uniform samplerCube _Cube;
uniform sampler2D _LightBuffer;
uniform sampler2D _MainTex;
uniform vec4 _ReflectColor;
uniform float _Shininess;
uniform vec4 _SpecColor;
uniform vec4 unity_Ambient;
varying vec4 xlv_FOG;
void main ()
{
  v2f_surf xlt_IN;
  xlt_IN.pos = vec4 (0.000000, 0.000000, 0.000000, 0.000000);
  xlt_IN.fog = xlv_FOG.x;
  vec4 tmpvar_3;
  tmpvar_3.xyzw = gl_TexCoord[0];
  xlt_IN.hip_pack0 = tmpvar_3;
  vec4 tmpvar_5;
  tmpvar_5.xyzw = gl_TexCoord[1];
  xlt_IN.hip_screen = tmpvar_5;
  vec4 tmpvar_7;
  tmpvar_7.xyzw = gl_TexCoord[2];
  xlt_IN.TtoW0 = tmpvar_7;
  vec4 tmpvar_9;
  tmpvar_9.xyzw = gl_TexCoord[3];
  xlt_IN.TtoW1 = tmpvar_9;
  vec4 tmpvar_11;
  tmpvar_11.xyzw = gl_TexCoord[4];
  xlt_IN.TtoW2 = tmpvar_11;
  v2f_surf IN;
  IN = xlt_IN;
  Input surfIN;
  SurfaceOutput o;
  vec4 light;
  vec4 col;
  surfIN.uv_MainTex = xlt_IN.hip_pack0.xy;
  surfIN.uv_BumpMap = xlt_IN.hip_pack0.zw;
  vec3 tmpvar_53;
  tmpvar_53.x = xlt_IN.TtoW0.w;
  tmpvar_53.y = xlt_IN.TtoW1.w;
  tmpvar_53.z = xlt_IN.TtoW2.w;
  surfIN.worldRefl = tmpvar_53;
  surfIN.TtoW0 = xlt_IN.TtoW0.xyz;
  surfIN.TtoW1 = xlt_IN.TtoW1.xyz;
  surfIN.TtoW2 = xlt_IN.TtoW2.xyz;
  o.Albedo = vec3 (0.000000, 0.000000, 0.000000);
  o.Emission = vec3 (0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  Input IN_i0;
  IN_i0 = surfIN;
  SurfaceOutput o_i0;
  o_i0 = o;
  vec4 tex;
  vec4 tmpvar_63;
  tmpvar_63 = texture2D (_MainTex, IN_i0.uv_MainTex);
  tex = tmpvar_63;
  o_i0.Albedo = (tmpvar_63 * _Color).xyz;
  o_i0.Gloss = tmpvar_63.w;
  o_i0.Specular = _Shininess;
  vec4 tmpvar_69;
  tmpvar_69 = texture2D (_BumpMap, IN_i0.uv_BumpMap);
  vec4 normal;
  normal.xy = ((tmpvar_69.wy * 2.000000) - 1.000000);
  float tmpvar_73;
  tmpvar_73 = sqrt (((1.000000 - (normal.x * normal.x)) - (normal.y * normal.y)));
  normal.z = tmpvar_73;
  vec3 tmpvar_75;
  tmpvar_75.xyz = vec3(normal);
  o_i0.Normal = tmpvar_75;
  float tmpvar_77;
  tmpvar_77 = dot (IN_i0.TtoW0, o_i0.Normal);
  float tmpvar_78;
  tmpvar_78 = dot (IN_i0.TtoW1, o_i0.Normal);
  float tmpvar_79;
  tmpvar_79 = dot (IN_i0.TtoW2, o_i0.Normal);
  vec3 tmpvar_80;
  tmpvar_80.x = tmpvar_77;
  tmpvar_80.y = tmpvar_78;
  tmpvar_80.z = tmpvar_79;
  vec3 tmpvar_81;
  tmpvar_81 = reflect (IN_i0.worldRefl, tmpvar_80);
  vec4 tmpvar_83;
  tmpvar_83 = textureCube (_Cube, tmpvar_81);
  vec4 tmpvar_85;
  tmpvar_85 = (tmpvar_83 * tex.w);
  o_i0.Emission = (tmpvar_85.xyz * _ReflectColor.xyz);
  o_i0.Alpha = (tmpvar_85.w * _ReflectColor.w);
  o = o_i0;
  vec4 tmpvar_88;
  tmpvar_88 = texture2DProj (_LightBuffer, IN.hip_screen);
  light = tmpvar_88;
  vec4 tmpvar_90;
  tmpvar_90 = log2 (light);
  vec4 tmpvar_91;
  tmpvar_91 = -(tmpvar_90);
  light = tmpvar_91;
  light.xyz = (tmpvar_91.xyz + unity_Ambient.xyz);
  vec4 c_i0;
  float tmpvar_95;
  tmpvar_95 = (light.w * o.Gloss);
  c_i0.xyz = ((o.Albedo * light.xyz) + ((light.xyz * _SpecColor.xyz) * tmpvar_95));
  c_i0.w = (o.Alpha + (tmpvar_95 * _SpecColor.w));
  col = c_i0;
  col.xyz = (c_i0.xyz + o.Emission);
  vec4 tmpvar_15;
  tmpvar_15.xyzw = col;
  gl_FragData[0] = tmpvar_15;
}

