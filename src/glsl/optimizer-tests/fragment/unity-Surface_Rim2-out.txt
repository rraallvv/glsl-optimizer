struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
varying vec4 xlv_FOG;
uniform sampler2D unity_LightmapInd;
uniform sampler2D unity_Lightmap;
uniform float _RimPower;
uniform vec4 _RimColor;
uniform sampler2D _MainTex;
uniform sampler2D _LightBuffer;
void main ()
{
  vec3 tmpvar_86;
  tmpvar_86 = gl_TexCoord[4].xyz;
  vec4 col;
  vec4 light;
  SurfaceOutput o;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  o.Normal = gl_TexCoord[3].xyz;
  SurfaceOutput o_i0;
  o_i0 = o;
  o_i0.Albedo = texture2D (_MainTex, gl_TexCoord[0].xy).xyz;
  o_i0.Emission = (_RimColor.xyz * pow ((1.000000 - clamp (dot (normalize (gl_TexCoord[1].xyz), o_i0.Normal), 0.000000, 1.000000)), _RimPower));
  o = o_i0;
  vec4 tmpvar_58;
  tmpvar_58 = -(log2 (texture2DProj (_LightBuffer, gl_TexCoord[2].xyzw)));
  light = tmpvar_58;
  light.xyz = (tmpvar_58.xyz + mix ((2.000000 * texture2D (unity_LightmapInd, tmpvar_86.xy).xyz), (2.000000 * texture2D (unity_Lightmap, tmpvar_86.xy).xyz), vec3(clamp (tmpvar_86.z, 0.000000, 1.000000)))).xyz;
  vec4 c;
  c.xyz = (o_i0.Albedo * light.xyz).xyz;
  c.w = float(vec4(o_i0.Alpha));
  col = c;
  col.xyz = (c.xyz + o_i0.Emission).xyz;
  gl_FragData[0] = col.xyzw;
}

