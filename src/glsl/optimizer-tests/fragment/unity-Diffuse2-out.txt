struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
varying vec4 xlv_FOG;
uniform sampler2D unity_LightmapInd;
uniform sampler2D unity_Lightmap;
uniform sampler2D _MainTex;
uniform sampler2D _LightBuffer;
uniform vec4 _Color;
void main ()
{
  vec3 tmpvar_63;
  tmpvar_63 = gl_TexCoord[2].xyz;
  vec4 light;
  SurfaceOutput o;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  SurfaceOutput o_i0;
  o_i0 = o;
  vec4 tmpvar_32;
  tmpvar_32 = (texture2D (_MainTex, gl_TexCoord[0].xy) * _Color);
  o_i0.Albedo = tmpvar_32.xyz;
  o_i0.Alpha = tmpvar_32.w;
  o = o_i0;
  vec4 tmpvar_38;
  tmpvar_38 = -(log2 (texture2DProj (_LightBuffer, gl_TexCoord[1].xyzw)));
  light = tmpvar_38;
  light.xyz = (tmpvar_38.xyz + mix ((2.000000 * texture2D (unity_LightmapInd, tmpvar_63.xy).xyz), (2.000000 * texture2D (unity_Lightmap, tmpvar_63.xy).xyz), vec3(clamp (tmpvar_63.z, 0.000000, 1.000000)))).xyz;
  vec4 c_i0;
  c_i0.xyz = (o_i0.Albedo * light.xyz).xyz;
  c_i0.w = float(vec4(o_i0.Alpha));
  gl_FragData[0] = c_i0.xyzw;
}

