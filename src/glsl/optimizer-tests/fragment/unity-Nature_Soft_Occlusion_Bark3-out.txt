struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
struct Input {
  vec2 uv_MainTex;
};
struct v2f_surf {
  vec4 pos;
  vec3 _ShadowCoord0;
  vec3 _ShadowCoord1;
  vec3 _ShadowCoord2;
  vec3 _ShadowCoord3;
  vec2 _ShadowZFade;
};
uniform vec4 _Color;
uniform vec4 _LightShadowData;
uniform vec4 _LightSplitsFar;
uniform vec4 _LightSplitsNear;
uniform sampler2D _MainTex;
uniform vec4 _ProjectionParams;
uniform sampler2D _ShadowMapTexture;
void main ()
{
  v2f_surf xlt_IN;
  xlt_IN.pos = vec4 (0.000000, 0.000000, 0.000000, 0.000000);
  vec3 tmpvar_2;
  tmpvar_2.xyz = vec3(gl_TexCoord[0]);
  xlt_IN._ShadowCoord0 = tmpvar_2;
  vec3 tmpvar_4;
  tmpvar_4.xyz = vec3(gl_TexCoord[1]);
  xlt_IN._ShadowCoord1 = tmpvar_4;
  vec3 tmpvar_6;
  tmpvar_6.xyz = vec3(gl_TexCoord[2]);
  xlt_IN._ShadowCoord2 = tmpvar_6;
  vec3 tmpvar_8;
  tmpvar_8.xyz = vec3(gl_TexCoord[3]);
  xlt_IN._ShadowCoord3 = tmpvar_8;
  vec2 tmpvar_10;
  tmpvar_10.xy = vec2(gl_TexCoord[4]);
  xlt_IN._ShadowZFade = tmpvar_10;
  v2f_surf IN;
  IN = xlt_IN;
  SurfaceOutput o;
  Input surfIN;
  vec4 z;
  vec4 near;
  vec4 coord;
  float shadow;
  vec4 res;
  o.Albedo = vec3 (0.000000, 0.000000, 0.000000);
  o.Emission = vec3 (0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  Input IN_i0;
  IN_i0 = surfIN;
  SurfaceOutput o_i0;
  o_i0 = o;
  vec4 tmpvar_37;
  tmpvar_37 = texture2D (_MainTex, IN_i0.uv_MainTex);
  vec4 tmpvar_38;
  tmpvar_38 = (tmpvar_37 * _Color);
  o_i0.Albedo = tmpvar_38.xyz;
  o_i0.Alpha = tmpvar_38.w;
  o = o_i0;
  z = IN._ShadowZFade.xxxx;
  bvec4 tmpvar_43;
  tmpvar_43 = greaterThanEqual (z, _LightSplitsNear);
  vec4 tmpvar_44;
  tmpvar_44.xyzw = vec4(tmpvar_43);
  near = tmpvar_44;
  bvec4 tmpvar_46;
  tmpvar_46 = lessThan (z, _LightSplitsFar);
  vec4 tmpvar_47;
  tmpvar_47.xyzw = vec4(tmpvar_46);
  vec4 tmpvar_49;
  tmpvar_49 = (near * tmpvar_47);
  vec4 tmpvar_50;
  tmpvar_50.xyz = ((((IN._ShadowCoord0 * tmpvar_49.x) + (IN._ShadowCoord1 * tmpvar_49.y)) + (IN._ShadowCoord2 * tmpvar_49.z)) + (IN._ShadowCoord3 * tmpvar_49.w));
  tmpvar_50.w = 1.000000;
  coord = tmpvar_50;
  vec4 tmpvar_52;
  tmpvar_52 = texture2D (_ShadowMapTexture, coord.xy);
  float tmpvar_53;
  if ((tmpvar_52.x < coord.z)) {
    tmpvar_53 = _LightShadowData.x;
  } else {
    tmpvar_53 = 1.000000;
  };
  shadow = tmpvar_53;
  float tmpvar_57;
  tmpvar_57 = clamp (IN._ShadowZFade.y, 0.000000, 1.000000);
  float tmpvar_60;
  tmpvar_60 = clamp ((shadow + tmpvar_57), 0.000000, 1.000000);
  res.x = tmpvar_60;
  res.y = 1.000000;
  vec2 enc;
  enc = (vec2 (1.000000, 255.000000) * (1.000000 - (z * _ProjectionParams.w)).x);
  vec2 tmpvar_69;
  tmpvar_69 = fract (enc);
  enc = tmpvar_69;
  enc.x = (tmpvar_69.x - (tmpvar_69.y * 0.003922));
  res.zw = enc;
  vec4 tmpvar_14;
  tmpvar_14.xyzw = res;
  gl_FragData[0] = tmpvar_14;
}

