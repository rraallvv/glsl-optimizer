struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
struct Input {
  vec2 uv_MainTex;
  vec2 uv_BumpMap;
  vec3 viewDir;
};
struct v2f_surf {
  vec4 pos;
  float fog;
  vec4 hip_pack0;
  vec3 viewDir;
  vec3 lightDir;
  vec4 _LightCoord;
};
varying vec4 xlv_FOG;
uniform vec4 _SpecColor;
uniform float _Shininess;
uniform sampler2D _ParallaxMap;
uniform float _Parallax;
uniform sampler2D _MainTex;
uniform sampler2D _LightTextureB0;
uniform sampler2D _LightTexture0;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _BumpMap;
void main ()
{
  v2f_surf xlt_IN;
  xlt_IN.pos = vec4(0.000000, 0.000000, 0.000000, 0.000000);
  xlt_IN.fog = xlv_FOG.x;
  xlt_IN.hip_pack0 = gl_TexCoord[0].xyzw;
  xlt_IN.viewDir = gl_TexCoord[1].xyz;
  xlt_IN.lightDir = gl_TexCoord[2].xyz;
  xlt_IN._LightCoord = gl_TexCoord[3].xyzw;
  v2f_surf IN;
  IN = xlt_IN;
  vec4 c;
  vec3 lightDir;
  SurfaceOutput o;
  Input surfIN;
  surfIN.uv_MainTex = xlt_IN.hip_pack0.xy;
  surfIN.uv_BumpMap = xlt_IN.hip_pack0.zw;
  surfIN.viewDir = xlt_IN.viewDir;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  Input IN_i0;
  IN_i0 = surfIN;
  SurfaceOutput o_i0;
  o_i0 = o;
  vec4 tmpvar_78;
  tmpvar_78 = texture2D (_ParallaxMap, IN_i0.uv_BumpMap);
  vec2 __retval_i0_i0;
  float h_i0;
  vec3 v;
  h_i0 = ((tmpvar_78.w * _Parallax) - (_Parallax / 2.000000));
  vec3 tmpvar_83;
  tmpvar_83 = normalize (IN_i0.viewDir);
  v = tmpvar_83;
  v.z = float(vec3((tmpvar_83.z + 0.420000)));
  __retval_i0_i0 = (h_i0 * (v.xy / v.z));
  IN_i0.uv_MainTex = (IN_i0.uv_MainTex + __retval_i0_i0);
  IN_i0.uv_BumpMap = (IN_i0.uv_BumpMap + __retval_i0_i0);
  vec4 tmpvar_89;
  tmpvar_89 = texture2D (_MainTex, IN_i0.uv_MainTex);
  o_i0.Albedo = (tmpvar_89.xyz * _Color.xyz);
  o_i0.Gloss = tmpvar_89.w;
  o_i0.Alpha = (tmpvar_89.w * _Color.w);
  o_i0.Specular = _Shininess;
  vec4 tmpvar_95;
  tmpvar_95 = texture2D (_BumpMap, IN_i0.uv_BumpMap);
  vec4 normal;
  normal.xy = ((tmpvar_95.wy * 2.000000) - 1.000000).xy;
  float tmpvar_99;
  tmpvar_99 = sqrt (((1.000000 - (normal.x * normal.x)) - (normal.y * normal.y)));
  normal.z = float(vec3(tmpvar_99));
  o_i0.Normal = normal.xyz;
  o = o_i0;
  lightDir = IN.lightDir;
  vec3 tmpvar_104;
  tmpvar_104 = normalize (lightDir);
  lightDir = tmpvar_104;
  vec3 tmpvar_107;
  tmpvar_107 = normalize (IN.viewDir.xyz);
  float tmpvar_108;
  vec4 LightCoord;
  LightCoord = IN._LightCoord;
  vec4 tmpvar_110;
  tmpvar_110 = texture2D (_LightTexture0, ((LightCoord.xy / LightCoord.w) + 0.500000));
  tmpvar_108 = tmpvar_110.w;
  vec3 LightCoord_i0;
  LightCoord_i0 = IN._LightCoord.xyz;
  float tmpvar_113;
  tmpvar_113 = dot (LightCoord_i0, LightCoord_i0);
  vec4 tmpvar_116;
  tmpvar_116 = texture2D (_LightTextureB0, vec2(tmpvar_113));
  SurfaceOutput s;
  s = o;
  vec3 lightDir_i0;
  lightDir_i0 = lightDir;
  float atten;
  atten = ((float((IN._LightCoord.z > 0.000000)) * tmpvar_108) * tmpvar_116.w);
  vec4 c_i0;
  float diff;
  vec3 h_i0_i1;
  vec3 tmpvar_119;
  tmpvar_119 = normalize ((lightDir_i0 + tmpvar_107));
  h_i0_i1 = tmpvar_119;
  float tmpvar_121;
  tmpvar_121 = dot (s.Normal, lightDir_i0);
  float tmpvar_122;
  tmpvar_122 = max (0.000000, tmpvar_121);
  diff = tmpvar_122;
  float tmpvar_124;
  tmpvar_124 = dot (s.Normal, h_i0_i1);
  float tmpvar_125;
  tmpvar_125 = max (0.000000, tmpvar_124);
  float tmpvar_127;
  tmpvar_127 = pow (tmpvar_125, (s.Specular * 128.000000));
  float tmpvar_128;
  tmpvar_128 = (tmpvar_127 * s.Gloss);
  c_i0.xyz = ((((s.Albedo * _LightColor0.xyz) * diff) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_128)) * (atten * 2.000000)).xyz;
  c_i0.w = float(vec4((s.Alpha + (((_LightColor0.w * _SpecColor.w) * tmpvar_128) * atten))));
  c = c_i0;
  c.w = float(vec4(0.000000, 0.000000, 0.000000, 0.000000));
  gl_FragData[0] = c.xyzw;
}

