struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
struct Input {
  vec2 uv_MainTex;
};
struct v2f_surf {
  vec4 pos;
  float fog;
  vec2 hip_pack0;
  vec3 normal;
  vec3 lightDir;
  vec3 viewDir;
};
uniform vec4 _Color;
uniform float _Cutoff;
uniform vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform float _Shininess;
uniform vec4 _SpecColor;
varying vec4 xlv_FOG;
void main ()
{
  v2f_surf xlt_IN;
  xlt_IN.pos = vec4 (0.000000, 0.000000, 0.000000, 0.000000);
  xlt_IN.fog = xlv_FOG.x;
  vec2 tmpvar_3;
  tmpvar_3.xy = vec2(gl_TexCoord[0]);
  xlt_IN.hip_pack0 = tmpvar_3;
  vec3 tmpvar_5;
  tmpvar_5.xyz = vec3(gl_TexCoord[1]);
  xlt_IN.normal = tmpvar_5;
  vec3 tmpvar_7;
  tmpvar_7.xyz = vec3(gl_TexCoord[2]);
  xlt_IN.lightDir = tmpvar_7;
  vec3 tmpvar_9;
  tmpvar_9.xyz = vec3(gl_TexCoord[3]);
  xlt_IN.viewDir = tmpvar_9;
  v2f_surf IN;
  IN = xlt_IN;
  Input surfIN;
  SurfaceOutput o;
  vec3 lightDir;
  vec4 c;
  surfIN.uv_MainTex = xlt_IN.hip_pack0.xy;
  o.Albedo = vec3 (0.000000, 0.000000, 0.000000);
  o.Emission = vec3 (0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  o.Normal = xlt_IN.normal;
  Input IN_i0;
  IN_i0 = surfIN;
  SurfaceOutput o_i0;
  o_i0 = o;
  vec4 tmpvar_42;
  tmpvar_42 = texture2D (_MainTex, IN_i0.uv_MainTex);
  o_i0.Albedo = (tmpvar_42.xyz * _Color.xyz);
  o_i0.Gloss = tmpvar_42.w;
  o_i0.Alpha = (tmpvar_42.w * _Color.w);
  o_i0.Specular = _Shininess;
  o = o_i0;
  float x;
  x = (o_i0.Alpha - _Cutoff);
  if ((x < 0.000000)) {
    discard;
  };
  lightDir = IN.lightDir;
  vec3 tmpvar_49;
  tmpvar_49.xyz = IN.viewDir;
  vec3 tmpvar_50;
  tmpvar_50 = normalize (tmpvar_49);
  SurfaceOutput s;
  s = o;
  vec3 lightDir_i0;
  lightDir_i0 = lightDir;
  vec3 h;
  float diff;
  vec4 c_i0;
  vec3 tmpvar_53;
  tmpvar_53 = normalize ((lightDir_i0 + tmpvar_50));
  h = tmpvar_53;
  float tmpvar_55;
  tmpvar_55 = dot (s.Normal, lightDir_i0);
  float tmpvar_56;
  tmpvar_56 = max (0.000000, tmpvar_55);
  diff = tmpvar_56;
  float tmpvar_58;
  tmpvar_58 = dot (s.Normal, h);
  float tmpvar_59;
  tmpvar_59 = max (0.000000, tmpvar_58);
  float tmpvar_61;
  tmpvar_61 = pow (tmpvar_59, (s.Specular * 128.000000));
  float tmpvar_62;
  tmpvar_62 = (tmpvar_61 * s.Gloss);
  c_i0.xyz = ((((s.Albedo * _LightColor0.xyz) * diff) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_62)) * 2.000000);
  c_i0.w = (s.Alpha + ((_LightColor0.w * _SpecColor.w) * tmpvar_62));
  c = c_i0;
  c.w = o.Alpha;
  vec4 tmpvar_13;
  tmpvar_13.xyzw = c;
  gl_FragData[0] = tmpvar_13;
}

