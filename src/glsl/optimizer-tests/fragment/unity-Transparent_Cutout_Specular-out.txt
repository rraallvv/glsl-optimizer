varying vec4 xlv_FOG;
uniform vec4 _SpecColor;
uniform float _Shininess;
uniform sampler2D _MainTex;
uniform vec4 _LightColor0;
uniform float _Cutoff;
uniform vec4 _Color;
void main ()
{
  vec3 tmpvar_5;
  tmpvar_5 = gl_TexCoord[1].xyz;
  vec3 tmpvar_7;
  tmpvar_7 = gl_TexCoord[2].xyz;
  vec3 tmpvar_9;
  tmpvar_9 = gl_TexCoord[3].xyz;
  vec4 c;
  vec4 tmpvar_42;
  tmpvar_42 = texture2D (_MainTex, gl_TexCoord[0].xy);
  vec3 tmpvar_44;
  tmpvar_44 = (tmpvar_42.xyz * _Color.xyz);
  float tmpvar_45;
  tmpvar_45 = tmpvar_42.w;
  float tmpvar_46;
  tmpvar_46 = (tmpvar_42.w * _Color.w);
  float x;
  x = (tmpvar_46 - _Cutoff);
  if ((x < 0.0)) {
    discard;
  };
  vec4 c_i0;
  float tmpvar_62;
  tmpvar_62 = (pow (max (0.0, dot (tmpvar_5, normalize ((tmpvar_7 + normalize (tmpvar_9.xyz))))), (_Shininess * 128.0)) * tmpvar_45);
  c_i0.xyz = ((((tmpvar_44 * _LightColor0.xyz) * max (0.0, dot (tmpvar_5, tmpvar_7))) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_62)) * 2.0).xyz;
  c_i0.w = (vec4((tmpvar_46 + ((_LightColor0.w * _SpecColor.w) * tmpvar_62)))).w;
  c = c_i0;
  c.w = (vec4(tmpvar_46)).w;
  gl_FragData[0] = c.xyzw;
}

