struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
struct Input {
  vec2 uv_MainTex;
  vec2 uv_BumpMap;
  vec3 viewDir;
};
varying vec4 xlv_FOG;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _ParallaxMap;
uniform float _Parallax;
uniform sampler2D _MainTex;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _BumpMap;
void main ()
{
  vec4 tmpvar_106;
  tmpvar_106 = gl_TexCoord[0].xyzw;
  vec4 c;
  SurfaceOutput o;
  Input surfIN;
  surfIN.uv_MainTex = tmpvar_106.xy;
  surfIN.uv_BumpMap = tmpvar_106.zw;
  surfIN.viewDir = gl_TexCoord[1].xyz;
  o.Albedo = vec3(0.000000, 0.000000, 0.000000);
  o.Emission = vec3(0.000000, 0.000000, 0.000000);
  o.Specular = 0.000000;
  o.Alpha = 0.000000;
  o.Gloss = 0.000000;
  Input IN_i0;
  IN_i0 = surfIN;
  SurfaceOutput o_i0;
  o_i0 = o;
  vec2 _ret_val_i0;
  vec3 v;
  vec3 tmpvar_72;
  tmpvar_72 = normalize (surfIN.viewDir);
  v = tmpvar_72;
  v.z = float(vec3((tmpvar_72.z + 0.420000)));
  _ret_val_i0 = (((texture2D (_ParallaxMap, surfIN.uv_BumpMap).w * _Parallax) - (_Parallax / 2.000000)) * (v.xy / v.z));
  IN_i0.uv_MainTex = (surfIN.uv_MainTex + _ret_val_i0);
  IN_i0.uv_BumpMap = (IN_i0.uv_BumpMap + _ret_val_i0);
  vec4 tmpvar_79;
  tmpvar_79 = (texture2D (_MainTex, IN_i0.uv_MainTex) * _Color);
  o_i0.Albedo = tmpvar_79.xyz;
  o_i0.Alpha = tmpvar_79.w;
  vec4 normal;
  normal.xy = ((texture2D (_BumpMap, IN_i0.uv_BumpMap).wy * 2.000000) - 1.000000).xy;
  normal.z = float(vec3(sqrt (((1.000000 - (normal.x * normal.x)) - (normal.y * normal.y)))));
  o_i0.Normal = normal.xyz;
  o = o_i0;
  vec4 c_i0_i1;
  c_i0_i1.xyz = ((o_i0.Albedo * _LightColor0.xyz) * ((max (0.000000, dot (o_i0.Normal, gl_TexCoord[2].xyz)) * texture2DProj (_ShadowMapTexture, gl_TexCoord[4].xyzw).x) * 2.000000)).xyz;
  c_i0_i1.w = float(vec4(o_i0.Alpha));
  c = c_i0_i1;
  c.xyz = (c_i0_i1.xyz + (o_i0.Albedo * gl_TexCoord[3].xyz)).xyz;
  gl_FragData[0] = c.xyzw;
}

